{
    "info": [
        {
            "name": "Регистрация первокурсников",
            "url": "/doku.php/first_year_registration",
            "date": "\"2023/08/31 12:52\"",
            "data": [
                "Регистрация первокурсников  Регистрация первокурсников first_year_registration Регистрация первокурсников Добро пожаловать на кафедру МОЭВМ ! Для того , чтобы комфортно себя чувствовать в течение всего периода обучения и своевременно получать нужную информацию , а такйже выполнять и сдавать задания по некоторым дисциплинам , необходимо выполнить следуюшие действия по регистрации : Завести ( если нет ) аккаунт на https : //discord.com , указать ваши реальные имя и фамилию , установить ваше фото в качестве аватара , скачать клиент . Завести ( если нет ) аккаунт на https : //github.com , указать ваши реальные имя и фамилию в поле Name , установить ваше фото в качестве аватара . Завести ( если нет ) аккаунт на https : //e.moevm.info , указать ваши реальные имя и фамилию в полях Имя и Фамилия , установить ваше фото в качестве аватара . Заполнить своими данными https : //forms.gle/SDDN3ss4o5cnYsop7 Ресурсы кафедры : Основная страница : http : //moevm.info VK : https : //vk.com/moevm_leti Email для связи с администрацией : ask ( at ) moevm.info first_year_registration.txt · ",
                "Регистрация первокурсников - ",
                "",
                "✎ Регистрация первокурсников  Регистрация первокурсников first_year_registration This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . === Регистрация первокурсников === Добро пожаловать на кафедру МОЭВМ ! Для того , чтобы комфортно себя чувствовать в течение всего периода обучения и своевременно получать нужную информацию , а такйже выполнять и сдавать задания по некоторым дисциплинам , необходимо выполнить следуюшие действия по регистрации : * Завести ( если нет ) аккаунт на https : //discord.com , указать ваши реальные имя и фамилию , установить ваше фото в качестве аватара , скачать клиент . * Завести ( если нет ) аккаунт на https : //github.com , указать ваши реальные имя и фамилию в поле * * Name * * , установить ваше фото в качестве аватара . * Завести ( если нет ) аккаунт на https : //e.moevm.info , указать ваши реальные имя и фамилию в полях * * Имя * * и * * Фамилия * * , установить ваше фото в качестве аватара . * Заполнить своими данными https : //forms.gle/SDDN3ss4o5cnYsop7 Ресурсы кафедры : * Основная страница : http : //moevm.info * VK : https : //vk.com/moevm_leti * Email для связи с администрацией : ask ( at ) moevm.info first_year_registration.txt · ",
                "Регистрация первокурсников - Old revisions  Регистрация первокурсников first_year_registration Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/08/31 12:52 Регистрация первокурсников sergey_tinyakov +268 B ( current ) 2023/07/26 13:43 Регистрация первокурсников – created mark +1.3 KB Show differences between selected revisions first_year_registration.txt · ",
                "Регистрация первокурсников - "
            ]
        },
        {
            "name": "Дипломникам (4 и 6 курс!)",
            "url": "/doku.php/diplomants:start",
            "date": "\"2024/02/21 14:23\"",
            "data": [
                "Дипломникам  Дипломникам diplomants : start Дипломникам ! ! ВАЖНО ! ! Пожалуйста , используйте для вашей пояснительной записки шаблон по ссылке : Шаблон оформления . Это специальный шаблон , в котором у стилей специальные названия . Он нужен , чтобы ваша ВКР могла быть обработана нашей системой автоматизированного нормоконтроля . Если использовать другие шаблоны , то вы столкнетесь с ОЧЕНЬ большим количеством проблем при прохождении автоматического нормоконтроля на кафедре - отклонитесь от сроков - не выйдете на защиту - возможно , придется защиту переносить на осень . Использовать для подготовки диплома google docs не рекомендуется - они портят необходимые стили и это сильно затруднит для вас проверку . Обозначения Текст ВКР == Текст диплома == Пояснительная записка == Диплом Выбор научного руководителя Список потенциальных руководителей : примеры тем ( с прошлого года ) , научных интересов + новые руководители Про темы ВКР и НИР с работы и про собственные темы Аттестции ( практики , НИР , допуск до защиты ) ( учебная практика и НИР ) Аттестация магистрантов первого семестра обучения ( производственная практика НИР ) Аттестация магистрантов второго семестра обучения ( производственная практика НИР ) Аттестация магистрантов третьего семестра обучения Аттестация за преддипломную практику ( весенний семестр 4 и 6 курса ) Допуск до защиты ВКР ( проверка демонстрационных материалов ) Материалы для подготовки к защитам Теория Как подготовить план-проспект Как писать текст научной , научно-технической работы ( ВКР ) Лист быстрой проверки статьи Как сделать обзор статьи Подготовка ВКР Презентация о выходе на защиту Порядок представления документов , бакалавры 2023 Порядок представления документов , магистры 2023 Календарь подготовки диплома ( подробный ) Пожалуйста , используйте для вашей пояснительной записки Шаблон оформления ПРИМЕР ПОЯСНИТЕЛЬНОЙ ЗАПИСКИ ВКР Балнки для оформления отзывов , рецензий , доп . разделов Методические указания по оформлению ВКР Пожалуйста , не включайте в основной текст работы фрагменты исходного кода вашего решения . В 99 % случаев , он там не нужен и создает ощущение что вы решили “ налить воды ” . Размещайте код или в Приложении , или в репозитории . В 1 % , когда ваш диплом посвящен вопросам разработки инструментов разработки / синтаксических анализаторов / генерации кода , размещение фрагментов исходного кода может быть допустимо . Рекомендуемый объём машинописного текста ВКР без приложений . Если у вас получилось больше страниц , чем максимальная планка - это не проблема , сокращать ничего не нужно : для ВКР бакалавра – 50 – 70 страниц ; для ВКР магистра – 80 – 100 страниц ; На всякий случай - если у вас в тексте очень много пустого пространства ( например , есть много листов , где по три строчки текста и/или используются интервалы больше чем необходимо и/или перед иллюстративным материалом много пространства ) , то это проблема и пустоты нужно устранять . Объем , приходящийся на эти пустоты , учтен не будет . Что должно быть в пояснительной записке к диплому - путеводитель по структуре ВКР Акт о внедрении http : //odiplom.ru/lab/akt-o-vnedrenii.html . Подготовка к докладу на защите Подготовка презентации Как выступить с докладом на защите ВКР Видео PDF Что любит спрашивать комиссиия на защите ( Календарь подготовки дипломов ( старый и краткий ) ) Полезные ссылки Список жаргонизмов и их общеупотребительных аналогов Размышления о постановке целей ( Как формулировать Проблему , Цель , Объект и Предмет исследования ) Google scholar - система поиска научных статей , также позволяет оформлять ссылки по ГОСТу Бесплатный веб-интерфейс системы `` Антиплагиат '' ( рекомендуем воспользоваться ) Data viz Project - виды диаграмм с примерами ( для тех кто думает , как лучше всего визуализировать свои результаты ) Стиль научной статьи - молодой учёный ( в полной мере применимо и для ВКР ) Полезная литература : Нора Галь - Слово живое и мертвое Writing Good Software Engineering Research Papers , Minitutorial Примеры Обзор предметной области , в котором максимально подробно описаны все необходимые вопросы Driver Assistance Systems : State-of-the-Art and Possible Improvements Вредные советы accidental aRt . When data visualization goes beautifully wrong . Для RnD магистрантов Прохождение курса на Coursera в рамках занятий по RnD магистратуре diplomants/start.txt · ",
                "Дипломникам - ",
                "",
                "Примеры тем ( с прошлого учебного года 2022-2023 ) , научные интересы и новые руководители  Дипломникам » Дипломникам » Примеры тем ( с прошлого учебного года 2022-2023 ) , научные интересы и новые руководители diplomants : start : about_supervisors Примеры тем ( с прошлого учебного года 2022-2023 ) , научные интересы и новые руководители Задача данной страницы - дать дипломникам представление о задачах и темах , по которым работают научные руководители кафедры МОЭВМ для того , чтобы было легче сделать выбор . На всякий случай - темы в правой колонке даны исключительно для информации , дипломы по ним уже были защищены . Чтобы связатся с интересующим вас научным руководителем , обратитесь к секретарю кафедры МО ЭВМ - margarita ( dot ) ladgina ( at ) moevm ( dot ) info Фамилия И.О . руководителя ВКР , место работы , должность Научные интересы Примеры тем ВКР с прошлых учебных годов Гаврилов А.В. , аспирант каф . МОЭВМ Модели и методы искусственного интеллекта для задачи эффективного распределения ресурсов в вычислительных системах Новый научный руководитель Шестопалов Р.М. , аспирант каф . МОЭВМ Модели и методы ИИ и машинного обучения для эффективной 3d-реконструкции протяженных объектов Новый научный руководитель Глазунов С.А. , аспирант каф . МОЭВМ Сегментация 3d-моделей методами ИИ , выделение дефектов и аномалий на 3d-моделях Новый научный руководитель Гиззатов А. , аспирант каф . МОЭВМ Привязка железнодорожного подвижного состава к цифровой модели пути железной дороги Новый научный руководитель Петруненко Д.А. , аспирант каф . МОЭВМ Прогнозирование изменения ситуации в мультиагентных средах реального времени Новый научный руководитель Головин А.А. , аспирант каф . МОЭВМ Разработка моделей построения и обработки графов знаний ; графовые нейронные сети Новый научный руководитель Меркулов А.М. , аспирант каф . МОЭВМ Разработка методов дообучения языковых моделей ( gpt-2 , ru gpt-3 , bert , t5-base ) с применением виртуализации Новый научный руководитель Азаревич А.Д. , аспирант каф . МОЭВМ Машинное обучение , обучение с подкреплением ; проектирование многоагентных сред , управление и взаимодействие элементов в многоагентных средах Реализация решения задачи построения маршрута с использованием алгоритмов обучения с подкреплением Доброхвалов М.О. , аспирант каф . МОЭВМ Адаптивные алгоритмы на основе ИИ для определения функционального состояния человека Исследование моделей зависимости дыхания , электрической активности кожи и вариативности сердечного ритма Разработка подхода определения частоты сердечных сокращений на основе размера зрачка , частоты моргания и движения глаз Иванов Д.В. , аспирант каф . МОЭВМ Алгоритмы управления роем дронов , пространственная разметка с помощью мобильных роботов , трехмерная реконструкция на основе изображений . Реализация бенчмарка для анализа алгоритмов извлечения особых точек RGB-изображений на точность локализации мобильного робота Корытов П.В. , аспирант каф . МОЭВМ Исследование применения федеративного подхода для анализа текста в рекомендательных сервисах Реализация решения для нечеткого сопоставления текстов с помощью нейросетевых методов Разработка модели для генерации резюме студента по набору документов с помощью глубокого обучения Шевелева А.М. , аспирант каф . МОЭВМ NP-трудные задачи : приближенные решения , приведение задач , фазовые переходы Разработка программы решения NP-полной двухуровневой задачи о назначениях в условиях фазового перехода Разработка программы решения NP-полной задачи о вершинном покрытии в условиях фазового перехода Мандрикова Б.С. , аспирант каф . МОЭВМ Машинное обучение , анализ и обработка сигналов Алгоритм определения наилучшего аппроксимирующего базиса в классе ортогональных вейвлетов Классификация данных нейтронных мониторов на основе нейронной сети Прогноз данных нейтронных мониторов на основе нейронной сети Сучков А.И. , ассистент каф . МОЭВМ Теория принятия решений , Вычислительная математика Исследование и обобщение теоремы о количестве признаков , адаптируемых к кодирующему гену Шевская Н.В. , ассистент каф . МОЭВМ Интеллектуальный анализ данных , статистические методы обработки данных , анализ и интерпретация данных , представление знаний и системы искусственного интеллекта , цифровая обработка сигналов , разработка и исследование алгоритмов , разработка прикладного программного обеспечения Разработка приложения для поиска текстовой информации в голосовых аудиозаписях Разработка алгоритма генерации ландшафта на основе графа связей трехмерных моделей Разработка приложения для первичной экспертной оценки художественного произведения Разработка сервиса для поиска деловых связей на основе мультиорграфа профеcсиональных отношений Разработка алгоритма построения модели предсказания для рекомендательной системы Разработка алгоритма решения проблемы покрытия множества Разработка алгоритма фильтрации спама gmail Разработка алгоритма предварительной группировки данных Исследование и разработка алгоритмов восстановления пропущенных значений в больших массивах данных Разработка алгоритмов экстракции признаков данных для задач прогнозирования Разработка алгоритма определения аномалий в данных Жангиров Т.Р. , ассистент каф . МОЭВМ Интеллектуальный анализ данных , статистические методы обработки данных , анализ и интерпретация данных , представление знаний и системы искусственного интеллекта , цифровая обработка сигналов , разработка и исследование алгоритмов , разработка прикладного программного обеспечения Реализация и исследование алгоритма генерации траекторий в динамической среде на основе OCTNet Сравнительный анализ методов восстановления пропущенных значений в наборе данных Анализ генетических методов обучения в задачах поиска пути Изучение влияния параметров инициализации весов на качество обучения нейронных сетей прямого распространения Разработка симулятора 2D-среды для обучения интеллектуальных агентов Разработка программного средства для визуального проектирования архитектур нейронных сетей Анализ метода обучения , подкрепляемого любопытством , в задачах поиска пути Разработка алгоритма изменения голоса на основе сверточных нейронных сетей Сравнение методов обучения и архитектур рекуррентных нейронных сетей в задаче прогнозирования Исследование методов повышения качества результата и обобщения нейронных сетей прямого распространения Исследование влияния скорости обучения на стабильность обучения нейронных сетей прямого распространения Филатов А.Ю. , ассистент каф . МОЭВМ Алгоритмы ориентирования автономных мобильных роботов ( SLAM ) Разработка алгоритма объединения карт препятствий на базе теории Демпстера-Шафера Разработка метода переиспользования карт в алгоритмах прямой визуальной одометрии Разработка метода кластеризации изображений , полученных с камер беспилотного автомобиля Чернокульский В.В. , ст . преподаватель каф . МОЭВМ Алгоритмы ориентирования автономных мобильных роботов ( SLAM ) Разработка многоуровневой модели обработки данных в сетях мобильных устройств с применением туманных технологий Разработка системы дифференциального рулевого управления на базе ROS 2 Оптимизация алгоритма ORB-SLAM2 для платформы с графической картой NVIDIA Беляев С.А. , к.т.н. , доцент каф . МОЭВМ Логическое программирование , web-разработка , системы искусственного интеллекта Разработка программы определения местонахождения игроков в виртуальном футболе Разработка программы решения школьных геометрических задач Разработка программы управления компьютерными играми Борисенко К.А. , к.т.н. , ст . преподаватель каф . МОЭВМ Сети и телекоммуникации ; технологии распределенных систем ; интеллектуальный анализ данных Разработка алгоритма рендеринга динамического облака точек для графического движка Автоматизация бизнес-процессов предприятия общественного питания Разработка мобильного приложения для ведения расписания занятий в ВУЗах Разработка алгоритма распознавания выражения лица человека в режиме реального времени на мобильных устройствах Автоматизация контроля бизнес-процессов компании с использованием системы мониторинга Разработка сервиса оплаты в push-уведомлениях с использованием платежной системы Google Pay Реализация передачи событий между внутренними и third-party сервисами в веб-приложении с микро-сервисной архитектурой с использованием брокера сообщений Прогнозирование скорости движения автомобильного потока с использованием интеллектуального анализа данных Разработка инструмента объединения и интеграции статических анализаторов кода для языка C++ Предсказание реакции покупателей на рекламную кампанию на основе интеллектуального анализа данных Разработка методики семантического анализа отзывов на платформе Steam Разработка методики оценки вероятности поступления в ЛЭТИ с учетом приоритезации выбора Разработка приложения для составления меню по веганскому принципу питания Создание приложения искусственного интеллекта для решения судоку с использованием генетического алгоритма Разработка методики классификации веб-страниц на основе элементов HTML-кода Середа А.-В.И. , д.т.н. , проф . каф . МОЭВМ Методы оптимизации , Численные методы , Математическое моделирование , Параметрическая идентификация моделей Разработка электронного практикума по вычислительной математике “ Методы решения систем линейных уравнений ” Разработка электронного практикума по методам оптимизации “ Классические методы линейного и динамического программирования ” Разработка программного приложения для масштабирования графических изображений с использованием различных методов интерполяции данных Применение теории волн Эллиота к анализу динамики развития финансовых рынков Применение декомпозиционных методов для решения блочных задач линейного программирования большой размерности Программная реализация метода решения систем линейных уравнений с использованием сингулярного разложения матрицы системы Разработка и программная реализация аппроксимации временных рядов с помощью В-сплайнов Разработка и программная реализация методов аппроксимации данных с помощью кривых Безье Программная реализация метода решения систем линейных уравнений с использованием ортогональных матриц и нормализованного процесса Калишенко Е.Л. , ст . преподаватель каф . МОЭВМ Адаптивные алгоритмы маршрутизации мобильных сетей , высокопроизводительные системы , биоинформатика Разработка стратегий планирования вычислительных потоков с целью проверки линеаризуемости lock-free алгоритмов Разработка системы управления наземными измерительными средствами Разработка плагина анализа зависимостей maven-артефактов для менеджера репозиториев Nexus Разработка отладчика для OpenCL Заславский М.М. , к.т.н. , доцент каф . МОЭВМ Обработка пространственных данных , разработка ПО для мобильных устройств , системы проверки в массовых открытых онлайн-курсах , автоматизированный анализ научных статей и докладов Разработка платформы для фотограмметрического контроля Разработка инструмента упрощения 3d-моделей Разработка инструмента сопоставления презентации и транскрипции доклада Разработка инструмента поиска плагиата в git-репозиториях Разработка инструмента анализа научных статей методами text mining Разработка инструмента фильтрации шума в облаках точек Разработка программной модели RGB-камеры Разработка инструмента сжатия облаков точек Жукова Н.А. , д.т.н. , доцент каф . МОЭВМ Обработка и анализ данных , проектирование информационных систем Применение методов нейросетевой обработки видео потоков для автоматического выявления деструктивных информационных воздействий на человека Диагностика заболеваний с применением нейросетевых методов Лавров А.А. , к.т.н. , ассистент каф . МОЭВМ Сети и телекоммуникации ; технологии распределенных систем Исследование механизмов повышения отказоустойчивости веб-приложений в платформах оркестрации контейнеров Kubernetes и Docker Swarm Разработка системы централизованного мониторинга состояния накопителей HDD и SSD Расширение функциональных возможностей автомобильных навигационных систем с учетом параметров работы светофорных объектов улично-дорожной сети и их расположения Программные средства выявления и предотвращения автоматизированного извлечения данных с веб-ресурсов Лисс А.А. , к.т.н. , доцент каф . МОЭВМ Работа с темами от индустриальных партнеров кафедры и инициативными ВКР Разработка сервиса для управления транспортировкой товаров с использованием блокчейн-технологии Разработка веб-приложения для составления расписания занятий Реализация процессов ведения единого автоматизированного учета нормативных правовых актов Разработка системы оперативного мониторинга чрезвычайных ситуаций Автоматизация процессов поддержки промежуточной аттестации студентов Применение Spring framework для разработки веб приложения на примере корпоративной социальной сети Применение нейронных сетей при распознавании и обработке результатов социально-психологического тестирования Применение алгоритмов машинного обучения для автоматического обнаружения аномальных зон по данным ультразвукового и электромагнитно-акустического сканирования Разработка обработчика аудиопотока с заданными цензурными фильтрами Применение нейронной сети для разработки модели создаваемого электроприводом усилия с целью формирования ограничения при движении Применение алгоритмов машинного обучения для обнаружения и классификации дефектных зон на видеоизображениях внутренней поверхности графитовых блоков РБМК Проектирование и разработка инструмента для звукоизвлечения с использованием программируемой платы Arduino Юшкевич И.А. , ассистент каф . МОЭВМ Безопасность компьютерных систем Разработка инструмента для коллаборации при тестировании безопасности информационных систем Черниченко Д.А. , к.т.н. , доцент каф . МОЭВМ Цифровая обработка сигналов , распознавание образов , исследование операций , системы автоматического управления Детектирование объектов на изображении с помощью сверточных нейронных сетей Разработка и применение системы машинного зрения в рамках транспортной системы предприятия Разработка алгоритма детектирования и замены объекта с помощью нейронных сетей Обнаружение и трекинг объектов на видеопотоке Попова Е.В. , к.т.н. , доцент каф . МОЭВМ Теория принятия решений , Вычислительная математика Исследование модели обращения к Web-службе ASP.NET через прокси сборку на примере разработки сервиса по аренде видеофильмов Родионов С.В. , к.т.н. , доцент каф . МОЭВМ Системы искусственного интеллекта , логическое программирование , системы автоматизированного проектирования Разработка библиотеки примеров для поддержки изучения логического программирования от Prolog к ASP Герасимова Т.В. , ст . преподаватель каф . МОЭВМ Компьютерная графика , Виртуальная реальность , языки программирования С++ , Java , С # Разработка приложения с использованием фазовых нейронных сетей для управления персонажами на Unity3D Разработка приложения с использованием интеллектуальных агентов обучения с подкреплением на Unity3D Разработка игры с использованием имитационного обучения в Unity 3D Проектирование и разработка VR-экскурсии по кафедре МОЭВМ diplomants/start/about_supervisors.txt · ",
                "Темы ВКР и НИР из внешних организаций + Собственные ( инициативные ) темы  Дипломникам » Дипломникам » Темы ВКР и НИР из внешних организаций + Собственные ( инициативные ) темы diplomants : start : vkr_external_and_self_topics Table of Contents Темы ВКР и НИР из внешних организаций + Собственные ( инициативные ) темы Темы ВКР и НИР из внешних организаций Собственные ( инициативные ) темы ВКР НИР Темы ВКР и НИР из внешних организаций + Собственные ( инициативные ) темы Для студентов существует возможность писать ВКР / НИР не только по темам от кафедры , но также использовать темы от внешних организаций или собственные темы . Наличие этой возможности не означает автоматически , что лично вам можно использовать эту опцию . Общие идеи : Диплом это ваша ответственность , мяч перманентно на вашей стороне . Поэтому ни один из предполагаемых руководителей ( ни от кафедры ни с вашей работы ) не должен за вами ходить . Вся информация о том , как писать диплом / когда и что сдавать / что и где подписать будет до вас доведена через письма от Марка Марковича , Анны Александровны + se.moevm.info ( раздел Дипломникам ) и пары по ОПНП . Если не игнорировать и внимательно изучать эти источники , то 99 % проблем вас обойдет стороной . Ниже будет описаны необходимые критерии и ограничения . Темы ВКР и НИР из внешних организаций Если вы обучаетесь по целевому договору от предприятия , то вам желатльно брать тему от этого предприятия . Требования : тема соответствует специальности , в теме есть наблюдаемый и осязаемый результат , если над вашей темой работает больше одного человека , то ваша часть обязательно должна быть сама по себе ценной , во внешней организации , откуда исходит тема , есть фактический руководитель - человек , который может вас направлять к достижению результата , фактический руководитель может не иметь ученой степени , но должен иметь подходящую должность ( программист , инженер , научный сотрудник …. ) . Алгоритм ваших действий : Вы пишите письмо Марку Марковичу и Анне Александровне , в котором описываете : текущую формулировку вашей темы планируемый результат задействованные технологии контакты человека ( фактического руководителя ВКР с вашей работы ) , кто готов по вашей теме с вами работать ) , Марк Маркович и Анна Александровна согласовывают тему ( как правило все ок , но иногда корректируем формулировку ) . Вы максимально быстро вносите скорректированную формулировку в форму сбора тем ВКР , там указываете фактического руководителя . Марк Маркович или Анна Александровна становится вашим руководителем от кафедры . Далее вы начинаете работу с фактическим руководителем . К руководителю от кафедры вы обращаетесь самостоятельно , если у вас возникают вопросы по формальной стороне вопроса или сложности . Контроль руководителя от кафедры состоит в нескольких ( буквально две три ) контрольных точках - в середине учебного года и перед выходом на защиту . Собственные ( инициативные ) темы ВКР НИР Кафедра не рекомендует вести подготовку по собственным темам , так как согласно статистике защит ( и студентов , которые на защиту не вышли ) , с данным видом тем возникает много проблем : найти руководителя очень сложно - руководители , как правило , хотят работать по своим темам + на кафедре есть руководители не из всех областей / не по всем технологиям поскольку для такой темы фокус контроля находится на стороне студента , то больше шансов упустить важные моменты по содержательности результата , часто студенты решают работать по своей теме в самый последний момент перед окончанием выбора тем ВКР НИР - в таком случае шанс найти руководителя стремится к нулю , эксперименты по подготовке таких тем без руководителя заканчиваются плачевно . Требования : тема соответствует специальности , в теме есть наблюдаемый и осязаемый результат , ваша тема обладает определенной новизной и технической сложностью : вы не изобретаете велосипед , результат , которого вы хотите достигнуть , по сложности выше чем курсовая работа , вы нашли руководителя , который согласился поддержать вашу тему ВКР/ НИР и руководить вами . Алгоритм ваших действий : Вы пишите письмо Марку Марковичу и Анне Александровне , в котором описываете : текущую формулировку вашей темы планируемый результат задействованные технологии ФИО руководителя , Марк Маркович и Анна Александровна согласовывают тему ( как правило все ок , но иногда корректируем формулировку ) . Вы максимально быстро вносите скорректированную формулировку в форму сбора тем ВКР , там указываете фактического руководителя . Далее вы начинаете работу с выбраным руководителем . diplomants/start/vkr_external_and_self_topics.txt · ",
                "Чеклист проверки статьи  Дипломникам » Дипломникам » Чеклист проверки статьи diplomants : start : paper_checklist Table of Contents Чеклист проверки статьи Необходимые требования Структура Содержание Оформление Чеклист проверки статьи Данное руководство содержит “ необходимые условия ” ( но не достаточные ) для научной статьи . Необходимые требования Структура В статье-исследовании присутствуют следующие разделы ( названия могут отличаться ) : Введение Выбор метода решения Описание метода решения Выводы Список литературы В обзорной статье присутствуют следующие разделы ( названия могут отличаться ) : Введение Обзор предметной области Сравнение различных методик решения проблемы Выводы Список литературы Содержание Введение должно обосновывать актуальность работы . В первых разделах статьи должна присутствовать четкая постановка задачи : какую цель преследовал автор в своем обзоре или исследовании . Выводы должны содержать краткие , но ёмкие формулировки результатов автора ( например выводы по итогам обзора , разработанную систему , метод или алгоритм ) ; утверждение о достижении или недостижении поставленной цели ; описание дальнейших направлений исследования . Все разделы статьи должны содержать авторские результаты хотя бы в минимальном объеме : выводы , обоснования , мат.выкладки и пр . Оформление Каждая таблица , изображение , пример кода , формула , источник в списке литературы имеет ссылку или упоминание в тексте . Таблицы и изображения имеют пронумерованные подписи . В тексте отсутствуют жаргонизмы ( тулза , скачать … ) , орфографические ошибки и личные местоимения 1 и 2 лица ( я , мы , наш , нами ) . Заготовки типовых замечаний В качестве недостатков можно отметить следующие : Отсутствует актуальность работы , не указано зачем она выполнена , кому и как нужны результаты . Отсутствует анализ аналогичных работ в данной предметной области Нет четкой постановки задачи . Нечетко cформулированы или не сформулированы вообще результаты полученные автором . Недостаточно четко поставлена решаемая задача/проблема Список литературы непредставительный , содержит , в основном , ссылки на учебные , научно-популярные и интернет-издания . diplomants/start/paper_checklist.txt · ",
                "Содержательная структура пояснительной записки для ВКР  Дипломникам » Дипломникам » Содержательная структура пояснительной записки для ВКР diplomants : start : thesis_structure Table of Contents Содержательная структура пояснительной записки для ВКР Введение Содержательные части пояснительной записки Введение Обзор предметной области Выбор ( обоснование ) [ метода ] решения / формулировка требований к решению / постановка задачи Описание [ метода ] решения Исследования свойств решения Заключение Приложения Содержательная структура пояснительной записки для ВКР Введение Данный документ описывает про что и как писать в поястнительной записке . Важно отметить , что названия почти всех разделов даны примерные и в вашей работе они могут называться иначе и/или состоять из нескольких отдельных глав . Также в данном руководстве опущены обязательные разделы , такие как “ Список используемой литературы ” , “ Список сокращений ” и т.д . Помимо этого , данные рекомендации являются не “ достаточными ” , а “ необходимыми ” . Важно : размещать в основном тексте пояснительной записки исходный код вашего решения не нужно ! Пожалуйста , не добавляйте его - это ослабляет впечатление ( диплом начинает походить плохой на отчет по лабораторной ) и комиссия начинает думать , что вы таким образом “ налили воды ” в текст . Содержательные части пояснительной записки Введение Введени обязательно должно содержать как минимум следующие микро-разделы : Актуальность решаемой в ВКР проблемы Цель работы Задачи Объект исследования Предмет исследования Практическая значимость работы При этом все микро-разделы выше ( кроме актуальности ) должны содержать свое название , выделенное жирным шрифтом , например : Цель работы : показать взаимосвязь между … Для достижения цели необходимо решить следующие задачи - задача 1 - задача 2 Объектом исследования является … Предметом исследования является Практическая значимость решения заключается в… Введение может также включать ( оформляется по аналогии с микроразделами выше ) : Научная значимость работы Опубликованные работы по теме ВКР Обзор предметной области В данном разделе необходимо с помощью литературы : Определить используемые в работе термины . Привести формальную запись решаемой проблемы . Если решаемая вами проблема сводится к математической ( в широком смысле ) задаче ( например , сортировка / классификация / кластеризация / сегментация / сжатие / предсказание … . ) , то желательно дать ее общую постановку на математическом языке . Сравнить существующие подходы к решению проблемы : привести их краткую характеристику ; сформулировать и , по возможности , обосновать критерии сравнения для подходов ; охарактеризовать каждый подход по каждому критерию ; сделать вывод о общих недостатках , общих достоинствах . Выбор ( обоснование ) [ метода ] решения / формулировка требований к решению / постановка задачи В данном разделе дается развернутая постановка задачи , решаемой в ВКР . Сама постановка это по сути развернутое и уточнение предложение вида “ Необходимо сделать … , при этом результат должен обладать следующим набором свойств : 1 ) … , 2 ) …. ” . При этом , постановка задачи должна по смыслу полностью перекликаться с целью/задачами во Введении . Обоснование постановки задачи ( требований к решению ) можно дать либо в данном либо в предыдщуем разделе . Решением может быть : программа ( как самостоятельное приложение , так и модуль/патч/драйвер и т.д . ) , алгоритм , метод , математическая модель . Описание [ метода ] решения В данном разделе необходимо подробно описать и обосновать созданное в рамках ВКР решение / метод решения . Традиционно раздел может включають в себя : Мат.аппарат используемые формализации ; ваши разработки : формальная запись , границы применимости . Архитектура программной реализации . Алгоритмы блок-схема или псевдокод , входные и выходные данные алгоритма . Сценарии использования . Используемые технологии . Структура программной реализации классы / модули / функции ; как структурные элементы программы связаны / взаимодействую друг с другом - текст и графическая схема ; как программа взаимодействует с другими системами - текст и графическая схема . Интерфейс пользователя ( пользователями могут быть не только люди , но и другие программы ) Виды : командная строка ; веб-интерфейс ; REST-интерфейс ; GUI ; сетевой протокол . Что необходимо описать : общие правила взаимодействия ; процедура авторизации ; назначение отдельных команд , ключей командной строки , запросов , экранов приложения ; последовательность использования интерфейса ( с каких команд необходимо начинать и т.д . ) ; примеры запросов для REST-интерфейсов , командной строки , сетевых протоколов и пр . Модель данных : технологии хранения ( используемые СУБД ) , ER-диаграммы , назначение и состав отдельных коллекций ( таблиц ) : какие данные хранятся , как выглядит схема данных , связи между коллекциями и их реализация , примеры хранимых данных , ограничения . Тесты : юнит-тесты , интеграционные тесты , ui-тесты . Апробация - опишите в этом разделе ( Если такое было ) как и куда было внедрено ( развернуто ваше решение ) , о статистике использования , дайте ссылки на акты о внедрении . Исследования свойств решения В разделе “ Исследование свойств решения ” необходимо исследовать качественные и количественные свойства решения и , по возможности , противопоставить их аналогам . Свойства , интересные для исследования Примеры ниже являются достаточно общими и условными - в каждой конкретной задаче как правило есть свои характеристики , которые представляют интерес . Помимо этого , только некоторые из свойств интересны в чистом виде - чаще всего их измеряют в зависимости от значений параметров модели или программы . Свойства решений для мат.моделей : существование и единственность решения , оптимальность решения , наличие сходимости и ее скорость , вычислительная сложность , точность ( аппроксимации , предсказания , распознования и т.д . ) , оптимальные значения параметров модели , точность входных данных ( например допустимое качество изображений для распознавания образов ) . Свойства решений для программ : быстродействие ( количество операций в единицу времени , пропускная способность ) , расход ресурсов ( память , пропускная способность сети , количество операций с дисковой подсистемой ) , точность ( аппроксимации , предсказания , распознования и т.д . ) , надежность . Что писать в разделе с исследованием Раздел с исследованием для программного решения может включать в себя : Описание эксперимента сценарий эксперимента входные данные измеряемые величины последовательность действий подтверждаемая или опровергаемая гипотеза методика измерения , где происходит измерение ( характеристики ПК , на котором производятся эксперименты ) с помощью каких инструментов измеряются величины ( точность измерения , алгоритм измерения ) используемые программные средства . Результаты : графики и таблицы , словесное описание характера зависимости ( “ зависимость прямо-пропорциональная ” ) , сравнение с результатами аналогов , выводы по итогам эксперимента . В случае мат.модели можно использовать аналогичный подход , если ее свойства измеряются с помощью численного эксперимента . Если свойства мат.модели определяются с помощью математических выкладок , то допустимым является более произвольный формат . Апробация решения Хорошим дополнением к исследованию является раздел про практическую аппробацию решения . Варианты аппробации : внедрение в организации , публикация программы в магазине приложений / каталоге приложений . В подобном разделе необходимо привести ссылки на опубликованное или внедренное решение , описать ( при наличии информации ) опыт использования решения реальными людьми . Заключение В заключении необходимо : кратко описать были ли решены задачи , поставленные во Введении , и показать конкретные результаты решения каждой задачи , отметить была ли достигнута цель работы , поставленная во Введении . Приложения В разделах вида “ Приложение А / Б / В … ” указывают дополнительные материалы , которые Слишком громоздкие для основного текста ( большие таблицы и рисунки ) Не относящиеся напрямую к сути работы , но частично ее поясняющие Примеры того , что нужно помещать в Приложения : Акты о внедрении , свидетельства о регистрации программ для ЭВМ , дипломы и грамоты за работу Исходный код ( если он не закрыт nda - non disclosure agreement | не является коммерческой тайной ) Таблицы размером более 60 % от листа А4 diplomants/start/thesis_structure.txt · ",
                "✎ Дипломникам  Дипломникам diplomants : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . === Дипломникам === == ! ! ВАЖНО ! ! == Пожалуйста , используйте для вашей пояснительной записки шаблон по ссылке : [ [ https : //drive.google.com/file/d/1KK7fZkAl9eWNzCQlIHm6S4NynwxhkuV9/view ? usp=share_link| Шаблон оформления ] ] . Это специальный шаблон , в котором у стилей специальные названия . Он нужен , чтобы ваша ВКР могла быть обработана нашей системой автоматизированного нормоконтроля . Если использовать другие шаблоны , то вы столкнетесь с ОЧЕНЬ большим количеством проблем при прохождении автоматического нормоконтроля на кафедре - отклонитесь от сроков - не выйдете на защиту - возможно , придется защиту переносить на осень . Использовать для подготовки диплома google docs не рекомендуется - они портят необходимые стили и это сильно затруднит для вас проверку . == Обозначения == < note > Текст ВКР == Текст диплома == Пояснительная записка == Диплом < /note > == Выбор научного руководителя == * [ [ diplomants : start : about_supervisors|Список потенциальных руководителей : примеры тем ( с прошлого года ) , научных интересов + новые руководители ] ] * [ [ diplomants : start : vkr_external_and_self_topics|Про темы ВКР и НИР с работы и про собственные темы ] ] == Аттестции ( практики , НИР , допуск до защиты ) == * * * [ [ diplomants : start : first_year_attestation| ( учебная практика и НИР ) Аттестация магистрантов первого семестра обучения ] ] * * * * * [ [ diplomants : start : first_year_spring_attestation| ( производственная практика НИР ) Аттестация магистрантов второго семестра обучения ] ] * * * * * [ [ diplomants : start : calendar| ( производственная практика НИР ) Аттестация магистрантов третьего семестра обучения ] ] * * * * * [ [ diplomants : start : diploma_attestation|Аттестация за преддипломную практику ( весенний семестр 4 и 6 курса ) ] ] * * * * * [ [ diplomants : start : slides_checklist_etu|Допуск до защиты ВКР ( проверка демонстрационных материалов ) ] ] * * == Материалы для подготовки к защитам == Теория * [ [ https : //osllblog.wordpress.com/plan-prospect/|Как подготовить план-проспект ] ] * [ [ https : //stepik.org/course/10524| Как писать текст научной , научно-технической работы ( ВКР ) ] ] * [ [ diplomants : start : paper_checklist|Лист быстрой проверки статьи ] ] * [ [ http : //wiki.osll.ru/doku.php/students : faq-paper-review|Как сделать обзор статьи ] ] Подготовка ВКР * [ [ https : //docs.google.com/presentation/d/1F-oLoxH6Ganmq71HvJMskjCuguCIY31-GDAZQEbKB4M/edit # slide=id.p|Презентация о выходе на защиту ] ] * * * [ [ https : //docs.google.com/document/d/1MAr1JpXRoX_QEy9D-3X9aSYuMSWXLPNy/edit ? usp=sharing & ouid=117429605155679612022 & rtpof=true & sd=true|Порядок представления документов , бакалавры 2023 ] ] * * * * * [ [ https : //docs.google.com/document/d/1LApnBst84uMHQogUi6HdNbO1SoUEX8p4/edit ? usp=sharing & ouid=117429605155679612022 & rtpof=true & sd=true|Порядок представления документов , магистры 2023 ] ] * * * [ [ http : //se.moevm.info/doku.php/diplomants : start : preparation_plan|Календарь подготовки диплома ( подробный ) ] ] * Пожалуйста , используйте для вашей пояснительной записки [ [ https : //drive.google.com/file/d/1KK7fZkAl9eWNzCQlIHm6S4NynwxhkuV9/view ? usp=share_link| Шаблон оформления ] ] * [ [ https : //drive.google.com/file/d/1FRpio4ABLUV1GW3A1gPtcPxNDCtQ4Or8/view ? usp=sharing|ПРИМЕР ПОЯСНИТЕЛЬНОЙ ЗАПИСКИ ВКР ] ] * [ [ https : //etu.ru/ru/studentam/dokumenty-dlya-ucheby/dlya-podgotovki-vkr|Балнки для оформления отзывов , рецензий , доп . разделов ] ] * [ [ https : //etu.ru/assets/files/obrazovatelnaya/dokumenty-dlya-obrazovatelnogo-processa/prikaz_od_0210_pril3_metodicheskie-ukazaniya-po-vypolneniyu-oformleniyu-i-podgotovke-k-zashhite-vypusknyh-kvalifikacionnyh-rabot.pdf|Методические указания по оформлению ВКР ] ] * Пожалуйста , * * не включайте в основной текст работы фрагменты исходного кода вашего решения * * . * В 99 % случаев , он там не нужен и создает ощущение что вы решили `` налить воды '' . Размещайте код или в Приложении , или в репозитории . * В 1 % , когда ваш диплом посвящен вопросам разработки инструментов разработки / синтаксических анализаторов / генерации кода , размещение фрагментов исходного кода может быть допустимо . * Рекомендуемый объём машинописного текста ВКР * * без приложений * * . Если у вас получилось больше страниц , чем максимальная планка - это не проблема , сокращать ничего не нужно : * для ВКР бакалавра – 50 – 70 страниц ; * для ВКР магистра – 80 – 100 страниц ; * На всякий случай - если у вас в тексте очень много пустого пространства ( например , есть много листов , где по три строчки текста и/или используются интервалы больше чем необходимо и/или перед иллюстративным материалом много пространства ) , то это проблема и пустоты нужно устранять . Объем , приходящийся на эти пустоты , учтен не будет . * * * [ [ diplomants : start : thesis_structure|Что должно быть в пояснительной записке к диплому - путеводитель по структуре ВКР ] ] * * * Акт о внедрении http : //odiplom.ru/lab/akt-o-vnedrenii.html . Подготовка к докладу на защите * * * [ [ diplomants : start : slides_checklist_etu| Подготовка презентации ] ] * * * Как выступить с докладом на защите ВКР * [ [ https : //www.youtube.com/watch ? v=L5MMZbOA9ww|Видео ] ] * [ [ https : //bitbucket.org/mark_zaslavskiy/teaching_meta/raw/master/slides/making_presentation.pdf|PDF ] ] * [ [ http : //se.moevm.info/doku.php/diplomants : start : slides_checklist_etu # % D1 % 87 % D1 % 82 % D0 % BE_ % D0 % BB % D1 % 8E % D0 % B1 % D0 % B8 % D1 % 82_ % D1 % 81 % D0 % BF % D1 % 80 % D0 % B0 % D1 % 88 % D0 % B8 % D0 % B2 % D0 % B0 % D1 % 82 % D1 % 8C_ % D0 % BA % D0 % BE % D0 % BC % D0 % B8 % D1 % 81 % D1 % 81 % D0 % B8 % D1 % 8F_ % D0 % B8_ % D0 % BD % D0 % B5_ % D0 % BF % D0 % BE % D0 % B4 % D1 % 81 % D1 % 82 % D0 % B0 % D0 % B2 % D0 % B8 % D1 % 82 % D1 % 8C_ % D1 % 81 % D0 % B5 % D0 % B1 % D1 % 8F_ % D0 % B2_ % D1 % 81 % D0 % BB % D0 % B0 % D0 % B9 % D0 % B4 % D0 % B0 % D1 % 85|Что любит спрашивать комиссиия на защите ] ] ( [ [ https : //osllblog.wordpress.com/thesis-calendar/|Календарь подготовки дипломов ( старый и краткий ) ] ] ) == Полезные ссылки == * [ [ https : //docs.google.com/spreadsheets/d/14EFdiwN8XWXe3j-UrKgwc0TNYJg9ZfV7V0RtuCXhJeg/edit ? usp=sharing|Список жаргонизмов и их общеупотребительных аналогов ] ] * [ [ https : //stepik.org/lesson/104086/step/3 ? unit=78652| Размышления о постановке целей ( Как формулировать Проблему , Цель , Объект и Предмет исследования ) ] ] * [ [ https : //scholar.google.ru/|Google scholar - система поиска научных статей , также позволяет оформлять ссылки по ГОСТу ] ] * [ [ https : //www.antiplagiat.ru/|Бесплатный веб-интерфейс системы `` Антиплагиат '' ( рекомендуем воспользоваться ) ] ] * [ [ http : //datavizproject.com/|Data viz Project - виды диаграмм с примерами ( для тех кто думает , как лучше всего визуализировать свои результаты ) ] ] * [ [ https : //moluch.ru/information/stil-nauchnoj-stati/|Стиль научной статьи - молодой учёный ( в полной мере применимо и для ВКР ) ] ] Полезная литература : * [ [ https : //ru.wikipedia.org/wiki/ % D0 % A1 % D0 % BB % D0 % BE % D0 % B2 % D0 % BE_ % D0 % B6 % D0 % B8 % D0 % B2 % D0 % BE % D0 % B5_ % D0 % B8_ % D0 % BC % D1 % 91 % D1 % 80 % D1 % 82 % D0 % B2 % D0 % BE % D0 % B5|Нора Галь - Слово живое и мертвое ] ] * [ [ http : //www.cs.cmu.edu/~Compose/shaw-icse03.pdf|Writing Good Software Engineering Research Papers , Minitutorial ] ] == Примеры == * Обзор предметной области , в котором максимально подробно описаны все необходимые вопросы * * * [ [ https : //fruct.org/publications/abstract20/files/Kom.pdf|Driver Assistance Systems : State-of-the-Art and Possible Improvements ] ] * * == Вредные советы == * [ [ https : //twitter.com/accidental__art|accidental aRt . When data visualization goes beautifully wrong . ] ] == Для RnD магистрантов == [ [ https : //docs.google.com/document/d/1amXxx7bhXK_SFkcLwdeouMyEMIpCsViq1NLgO-5kMd0/edit ? usp=sharing | Прохождение курса на Coursera в рамках занятий по RnD магистратуре ] ] diplomants/start.txt · ",
                "Дипломникам - Old revisions  Дипломникам diplomants : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/21 14:23 Дипломникам mark +244 B ( current ) 2024/02/20 09:02 Дипломникам mark +2 B 2024/02/02 07:47 Дипломникам mark +1.1 KB 2023/10/18 06:43 Дипломникам mark +1 B 2023/10/18 06:43 Дипломникам mark +149 B 2023/05/19 06:50 Дипломникам mark +77 B 2023/05/16 14:47 Дипломникам mark +92 B 2023/05/16 13:20 Дипломникам mark +521 B 2023/03/31 13:53 Дипломникам mark +99 B 2023/02/28 15:20 Дипломникам mark -49 B 2023/02/28 11:34 Дипломникам mark -5 B 2023/02/27 11:29 Дипломникам mark +29 B 2022/12/10 09:08 Дипломникам – external edit 127.0.0.1 ±0 B 2022/05/26 15:06 Дипломникам mark +761 B 2022/05/25 08:55 Дипломникам mark +195 B 2022/05/24 12:56 Дипломникам mark +171 B 2022/05/13 11:44 Дипломникам mark +151 B 2022/05/11 10:07 Дипломникам mark +365 B 2022/05/05 14:56 Дипломникам mark +153 B 2022/05/05 14:54 Дипломникам mark +1 B 2022/05/05 14:54 Дипломникам mark +179 B Show differences between selected revisions less recent > > diplomants/start.txt · ",
                "Дипломникам - "
            ]
        },
        {
            "name": "Аспирантам",
            "url": "/doku.php/phd:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Аспирантам  Аспирантам phd : start Table of Contents Аспирантам Аттестация Кандидатские экзамены Статьи Диссертация Защита Практические рекомендации Аспирантам Самый главный документ - Постановление Правительства РФ от 24 сентября 2013 г. N 842 `` О порядке присуждения ученых степеней '' ( с изменениями и дополнениями ) Аттестация Аттестация в конце семестра Кандидатские экзамены Билеты по философии ( старые , возможно частично не акутальные , но хорошо структурированные ) Видео-лекции для аспирантов по философии и не только ( ИТМО ) Статьи МЕТОДИЧЕСКИЕ РЕКОМЕНДАЦИИ ПО ПОДГОТОВКЕ И ОФОРМЛЕНИЮ НАУЧНЫХ СТАТЕЙ В ЖУРНАЛАХ , ИНДЕКСИРУЕМЫХ В МЕЖДУНАРОДНЫХ НАУКОМЕТРИЧЕСКИХ БАЗАХ ДАННЫХ Диссертация Поиск по всем диссертациям РФ на сайте ВАК ( в поиске доступны и тексты , и авторефераты ) ГОСТ Р 7.0.11-2011 ДИССЕРТАЦИЯ И АВТОРЕФЕРАТ ДИССЕРТАЦИИ ( как оформлять диссертацию и автореферат ) Что такое авторский лист ? Как считать печатные и авторские листы Диссертации прошлых лет , ЛЭТИ Диссертации прошлых лет , ИТМО Паспорта специальностей Защита Образцы документов для подготовке к защите Рассылка авторефератов Детальный алгоритм того , как проходит сама защита Инструмент поиска для удобного составления списка научных трудов ведущей организации / оппонентов Практические рекомендации Документы необходимо подписывать по схеме - составили черновик , показали в отдел аспирантуры и руководителю ( на предемет ошибок ) , подписали с запасным экземпляром , отсканировали и один экземпляр оставили себе . Ставьте даты и исходящие номера на документах , только если вас явно попросили . Сканируйте / фотографируйте все документы , на которых ставится хотя бы одна подпись . Держите в актуальном состоянии список публикаций / достижений с копиями основных работ . Схема кандидатской диссертации : Новая проблема - старые методы решения . Старая проблема - новые методы решения . В первую очередь от вас ждут : широкого обзора предметной области и , как следствие , эрудиции в вопросе ; понятного объяснения вашей задачи со всех сторон : бизнес-составляющая технические требования формальная постановка понимания границ применимости ваших результатов практического / теоритического результата , для которого обозначаена научная новизна , показано превосходство над аналогами ; соответствия паспорту специальности . phd/start.txt · ",
                "Аспирантам - ",
                "",
                "✎ Аспирантам  Аспирантам phd : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Аспирантам ====== * * [ [ http : //ivo.garant.ru/ # /document/70461216/paragraph/3:0|Самый главный документ - Постановление Правительства РФ от 24 сентября 2013 г. N 842 `` О порядке присуждения ученых степеней '' ( с изменениями и дополнениями ) ] ] * * ===== Аттестация ===== [ [ https : //docs.google.com/document/d/1doSuQ7hXO8P6r3WzyJCcH1Koc955AL4egyVXMgqPcQE/edit ? usp=sharing|Аттестация в конце семестра ] ] ===== Кандидатские экзамены ===== * [ [ http : //philosophy2008.wikidot.com/|Билеты по философии ( старые , возможно частично не акутальные , но хорошо структурированные ) ] ] * [ [ https : //www.youtube.com/watch ? v=W_-2E2i2R_Q & list=PLYWinHc8HXR2PvwSRyhcXWxfQ4ZgUYVop|Видео-лекции для аспирантов по философии и не только ( ИТМО ) ] ] ===== Статьи ===== * [ [ https : //rasep.ru/images/materials/ % D0 % 9C % D0 % B5 % D1 % 82 % D0 % BE % D0 % B4 % D1 % 80 % D0 % B5 % D0 % BA % D0 % BE % D0 % BC % D0 % B5 % D0 % BD % D0 % B4 % D0 % B0 % D1 % 86 % D0 % B8 % D0 % B8 % 20 % D0 % BF % D0 % BE % D0 % BB % D0 % BD % D1 % 8B % D0 % B5- % D0 % BD % D0 % B0 % 20 % D1 % 81 % D0 % B0 % D0 % B9 % D1 % 82 % 20 % D0 % 90 % D0 % 9D % D0 % A0 % D0 % 98.pdf|МЕТОДИЧЕСКИЕ РЕКОМЕНДАЦИИ ПО ПОДГОТОВКЕ И ОФОРМЛЕНИЮ НАУЧНЫХ СТАТЕЙ В ЖУРНАЛАХ , ИНДЕКСИРУЕМЫХ В МЕЖДУНАРОДНЫХ НАУКОМЕТРИЧЕСКИХ БАЗАХ ДАННЫХ ] ] ===== Диссертация ===== __ * * [ [ http : //vak.ed.gov.ru/dis-list | Поиск по всем диссертациям РФ на сайте ВАК ( в поиске доступны и тексты , и авторефераты ) ] ] * * __ * [ [ http : //example.com|ГОСТ Р 7.0.11-2011 ДИССЕРТАЦИЯ И АВТОРЕФЕРАТ ДИССЕРТАЦИИ ( как оформлять диссертацию и автореферат ) ] ] * [ [ http : //rulit.org/read/79|Что такое авторский лист ? ] ] * [ [ http : //izd-mn.com/obem-publikatsiy.html|Как считать печатные и авторские листы ] ] * [ [ http : //www.eltech.ru/ru/nauchnaya-i-innovacionnaya-deyatelnost/podgotovka-kadrov-vysshey-kvalifikacii/kandidatskie-dissertacii|Диссертации прошлых лет , ЛЭТИ ] ] * [ [ http : //fppo.ifmo.ru/ ? page1=16 & page2=52|Диссертации прошлых лет , ИТМО ] ] * [ [ http : //vak.ed.gov.ru/316|Паспорта специальностей ] ] ===== Защита ===== [ [ https : //drive.google.com/drive/folders/1lx215ZfGPV-21gMsfhBV_8yIvQJ3W1Sa ? usp=sharing|Образцы документов для подготовке к защите ] ] * [ [ https : //pikabu.ru/story/kak_ya_zashchishchal_dissertatsiyu_ili_dnevnik_molodogo_uchenogo_istoriya_shestaya_rassyilka_avtoreferatov_3816189|Рассылка авторефератов ] ] * [ [ http : //www.aspirantura.spb.ru/pamiatka/zashita.html|Детальный алгоритм того , как проходит сама защита ] ] * [ [ https : //elibrary.ru/querybox.asp ? scope=newquery|Инструмент поиска для удобного составления списка научных трудов ведущей организации / оппонентов ] ] ===== Практические рекомендации ===== * Документы необходимо подписывать по схеме - составили черновик , показали в отдел аспирантуры и руководителю ( на предемет ошибок ) , подписали с запасным экземпляром , отсканировали и один экземпляр оставили себе . * Ставьте даты и исходящие номера на документах , только если вас явно попросили . * Сканируйте / фотографируйте все документы , на которых ставится хотя бы одна подпись . * Держите в актуальном состоянии список публикаций / достижений с копиями основных работ . * Схема кандидатской диссертации : * Новая проблема - старые методы решения . * Старая проблема - новые методы решения . * В первую очередь от вас ждут : * широкого обзора предметной области и , как следствие , эрудиции в вопросе ; * понятного объяснения вашей задачи со всех сторон : * бизнес-составляющая * технические требования * формальная постановка * понимания границ применимости ваших результатов * практического / теоритического результата , для которого * обозначаена научная новизна , * показано превосходство над аналогами ; * соответствия паспорту специальности . phd/start.txt · ",
                "Аспирантам - Old revisions  Аспирантам phd : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Аспирантам ( external edit ) ( current ) 2020/08/27 09:51 Аспирантам – external edit 127.0.0.1 ±0 B 2020/01/15 07:42 Аспирантам – [ Практические рекомендации ] mark +35 B 2020/01/15 07:37 Аспирантам – [ Практические рекомендации ] mark +160 B 2020/01/15 07:35 Аспирантам – [ Защита ] mark +171 B 2019/07/25 07:07 Аспирантам – [ Аттестация ] mark +76 B 2019/07/25 07:03 Аспирантам mark +111 B 2018/12/11 14:37 Аспирантам mark +341 B 2018/12/07 09:19 Аспирантам – [ Диссертация ] mark +203 B 2018/12/04 15:23 Аспирантам – [ Практические рекомендации ] mark +220 B 2018/11/19 13:51 Аспирантам – [ Защита ] mark +191 B 2018/10/16 09:34 Аспирантам mark +1.2 KB 2018/10/10 16:06 Аспирантам – [ Защита ] mark +240 B 2018/07/05 07:09 Аспирантам mark +545 B 2018/06/25 11:35 Аспирантам – [ Кандидатские экзамены ] mark +17 B 2018/06/25 11:33 Аспирантам mark +448 B 2018/06/01 13:00 Аспирантам – [ Диссертация ] mark +120 B 2018/05/19 19:48 Аспирантам mark -170 B 2018/05/19 19:42 Аспирантам mark +36 B 2018/05/19 16:33 Аспирантам – created mark +1 KB Show differences between selected revisions phd/start.txt · ",
                "Аспирантам - "
            ]
        },
        {
            "name": "Регистрация результатов интеллектуальной деятельности (РИД)",
            "url": "/doku.php/start:rid_registration",
            "date": "\"2023/03/13 09:25\"",
            "data": [
                "Регистрация результатов интеллектуальной деятельности ( РИД )  МОЭВМ Вики » Регистрация результатов интеллектуальной деятельности ( РИД ) start : rid_registration Table of Contents Регистрация результатов интеллектуальной деятельности ( РИД ) Что можно регистрировать ? Соавторы Зачем регистрировать ? Что нужно сделать , чтобы зарегистрировать программу ? Вопросы по процедуре регистрации Примеры успешных регистраций Регистрация результатов интеллектуальной деятельности ( РИД ) На кафедре МОЭВМ предоставляется возможность студентам , аспирантам и их руководителям зарегистрировать результаты интеллектуальной деятельности – программы для ЭВМ , обладающие научной и практической значимостью . Срок оформления документов составляет 2-3 недели , регистрация длится 1.5 - 3 месяца . По итогам регистрации авторы получают свидетельство о государственной регистрации программы для ЭВМ . Что можно регистрировать ? Исходя из практики , чаще всего это : код для выпускных квалификационных работ и код внеучебных проектов кафедры МОЭВМ , реже – это курсовые работы , проекты с практик , междисциплинарные проекты . Можно зарегистрировать и ваши собственные проекты . Если вы разрабатываете код , который обладает научной и практической значимостью , то вы можете подать его на регистрацию . Соавторы Если вы хотите зарегистрировать код , написанный командой / бригадой , то все участники команды / бригады являются соавторами . Ваш руководитель является совтором программы . Часто руководитель – это сотрудник кафедры МОЭВМ . Если в вашем случае это не так ( руководитель не является сотрудником кафедры МОЭВМ ) , то вопрос о регистрации программы решается в индивидуальном порядке . Зачем регистрировать ? Свидетельство о государственной регистрации программы для ЭВМ может : Принести дополнительные баллы при поступлении в магистратуру , аспирантуру . Увеличить шансы на повышенную стипению . Усилить вашу позицию на защите выпускной квалификационной работы . Что нужно сделать , чтобы зарегистрировать программу ? Шаг 1 . Собрать исходный код проекта в документ doc / docx / odt . Правила форматирования : Times New Roman , 12 , одинарный интервал . Если получилось больше 10 страниц , можно приступать к шагу 2 . Если получилось меньше 10 страниц , то , к сожалению , код зарегистрировать не получится . При этом максимально допустимое число страниц - 50 . Если страниц кода много больше 50 , то необходимо сделать выжимку кода на < = 50 страниц . Если регистрируется большой проект и страниц много больше 50 , то можно разделить код на модули и регистрировать их отдельно , как самостоятельные программы для ЭВМ ( каждая программе не менее 10 стр . кода ) . Шаг 2 . Посоветоваться с руководителем выпускной квалификационной работы - считает ли руководитель , что разрабатываемый вами код соотвестствует критериям научной и практической значимости . Если вы пишете код в рамках дисциплины , то нужно посоветоваться с преподавателем , который ведет у вас эту дисциплину . Если руководитель / преподаватель одобрил , то приступайте к шагу 3 . Если руководитель / преподаватель не одобрил , к сожалению , зарегистировать код не получится . Шаг 3 . Связаться с ответственным за регистрацию программ на кафедре МОЭВМ ( далее – куратор ) по почте , представленной в конце инструкции . Условия рассмотрения письма : Тема письма обязательно должна содержать тэг [ МОЭВМ_РИД ] и краткое описание сути вопроса . Пример правильно оформленной темы : [ МОЭВМ_РИД ] Заявка на регистрацию от Иванова И.И . группа 8383 Обязательно ставьте в копию своего руководителя / преподавателя . Прикрепите к письму файл с исходным кодом . В теле письма : опишите , какую задачу решает программа , какие функции выполняет , прикрепите ссылку на репозиторий с исходным кодом , список авторов программы ( ФИО , группа ) , ФИО руководителя / преподавателя . При несоблюдении хотя бы одного из условий ваше письмо может быть не рассмотрено . Максимальный срок ожидания ответа – 1 неделя . Шаг 4 . Куратор вышлет пакет документов для оформления и запросит необходимые данные . Ваша задача – оперативно запонить документы и выслать их в электронном ( редактируемом ) формате обратно куратору . Шаг 5 . Куратор проверяет документы в электронном виде . Если требуются незначительные исправления , куратор вносит их самостоятельно после согласования с вами . Если нужно исправить что-то значительное , то куратор попросит это сделать вас . В среднем , проверка на данном шаге занимает 1 неделю , если требуется много исправлений – время зависит от оперативности авторов . Шаг 6 . Куратор отправляет документы на проверку в патентный отдел университета . Проверка занимает 1-2 недели . На этом этапе могут потребоваться исправления , внесение исправлений осуществляется также , как на предыдущем шаге . Шаг 7 . После успешной проверки патентным отделом куратор договаривается с авторами о порядке подписания документов . Подписание занимает , в среднем , 1 неделю . Подписанные документы куратор относит в патентный отдел , и с этого момента отсчитываются 1.5 - 3 месяца , по истечении которых будет готово Свидетельство о государственной регистрации программы для ЭВМ . Конец Контакты куратора : Долгалева Ольга Васильевна ovdolgaleva @ etu.ru ( удалите лишние пробелы после копирования почтового адреса ) Вопросы по процедуре регистрации Вопросы по процедуре регистрации задавайте ответственному за регистрацию программ на кафедре МОЭВМ ( см почту выше ) . Тема письма обязательно должна содержать тэг [ МОЭВМ_РИД ] и краткое описание сути вопроса . Пример правильно оформленной темы : [ МОЭВМ_РИД ] Вопросы про регистрацию от Иванова И.И . группа 8383 Примеры успешных регистраций Вы можете ознакомиться с примерами успешно зарегистрированных программ на сайте университета start/rid_registration.txt · ",
                "МОЭВМ Вики [ se.moevm.info ] skip to content se.moevm.info User Tools Log In Site Tools Search ToolsShow pagesourceOld revisionsBacklinksRecent ChangesMedia ManagerSitemapLog In > Recent ChangesMedia Manager",
                "Регистрация результатов интеллектуальной деятельности ( РИД ) - ",
                "",
                "МОЭВМ Вики [ se.moevm.info ] skip to content se.moevm.info User Tools Log In Site Tools Search ToolsShow pagesourceOld revisionsBacklinksRecent ChangesMedia ManagerSitemapLog In > Recent ChangesMedia Manager",
                "МОЭВМ Вики [ se.moevm.info ] skip to content se.moevm.info User Tools Log In Site Tools Search ToolsShow pagesourceOld revisionsBacklinksRecent ChangesMedia ManagerSitemapLog In > Recent ChangesMedia Manager",
                "✎ Регистрация результатов интеллектуальной деятельности ( РИД )  МОЭВМ Вики » Регистрация результатов интеллектуальной деятельности ( РИД ) start : rid_registration This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Регистрация результатов интеллектуальной деятельности ( РИД ) ====== На кафедре МОЭВМ предоставляется возможность студентам , аспирантам и их руководителям зарегистрировать результаты интеллектуальной деятельности -- программы для ЭВМ , обладающие научной и практической значимостью . Срок оформления документов составляет 2-3 недели , регистрация длится 1.5 - 3 месяца . По итогам регистрации авторы получают свидетельство о государственной регистрации программы для ЭВМ . ====== Что можно регистрировать ? ====== Исходя из практики , чаще всего это : код для выпускных квалификационных работ и код внеучебных проектов кафедры МОЭВМ , реже – это курсовые работы , проекты с практик , междисциплинарные проекты . Можно зарегистрировать и ваши собственные проекты . Если вы разрабатываете код , который обладает научной и практической значимостью , то вы можете подать его на регистрацию . ===== Соавторы ===== Если вы хотите зарегистрировать код , написанный командой / бригадой , то все участники команды / бригады являются соавторами . Ваш руководитель является совтором программы . Часто руководитель -- это сотрудник кафедры МОЭВМ . Если в вашем случае это не так ( руководитель не является сотрудником кафедры МОЭВМ ) , то вопрос о регистрации программы решается в индивидуальном порядке . ===== Зачем регистрировать ? ===== Свидетельство о государственной регистрации программы для ЭВМ может : - Принести дополнительные баллы при поступлении в магистратуру , аспирантуру . - Увеличить шансы на повышенную стипению . - Усилить вашу позицию на защите выпускной квалификационной работы . ====== Что нужно сделать , чтобы зарегистрировать программу ? ====== * * Шаг 1 * * . Собрать исходный код проекта в документ doc / docx / odt . Правила форматирования : Times New Roman , 12 , одинарный интервал . * Если получилось больше 10 страниц , можно приступать к шагу 2 . * Если получилось меньше 10 страниц , то , к сожалению , код зарегистрировать не получится . При этом максимально допустимое число страниц - 50 . Если страниц кода много больше 50 , то необходимо сделать выжимку кода на < = 50 страниц . Если регистрируется большой проект и страниц много больше 50 , то можно разделить код на модули и регистрировать их отдельно , как самостоятельные программы для ЭВМ ( каждая программе не менее 10 стр . кода ) . * * Шаг 2 * * . Посоветоваться с руководителем выпускной квалификационной работы - считает ли руководитель , что разрабатываемый вами код соотвестствует критериям научной и практической значимости . Если вы пишете код в рамках дисциплины , то нужно посоветоваться с преподавателем , который ведет у вас эту дисциплину . * Если руководитель / преподаватель одобрил , то приступайте к шагу 3 . * Если руководитель / преподаватель не одобрил , к сожалению , зарегистировать код не получится . * * Шаг 3 * * . Связаться с ответственным за регистрацию программ на кафедре МОЭВМ ( далее -- // * * куратор * * // ) по почте , представленной в конце инструкции . Условия рассмотрения письма : - Тема письма обязательно должна содержать тэг [ МОЭВМ_РИД ] и краткое описание сути вопроса . Пример правильно оформленной темы : // [ МОЭВМ_РИД ] Заявка на регистрацию от Иванова И.И . группа 8383// - Обязательно ставьте в копию своего руководителя / преподавателя . - Прикрепите к письму файл с исходным кодом . - В теле письма : * опишите , какую задачу решает программа , какие функции выполняет , * прикрепите ссылку на репозиторий с исходным кодом , * список авторов программы ( ФИО , группа ) , * ФИО руководителя / преподавателя . При несоблюдении хотя бы одного из условий ваше письмо может быть не рассмотрено . Максимальный срок ожидания ответа -- 1 неделя . * * Шаг 4 * * . // * * Куратор * * // вышлет пакет документов для оформления и запросит необходимые данные . Ваша задача -- оперативно запонить документы и выслать их в электронном ( редактируемом ) формате обратно // * * куратору * * // . * * Шаг 5 * * . // * * Куратор * * // проверяет документы в электронном виде . Если требуются незначительные исправления , // * * куратор * * // вносит их самостоятельно после согласования с вами . Если нужно исправить что-то значительное , то // * * куратор * * // попросит это сделать вас . В среднем , проверка на данном шаге занимает 1 неделю , если требуется много исправлений -- время зависит от оперативности авторов . * * Шаг 6 * * . // * * Куратор * * // отправляет документы на проверку в патентный отдел университета . Проверка занимает 1-2 недели . На этом этапе могут потребоваться исправления , внесение исправлений осуществляется также , как на предыдущем шаге . * * Шаг 7 * * . После успешной проверки патентным отделом // * * куратор * * // договаривается с авторами о порядке подписания документов . Подписание занимает , в среднем , 1 неделю . Подписанные документы // * * куратор * * // относит в патентный отдел , и с этого момента отсчитываются 1.5 - 3 месяца , по истечении которых будет готово Свидетельство о государственной регистрации программы для ЭВМ . * * Конец * * Контакты куратора : Долгалева Ольга Васильевна ovdolgaleva @ etu.ru ( удалите лишние пробелы после копирования почтового адреса ) ====== Вопросы по процедуре регистрации ====== Вопросы по процедуре регистрации задавайте ответственному за регистрацию программ на кафедре МОЭВМ ( см почту выше ) . Тема письма обязательно должна содержать тэг [ МОЭВМ_РИД ] и краткое описание сути вопроса . Пример правильно оформленной темы : // [ МОЭВМ_РИД ] Вопросы про регистрацию от Иванова И.И . группа 8383// ====== Примеры успешных регистраций ====== Вы можете ознакомиться с примерами успешно зарегистрированных программ [ [ https : //etu.ru/ru/fakultety/fkti/sostav/kafedra-moevm/patents/programmy-zaregistrirovannye-ofap/|на сайте университета ] ] start/rid_registration.txt · ",
                "Регистрация результатов интеллектуальной деятельности ( РИД ) - Old revisions  МОЭВМ Вики » Регистрация результатов интеллектуальной деятельности ( РИД ) start : rid_registration Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/03/13 09:25 Регистрация результатов интеллектуальной деятельности ( РИД ) – [ Вопросы по процедуре регистрации ] natalya.razmochaeva -77 B ( current ) 2023/03/13 09:24 Регистрация результатов интеллектуальной деятельности ( РИД ) – [ Что нужно сделать , чтобы зарегистрировать программу ? ] natalya.razmochaeva +192 B 2022/12/10 09:08 Регистрация результатов интеллектуальной деятельности ( РИД ) – external edit 127.0.0.1 ±0 B 2022/02/07 12:02 Регистрация результатов интеллектуальной деятельности ( РИД ) natalya.razmochaeva +136 B 2022/01/25 12:31 Регистрация результатов интеллектуальной деятельности ( РИД ) natalya.razmochaeva +346 B 2022/01/25 12:28 Регистрация результатов интеллектуальной деятельности ( РИД ) – [ Что нужно сделать , чтобы зарегистрировать программу ? ] natalya.razmochaeva +90 B 2022/01/25 12:24 Регистрация результатов интеллектуальной деятельности ( РИД ) – [ Зачем регистрировать ? ] natalya.razmochaeva -24 B 2022/01/25 12:21 Регистрация результатов интеллектуальной деятельности ( РИД ) natalya.razmochaeva -61 B 2022/01/25 12:09 Регистрация результатов интеллектуальной деятельности ( РИД ) – created natalya.razmochaeva +9 KB Show differences between selected revisions start/rid_registration.txt · ",
                "Регистрация результатов интеллектуальной деятельности ( РИД ) - "
            ]
        },
        {
            "name": "Часто задаваемые вопросы о зачетах, экзаменах и пересдачах",
            "url": "/doku.php/start:exams",
            "date": "\"2024/01/09 13:37\"",
            "data": [
                "Часто задаваемые вопросы о зачетах , экзаменах и пересдачах  МОЭВМ Вики » Часто задаваемые вопросы о зачетах , экзаменах и пересдачах start : exams Table of Contents Часто задаваемые вопросы о зачетах , экзаменах и пересдачах Как пользоватся страницей Положение о промежутчоной аттестации Деканат ФКТИ Определения Сроки аттестаций Виды аттестаций Ликвидация задолженностей ЧАсто задаваемые ВОпросы ( ЧАВО ) Как узнать сроки зачетной недели / экзаменационной сессии / дня качества / доп . сессии ? Как понять какая форма аттестации по предмету ? Если у меня перезащита курсовой по программированию на допсессии , допускаюсь ли я до основной сессии по остальным дисциплинам ? Я заболел и пропустил лекцию/практику/контрольную/лабораторную . Что мне делать , чтобы ликвидировать текущие задолженности ? Я заболел во время зачетной недели/сессии/доп . сессии/комиссии . Что мне делать в данном случае ? Я болею дольше месяца . Что делать ? Часто задаваемые вопросы о зачетах , экзаменах и пересдачах ! Страница в процессе наполнения ! Назначение этой страницы - собрать в одном месте , казалось бы , очевидную информацию по организации учебного процесса , которая может быть полезна первокурсникам и студентам , ранее обучавшимся в других ВУЗах . Как пользоватся страницей Данная страница содержит очень общее представление об учебном процессе . Она намеренно написана таким образом , чтобы ее не приходилось часто исправлять . Авторы рекомендуют сверять все данные с акутальной версией “ Положения о промежуточной аттестации ” , а сроки и порядок действий в текущем семестре - со специалистами из деканата ФКТИ . Положение о промежутчоной аттестации Данный документ регалментрует вопросы аттестации . Периодически , документ обновляют , поэтому чтобы его найти , необходимо открыть страницу https : //etu.ru/sveden/document/ и на ней найти ссылку “ Положение о промежутчоной аттестации …. ” , соответствующее вашей образовательной программе ( бакалавриат , магистратура , специалитет , аспирантура ) . Деканат ФКТИ Контакты деканата https : //etu.ru/ru/fakultety/fkti/kontakty Телефон деканата +7 812 234-27-46 Пожалуйста , не игнорируйте вызовы с данного номера - если вам звонят из деканата , то 100 % повод веский и в ваших интересах взять трубку . Определения Сроки аттестаций Академическая задолженность - неудовлетворительные результаты промежуточной аттестации по одному или нескольким учебным предметам , курсам , дисциплинам ( модулям ) образовательной программы или непрохождение промежуточной атгестации при отсутствии уважительных причин . Аттестация - испытания , проводимые образовательной организацией с целью контроля качества подготовки обучающихся ( студентов ) , проверки уровня их знаний , умений , навыков , освоения компетенций . Промежуточная аттестация - оценка результатов освоения студентами изучаемых дисциплин ( модулей , практик ) и других составляющих учебного плана за семестр , проводимая в соответствии с учебным планом и представляющая собой проверку их знаний , умений , навыков , полученных на этапе освоения образовательной программы ( далее - ПА ) . Текущий контроль - оценка результатов освоения студентами разделов изучаемых дисциплин и этапов выполнения других составляющих учебного плана ( научноисследовательской работы , практики и т . д . ) , проводимая в течение семестра до начала экзаменационной сессии в соответствии с утвержденным графиком . Экзаменационная / зачетная ведомость - документ , который преподаватель получает из деканата для выставления оценок по итогам аттестации . Оценка в ведомости является основной , оценка в зачетной книжке только ее дублирует . После заполнения ведомостей , преподаватель передает их в деканат - на этом возможность для получения оценки завершается ( за исключением случаев с пересдачами / исправлением оценок ) . Зачетная неделя - промежуток ( порядка недели ) идущий сразу за семестром , в который происходит аттестация студентов в виде зачетов или зачетов с оценкой . По итогу аттестации преподаватели выставляют оценки в ведомости , затем в зачетные книжки . До конца зачетной недели ведомости зачетов / зачетов с оценкой сдаются в деканат . Экзаменационная сессия - промежуток ( от недели до двух ) идущий после зачетной недели , в который происходит аттестация студентов в виде экзамена . По итогу аттестации преподаватели выставляют оценки в ведомости , затем в зачетные книжки . До конца зачетной недели ведомости экзаменов сдаются в деканат . Виды аттестаций Дифференцированный зачет зачет с оценкой , аттестационное мероприятие по изучаемой дисциплине ( модулю , практике ) , проводимое , как правило , до начала экзаменационной сессии с целью оценивания полученных теоретических знаний , умения интегрировать полученные знания и применять их при решении практических задач , оценка за которое приравнивается к экзаменационной оценке . Экзамен - аттестационное мероприятие по изучаемой дисциплине ( модулю , практике ) , проводимое , как правило , в период экзаменационной сессии с целью оценивания полученных теоретических знаний , умения интегрировать полученные знания и применять их при решении практических задач . Курсовая работа - аттестационное мероприяти по изучаемой дисциплине , которое , как правило , представляет собой создание проекта и сопровождает аттестацию в виде экзамена . Курсовая работа оценивается отдельной оценкой по пятибалльной шкале . Негативная оценка по курсовой работе является академической задолженностью . Сдавать и пересдавать экзамен по дисциплине , без получения положительной оценки по курсовой работе нельзя . Зачет - форма проверки успешного выполнения студентами лабораторных , расчетноаналитических и расчетно-графических работ , усвоения учебного материала дисциплины в ходе практических , семинарских занятий , самостоятельной работы , а также форма проверки прохождения учебной и производственной практики и вьmолнения в процессе этих практик всех учебных заданий в соответствии с утвержденной программой . Ликвидация задолженностей Если вам не удалось получить положительную оценку ( Удовлетворительно , Хорошо , Отлично ) за аттестацию по дисциплине в положенный срок ( Зачетная неделя , Экзаменационная сессия ) , то у вас формируется академическая задолженность по данной дисциплине . Ваша задача - максимально оперативно ликвидировать эту задолженность в установленном порядке , так как академические задолженности главное основание для отчисления . Для ликвидации задолженностей , как правило , есть несколько возможностей : День качества - выделенный день после экзаменационной сессии , в который можно повысить оценку по предмету . В некоторых случаях , деканат дает возможность пересдачи отрицательных оценок в день качества , для этого нужно получить документ для ликвидации задолженности . Дополнительная сессия - длительный период после дня качества , в который деканат дает возможность пересдать отрицательные оценки по предметам . Для этого студенту необходимо получить в деканате документ для ликвидации задолженности . Комиссия - последний способ ликвидации задолженности . Комиссия по предмету назначается кафедрой и в индивидуальном порядке принимает экзамен / зачет у студентов-должников . Базовый алгоритм действий для ликвидации задолженности : Заранее уточнить в деканате возможность и сроки ликвидации задолженности . Получить в деканате электронное направление на пересдачу . Предупредить преподавателя , уточнить формат ликвидации задолженности . Выполнить действия по ликвидации задолженности . Важная оговорка1 : деканат не гарантирует возможность для ликвидации задолженности для всех студентов . Например , если у вас по всем предметам долги , то шанс получить направление на пересдачу резко уменьшается . Важная оговорка2 : направление на пересдачу студент-должник запрашивает сам и в деканате лично . ЧАсто задаваемые ВОпросы ( ЧАВО ) Как узнать сроки зачетной недели / экзаменационной сессии / дня качества / доп . сессии ? Обратитесь к секретарю кафедры или в деканат . Также , эти даты размещаются вот здесь https : //etu.ru/ru/fakultety/fkti/sostav/kafedra-moevm/uchebno-prepodavatelskaya-rabota/uchebnyj-grafik Как понять какая форма аттестации по предмету ? Учебные планы размещены на стенде у канцелярии кафедры , помимо этого учебные планы доступны по ссылке https : //etu.ru/sveden/education/eduaccred/ Если у меня перезащита курсовой по программированию на допсессии , допускаюсь ли я до основной сессии по остальным дисциплинам ? Да , долг по курсовой недопускает вас только к экзамену по программированию . По остальным предметам это не накладывает дополнительных ограничений . Я заболел и пропустил лекцию/практику/контрольную/лабораторную . Что мне делать , чтобы ликвидировать текущие задолженности ? 1 . В первую очередь Вам необходимо получить справку из вашей поликлиники о том , что Вы болели в данный период . В справке должно быть указано , что она изготовлена для нашего университета СПБГЭТУ “ ЛЭТИ ” 2 . Далее эту справку необходимо отнести в медпункт ЛЭТИ в корпусе D , чтобы врач медпункта ( https : //etu.ru/ru/vospitatelnaya-i-socialnaya/upravlenie-po-socialnoj-politike/vrachebnyy-zdravpunkt ) её заверил . 3 . На следующем этапе Вы пишите объяснительную на имя своего заместителя декана ( у каждого курса свой заместитель декана по учебной работе ) . Объяснительная пишется в свободной форме на любом листе ( А4 , тетрадный и пр. ) . Шаблон объяснительной : Объяснительные пишутся строго от руки , распечатанные варианты деканатом не принимаются . У разных курсов разные зам.декана - https : //etu.ru/ru/fakultety/fkti/sostav/dekanat . ( Если у вас есть такой предмет как физкультура в расписании ) Перед сдачей справки в деканат не забудьте её показать на кафедре физкультуры , если Вам необходимо освобождение от занятий . Также преподаватель в праве попросить у вас направление на допуск к занятиям , если таковые были пропущены . В этом случае обратитесь в деканат для получения данного направления . В нем указана дисциплина , к которой вам необходим допуск , а также вид причины пропуска ( уважительная или неуважительная ) . Я заболел во время зачетной недели/сессии/доп . сессии/комиссии . Что мне делать в данном случае ? Если Вы заболели в период сдачи зачетов/экзаменов , то Вам необходимо позвонить в деканат и заранее оповестить о Вашем отсутствии . Ничего страшного в этом нет ! Самое главное - это Ваше здоровье ! Поэтому спокойно выздоравливайте , а после выздоровления со всеми справками и больничными приходите в деканат для составления индивидуального плана закрытия задолженностей . Я болею дольше месяца . Что делать ? В данном случае Вам так же необходимо оповестить деканат о Вашем отсутствии . Если Ваша болезнь длится долго , то деканат предложит оформить Вам академический отпуск по причине болезни . Все документы необходимо принести ПОСЛЕ выздоровления ! В них будет указано количество дней , проведенных на больничном , что даст возможность оформления академического отпуска https : //etu.ru/ru/vospitatelnaya-i-socialnaya/zdorove/obshhaya-informaciya-o-spb-gbuz-gorodskaya-poliklinika-n76/vrach-otvechaet-na-vopros/chto-takoe-akademicheskij-otpusk . start/exams.txt · ",
                "Часто задаваемые вопросы о зачетах , экзаменах и пересдачах - ",
                "",
                "✎ Часто задаваемые вопросы о зачетах , экзаменах и пересдачах  МОЭВМ Вики » Часто задаваемые вопросы о зачетах , экзаменах и пересдачах start : exams This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Часто задаваемые вопросы о зачетах , экзаменах и пересдачах ====== ! Страница в процессе наполнения ! Назначение этой страницы - собрать в одном месте , казалось бы , очевидную информацию по организации учебного процесса , которая может быть полезна первокурсникам и студентам , ранее обучавшимся в других ВУЗах . ===== Как пользоватся страницей ===== Данная страница содержит очень общее представление об учебном процессе . Она намеренно написана таким образом , чтобы ее не приходилось часто исправлять . Авторы рекомендуют сверять все данные с акутальной версией `` Положения о промежуточной аттестации '' , а сроки и порядок действий в текущем семестре - со специалистами из деканата ФКТИ . ==== Положение о промежутчоной аттестации ==== Данный документ регалментрует вопросы аттестации . Периодически , документ обновляют , поэтому чтобы его найти , необходимо открыть страницу https : //etu.ru/sveden/document/ и на ней найти ссылку `` * * Положение о промежутчоной аттестации .... * * '' , соответствующее вашей образовательной программе ( бакалавриат , магистратура , специалитет , аспирантура ) . ==== Деканат ФКТИ ==== Контакты деканата https : //etu.ru/ru/fakultety/fkti/kontakty Телефон деканата * * +7 812 234-27-46 * * Пожалуйста , не игнорируйте вызовы с данного номера - если вам звонят из деканата , то 100 % повод веский и в ваших интересах взять трубку . ===== Определения ===== ==== Сроки аттестаций ==== * * Академическая задолженность * * - неудовлетворительные результаты промежуточной аттестации по одному или нескольким учебным предметам , курсам , дисциплинам ( модулям ) образовательной программы или непрохождение промежуточной атгестации при отсутствии уважительных причин . * * Аттестация * * - испытания , проводимые образовательной организацией с целью контроля качества подготовки обучающихся ( студентов ) , проверки уровня их знаний , умений , навыков , освоения компетенций . * * Промежуточная аттестация * * - оценка результатов освоения студентами изучаемых дисциплин ( модулей , практик ) и других составляющих учебного плана за семестр , проводимая в соответствии с учебным планом и представляющая собой проверку их знаний , умений , навыков , полученных на этапе освоения образовательной программы ( далее - ПА ) . * * Текущий контроль * * - оценка результатов освоения студентами разделов изучаемых дисциплин и этапов выполнения других составляющих учебного плана ( научноисследовательской работы , практики и т . д . ) , проводимая в течение семестра до начала экзаменационной сессии в соответствии с утвержденным графиком . * * Экзаменационная / зачетная ведомость * * - документ , который преподаватель получает из деканата для выставления оценок по итогам аттестации . Оценка в ведомости является основной , оценка в зачетной книжке только ее дублирует . После заполнения ведомостей , преподаватель передает их в деканат - на этом возможность для получения оценки завершается ( за исключением случаев с пересдачами / исправлением оценок ) . * * Зачетная неделя * * - промежуток ( порядка недели ) идущий сразу за семестром , в который происходит аттестация студентов в виде зачетов или зачетов с оценкой . По итогу аттестации преподаватели выставляют оценки в ведомости , затем в зачетные книжки . До конца зачетной недели ведомости зачетов / зачетов с оценкой сдаются в деканат . * * Экзаменационная сессия * * - промежуток ( от недели до двух ) идущий после зачетной недели , в который происходит аттестация студентов в виде экзамена . По итогу аттестации преподаватели выставляют оценки в ведомости , затем в зачетные книжки . До конца зачетной недели ведомости экзаменов сдаются в деканат . ==== Виды аттестаций ==== * * Дифференцированный зачет зачет с оценкой , * * аттестационное мероприятие по изучаемой дисциплине ( модулю , практике ) , проводимое , как правило , до начала экзаменационной сессии с целью оценивания полученных теоретических знаний , умения интегрировать полученные знания и применять их при решении практических задач , оценка за которое приравнивается к экзаменационной оценке . * * Экзамен * * - аттестационное мероприятие по изучаемой дисциплине ( модулю , практике ) , проводимое , как правило , в период экзаменационной сессии с целью оценивания полученных теоретических знаний , умения интегрировать полученные знания и применять их при решении практических задач . * * Курсовая работа * * - аттестационное мероприяти по изучаемой дисциплине , которое , как правило , представляет собой создание проекта и сопровождает аттестацию в виде экзамена . Курсовая работа оценивается отдельной оценкой по пятибалльной шкале . Негативная оценка по курсовой работе является академической задолженностью . Сдавать и пересдавать экзамен по дисциплине , без получения положительной оценки по курсовой работе нельзя . * * Зачет * * - форма проверки успешного выполнения студентами лабораторных , расчетноаналитических и расчетно-графических работ , усвоения учебного материала дисциплины в ходе практических , семинарских занятий , самостоятельной работы , а также форма проверки прохождения учебной и производственной практики и вьmолнения в процессе этих практик всех учебных заданий в соответствии с утвержденной программой . ==== Ликвидация задолженностей ==== Если вам не удалось получить положительную оценку ( Удовлетворительно , Хорошо , Отлично ) за аттестацию по дисциплине в положенный срок ( Зачетная неделя , Экзаменационная сессия ) , то у вас формируется академическая задолженность по данной дисциплине . Ваша задача - * * максимально оперативно ликвидировать эту задолженность * * в установленном порядке , так как академические задолженности главное основание для отчисления . Для ликвидации задолженностей , как правило , есть несколько возможностей : * * * День качества * * - выделенный день после экзаменационной сессии , в который можно * * повысить * * оценку по предмету . В некоторых случаях , деканат дает возможность пересдачи отрицательных оценок в день качества , для этого нужно получить документ для ликвидации задолженности . * * * Дополнительная сессия * * - длительный период после дня качества , в который деканат дает возможность пересдать отрицательные оценки по предметам . Для этого студенту необходимо получить в деканате документ для ликвидации задолженности . * * * Комиссия * * - последний способ ликвидации задолженности . Комиссия по предмету назначается кафедрой и в индивидуальном порядке принимает экзамен / зачет у студентов-должников . Базовый алгоритм действий для ликвидации задолженности : * Заранее уточнить в деканате возможность и сроки ликвидации задолженности . * Получить в деканате * * электронное направление * * на пересдачу . * Предупредить преподавателя , уточнить формат ликвидации задолженности . * Выполнить действия по ликвидации задолженности . * * Важная оговорка1 : * * деканат не гарантирует возможность для ликвидации задолженности для всех студентов . Например , если у вас по всем предметам долги , то шанс получить направление на пересдачу резко уменьшается . * * Важная оговорка2 : * * направление на пересдачу студент-должник запрашивает сам и в деканате лично . ===== ЧАсто задаваемые ВОпросы ( ЧАВО ) ===== ==== Как узнать сроки зачетной недели / экзаменационной сессии / дня качества / доп . сессии ? ==== Обратитесь к секретарю кафедры или в деканат . Также , эти даты размещаются вот здесь https : //etu.ru/ru/fakultety/fkti/sostav/kafedra-moevm/uchebno-prepodavatelskaya-rabota/uchebnyj-grafik ==== Как понять какая форма аттестации по предмету ? ==== Учебные планы размещены на стенде у канцелярии кафедры , помимо этого учебные планы доступны по ссылке https : //etu.ru/sveden/education/eduaccred/ ==== Если у меня перезащита курсовой по программированию на допсессии , допускаюсь ли я до основной сессии по остальным дисциплинам ? ==== Да , долг по курсовой недопускает вас только к экзамену по программированию . По остальным предметам это не накладывает дополнительных ограничений . ==== Я заболел и пропустил лекцию/практику/контрольную/лабораторную . Что мне делать , чтобы ликвидировать текущие задолженности ? ==== 1 . В первую очередь Вам необходимо получить справку из вашей поликлиники о том , что Вы болели в данный период . В справке должно быть указано , что она изготовлена для нашего университета СПБГЭТУ “ ЛЭТИ ” 2 . Далее эту справку необходимо отнести в медпункт ЛЭТИ в корпусе D , чтобы врач медпункта ( https : //etu.ru/ru/vospitatelnaya-i-socialnaya/upravlenie-po-socialnoj-politike/vrachebnyy-zdravpunkt ) её заверил . 3 . На следующем этапе Вы пишите объяснительную на имя своего заместителя декана ( у каждого курса свой заместитель декана по учебной работе ) . Объяснительная пишется в свободной форме на любом листе ( А4 , тетрадный и пр. ) . Шаблон объяснительной : { { : start : объяснительная.png| } } Объяснительные пишутся строго от руки , распечатанные варианты деканатом не принимаются . У разных курсов разные зам.декана - https : //etu.ru/ru/fakultety/fkti/sostav/dekanat . ( Если у вас есть такой предмет как физкультура в расписании ) Перед сдачей справки в деканат не забудьте её показать на кафедре физкультуры , если Вам необходимо освобождение от занятий . Также преподаватель в праве попросить у вас направление на допуск к занятиям , если таковые были пропущены . В этом случае обратитесь в деканат для получения данного направления . В нем указана дисциплина , к которой вам необходим допуск , а также вид причины пропуска ( уважительная или неуважительная ) . ==== Я заболел во время зачетной недели/сессии/доп . сессии/комиссии . Что мне делать в данном случае ? ==== Если Вы заболели в период сдачи зачетов/экзаменов , то Вам необходимо позвонить в деканат и заранее оповестить о Вашем отсутствии . Ничего страшного в этом нет ! Самое главное - это Ваше здоровье ! Поэтому спокойно выздоравливайте , а после выздоровления со всеми справками и больничными приходите в деканат для составления индивидуального плана закрытия задолженностей . ==== Я болею дольше месяца . Что делать ? ==== В данном случае Вам так же необходимо оповестить деканат о Вашем отсутствии . Если Ваша болезнь длится долго , то деканат предложит оформить Вам академический отпуск по причине болезни . Все документы необходимо принести ПОСЛЕ выздоровления ! В них будет указано количество дней , проведенных на больничном , что даст возможность оформления академического отпуска https : //etu.ru/ru/vospitatelnaya-i-socialnaya/zdorove/obshhaya-informaciya-o-spb-gbuz-gorodskaya-poliklinika-n76/vrach-otvechaet-na-vopros/chto-takoe-akademicheskij-otpusk . start/exams.txt · ",
                "Часто задаваемые вопросы о зачетах , экзаменах и пересдачах - Old revisions  МОЭВМ Вики » Часто задаваемые вопросы о зачетах , экзаменах и пересдачах start : exams Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/01/09 13:37 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +4.2 KB ( current ) 2023/12/13 07:53 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +102 B 2023/12/13 07:52 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +586 B 2023/12/08 13:42 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Ликвидация задолженностей ] mark +180 B 2023/02/06 15:19 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Деканат ФКТИ ] mark +5 B 2023/02/06 15:19 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +244 B 2023/02/06 15:18 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +894 B 2023/01/27 15:21 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Как понять какая форма аттестации по предмету ? ] mark +35 B 2023/01/27 15:20 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Положение о промежутчоной аттестации ] mark +84 B 2023/01/27 15:19 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Как пользоватся страницей ] mark +101 B 2023/01/27 15:18 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Ликвидация задолженностей ] mark +7 B 2023/01/27 15:16 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +2.7 KB 2023/01/27 15:06 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах mark +1.3 KB 2023/01/13 15:02 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – [ Виды аттестаций ] mark +48 B 2023/01/13 15:00 Часто задаваемые вопросы о зачетах , экзаменах и пересдачах – created mark +7.3 KB Show differences between selected revisions start/exams.txt · ",
                "Часто задаваемые вопросы о зачетах , экзаменах и пересдачах - "
            ]
        },
        {
            "name": "Программирование",
            "url": "/doku.php/courses:programming:start",
            "date": "\"2024/03/01 20:03\"",
            "data": [
                "Программирование 1 курс  Курсы » Программирование 1 курс courses : programming : start Table of Contents Программирование 1 курс Описание дисциплины Важные ссылки Ссылки на курсы Ссылки на полезные ресурсы Программирование 1 курс Описание дисциплины Рейтинговая система Структура курса и график работ Правила сдачи работ Правила коммуникации Цифровые платформы Курсовая работа Контакты преподавателей Важные ссылки Рейтинг -- весенний семестр 2024 Ссылка на лекции весеннего семестра Образ для VirtualBox Оформление отчёта Темы лекций , весна 2024 Темы лекций , осень 2023 Записи лекций , осень 2023 + весна 2024 Архив записей лекций и тем -- осенний семестр Архив записей лекций и тем -- весенний семестр Рейтинг -- осенний семестр 2023 Распределение вариантов курсовых работ Ссылки на курсы Основной курс осеннего семестра с лабораторными работами Курс по git Курс по Linux Ссылки на полезные ресурсы Учебные пособия и книги МЕТОДИЧЕСКИЕ УКАЗАНИЯ ПО ВЫПОЛНЕНИЮ КУРСОВОЙ И ЛАБОРАТОРНЫХ РАБОТ ПО ДИСЦИПЛИНЕ ПРОГРАММИРОВАНИЕ . ПЕРВЫЙ СЕМЕСТР БАЗОВЫЕ СВЕДЕНИЯ К ВЫПОЛНЕНИЮ ЛАБОРАТОРНЫХ РАБОТ ПО ДИСЦИПЛИНЕ « ПРОГРАММИРОВАНИЕ » . ВТОРОЙ СЕМЕСТР БАЗОВЫЕ СВЕДЕНИЯ К ВЫПОЛНЕНИЮ КУРСОВОЙ РАБОТЫ ПО ДИСЦИПЛИНЕ « ПРОГРАММИРОВАНИЕ » . ВТОРОЙ СЕМЕСТР Учебно-методическое пособие ( старая версия ) C in a Nutshell , Peter Prinz & Tony Crawford Керниган , Ритчи : Язык программирования C ( книга очень популярна , можно легко найти в интернете ) Примеры и инструкции Репозиторий с примерами кода Автоматическая проверка отчёта Простейшие команды для работы в консоли Linux Простейшие команды для работы в консоли Linux с git Отладка программ на языке C Поиск ошибок с помощью gcc Автоформатирование исходного кода Перенаправление вывода в Linux Интересный пример изменения const переменной Наиболее часто встречающиеся ошибки , выдаваемые компилятором gcc Сервис для визуализации выполнения кода/работы с памятью Документация Основы Git Документация GCC Документация GNU C Library Linux kernel coding style Дополнительные источники Основы Autotools Основы CMake Основные сведения про оптимизации компилятора Стиль кода для Си используемый в Tilen MAJERLE courses/programming/start.txt · ",
                "Программирование 1 курс - ",
                "",
                "Рейтинговая система  Курсы » Программирование 1 курс » Рейтинговая система courses : programming : ranking Рейтинговая система Перед началом выполнения практических заданий по дисциплине “ программирование ” студент должен ознакомиться с данными правилами и пройти тест . Студенты не прошедшие тест считаются неприступившими к выполнению практической части дисциплины “ Тест для осеннего семестра : http : //e.moevm.info/mod/quiz/view.php ? id=760 Тест для весеннего семестра : https : //e.moevm.info/mod/quiz/view.php ? id=505 Оценка по дисциплине формируется по результатам работы студента в течении семестра на рейтинговой основе и складывается из выполнения следующих компонент ( этапов ) : Выполнение и защита лабораторных работ , Написание контрольных работ , Прохождение онлайн-курса на http : //e.moevm.info/ , Посещаемость лекций , Прохождение онлайн-курса на по программированию ( для осеннего семестра ) , Прохождение онлайн-курсов по Git и Linux ( для осеннего семестра ) . За выполнение каждой компоненты ( этапа ) студент получает определенное количество баллов , сумма которых определяет оценку за экзамен . На лабораторных работах студент либо защищает лабораторные работы , либо проходит задачи онлайн-курса . Таблица 1 . Количество заданий и баллы за их выполнение № Программирование 1 ( осенний ) семестр Кол-во баллов 1 4 лабораторные работы Создан pull-request соответствующий требованиям содержащий исходный код лабораторной работы ( загружаемый код должен быть принят системой проверки онлайн-курса ) и отчет 2 балла за каждую лабораторную работу . Суммарно 8 баллов за три лабораторные работы 2 Защита лабораторной работы ( защита возможна только после создания пулл реквеста – см . п . 1 ) { 0,1,2,3 } баллов каждая Максимум 12 баллов за три лабораторные работы 3 Контрольная работа 0-5 баллов 4 Прохождение основного онлайн-курса : https : //e.moevm.info/course/view.php ? id=8 ( балл выставляется пропорционально степени прохождения , округление к меньшему целому , только ровно 100 % дают 5 баллов . Задания непосредственно лабораторных не учитываются в этой метрике ) 0-5 баллов 5 Онлайн-курс по Git 0-3 балла 6 Онлайн-курс по Linux 0-3 балла № Программирование 2 ( весенний ) семестр Кол-во баллов 1 4 лабораторные работы 2 балла за каждый пулл реквест по лабораторной работе . Суммарно 8 баллов за 4 пулл реквеста по 4-м лабораторным работам 2 Защита лабораторной работы { 0,1,2,3 } баллов каждая защита Максимум 12 баллов за защиты 4-х лабораторных работ 3 Контрольная работа 0-3 балла 4 Прохождение соответствующего онлайн-курса : http : //e.moevm.info/enrol/index.php ? id=18 0-5 баллов ( балл выставляется пропорционально степени прохождения , округление к меньшему целому , только ровно 100 % дают 5 баллов ) Оценка , которую студент может получить в течении семестра определяется суммой набранных баллов , указанных в Таблице 2 . Таблица 2 . Формирование оценки Оценка Граница баллов осеннего семестра Граница баллов весеннего семестра Удовлетворительно > =15 > =10 Хорошо > =24 > =21 Отлично > =31 > =25 Если студента не удовлетворяет оценка по итогам работы в семестре ( на основании баллов ) , он может отказаться от нее и сдать экзамен . В таком случае , накопленная за семестр оценка теряется . Оценка за курсовую работу равняется оценке за ее защиту . Курсовая работа является допуском до экзамена . Без положительной оценки за курсовую работу оценка за экзамен выставлена не будет независимо от вашего рейтинга . Примеры расчета оценок для осеннего семестра : Удовлетворительно : Созданы pull-request ко всем лабораторным работам ( 8 баллов ) + полностью пройден основной онлайн-курс ( 5 баллов ) + контрольная написана на 2 балла ( 2 балла ) = 15 баллов Создан pull-request к одной лабораторной работе ( 2 балла ) + частично пройден основной онлайн-курс ( 3 балла ) + контрольная написана на 4 балла ( 4 балла ) + полностью пройдены онлайн курсы по Git ( 3 балла ) и Linux ( 3 балла ) = 15 баллов Хорошо : Созданы pull-request ко всем лабораторным работам ( 8 баллов ) + две лабораторные работы защищены на 5 ( 6 баллов ) + одна лабораторная защищена на 3 ( 1 балл ) + написана контрольная на 3 балла ( 3 балла ) + полностью пройдены онлайн курсы по Git ( 3 балла ) и Linux ( 3 балла ) = 24 балла Отлично : Созданы pull-request ко всем лабораторным работам ( 8 баллов ) + все лабораторные работы защищены на 4 ( 8 баллов ) + полностью пройден основной онлайн-курс ( 5 баллов ) + пройдены онлайн курсы по Git ( 3 балла ) и Linux ( 3 балла ) + написана контрольная на 4 ( 4 балла ) = 31 баллов Примеры расчета оценок для весеннего семестра : Удовлетворительно : Подготовлены PR ко всем лабораторным работам ( 8 баллов ) + Частично пройден онлайн-курс ( 3 балла ) + написана контрольная работа на 2 балла ( 2 балла ) = 13 баллов Хорошо : Пройден полностью онлайн-курс ( 5 баллов ) + Написана контрольная работа на 3 ( 3 балла ) + Подготовлены PR ко всем лабораторным работам ( 8 баллов ) + Одна лабораторная работа защищена на 1 балл ( 1 балл ) + Две лабораторных работы защищены на 2 балла каждая ( 4 балла ) + Одна лабораторная работа защищена на 3 балла ( 3 балла ) = 24 балла Отлично : Пройден полностью онлайн-курс ( 5 баллов ) + Написана контрольная работа на 3 балла ( 3 балла ) + Подготовлены PR ко всем лабораторным работам ( 8 баллов ) + Две лабораторные работы защищены на 3 балла каждая ( 6 баллов ) + Две лабораторные работы защищены на 2 балла каждая ( 4 балла ) = 26 баллов courses/programming/ranking.txt · ",
                "Структура курса и график работ  Курсы » Программирование 1 курс » Структура курса и график работ courses : programming : structure Структура курса и график работ Лабораторные работы 1 ( осеннего ) семестра : Лаб . работа №1 – Условия , циклы , оператор switch Лаб . работа №2 – Сборка программ в Си Лаб . работа №3 – Указатели и массивы Лаб . работа №4 – Обзор стандартной библиотеки Лабораторные работы 2 ( весеннего ) семестра : Лаб . работа №1 – Регулярные выражения Лаб . работа №2 – Линейные списки Лаб . работа №3 – Обход файловой системы Лаб . работа №4 – Динамические структуры данных Возможность защиты лабораторных и курсовых работ ограничена по времени . Сроки защиты указаны в Таблице 1 . Лабораторные работы , PR к которым выполнен после срока к защите не допускаются . Таблица 1 . Крайний срок выполнения работ Лаб . работа №1 Лаб . работа №2 Контрольная работа Лаб . работа №3 Лаб . работа №4 Курсовая работа Выполнение курсов на moodle и создание/исправление PR для лаб . работ и исправлений курсовой работы Создание корректного PR для допуска на защиту в 1 ( осеннем ) семестре до 23:59:59 МСК 28 сентября до 23:59:59 МСК 19 октября ориентировочно 10 ноября до 23:59:59 МСК 16 ноября до 23:59:59 МСК 30 ноября За день до индивидуальной даты защиты 27 декабря 23:59:59 Последний день защиты в 1 ( осеннем ) семестре следующая пара по расписанию после дедлайна на создание PR по указанной лаб . работе следующая пара по расписанию после дедлайна на создание PR по указанной лаб . работе Индивидуальный день защиты Создание корректного PR для допуска на защиту в 2 ( весеннем ) семестре до 23:59:59 МСК 29 февраля до 23:59:59 МСК 14 марта ориентировочно 12 апреля до 23:59:59 МСК 4 апреля до 23:59:59 МСК 25 апреля За день до индивидуальной даты защиты 5 июня 23:59:59 Последний день защиты в 2 ( весеннем ) семестре следующая пара по расписанию после дедлайна на создание PR по указанной лаб . работе следующая пара по расписанию после дедлайна на создание PR по указанной лаб . работе Индивидуальный день защиты Время везде в данном документе указано в часовом поясе GMT+3 Если после срока создания PR к лаб . работе в пулл реквесте останутся замечания , баллы за него уже нельзя будет получить ! Таким образом , для получения возможности защиты лабораторной работы , студент должен создать PR с кодом ( PR должен быть открыт и принят ботом проверки PR ) , который был принят системой проверки онлайн-курса , и отчетом в срок до дедлайна . Защита такой лабораторной возможна только на ближайшей паре . Неявка на защиту означает отказ от защиты данной лабораторной работы . В случае технических проблем на стороне системы прокторинга , возможны переносы времени защит . 0 баллов за защиту лабораторной работы можно однократно перезащитить на следующих занятиях по расписанию до дедлайна . Баллы 1 и 2 не подлежат перезащите . Защита лабораторной работы после дедлайна возможна однократно только для тех , у кого не было ни одной попытки до этого момента . Если обнаруживается , что студент защищал лабораторную , не решив задачу в дистанционном курсе , то результат защиты аннулируется без возможности перезащиты . Если обнаруживается , что студент выполнил лабораторную работу не самостоятельно , то результат защиты аннулируется без возможности перезащиты . Примечание : баллы за лабораторную работу будут зафиксированы только после того , как преподаватель смержит пулл реквест . Пока пулл реквест не смержен , баллов у студента нет , даже если он защищал лабораторную работу . courses/programming/structure.txt · ",
                "Правила сдачи работ  Курсы » Программирование 1 курс » Правила сдачи работ courses : programming : working_rules Table of Contents Правила сдачи работ Правила для лаб . работ Правила проведения контрольной и ее формат Когда зачтена оценка за работу Почему моя работа не смержена Трудности коммуникации Правила сдачи работ Правила для лаб . работ Для того , чтобы получить баллы за пулреквест нужно выполнить следующие требования : Выполнить задание к лаб . работе и загрузить задание на moodle в соответствующий модуль курса . Задание считается выполненным только в случае успешного прохождения всех тестов . Написанный код может проходить все проверки , но содержать ошибки , которые могут повлиять на оценку при защите работы , поэтому необходимо соблюдать следующие требования : правила оформления кода После выполнения работы необходимо описать свои действия и методику выполнения работы в виде отчета . Требования к отчету описаны тут : оформление отчета по лабораторной работе Загрузить файлы с кодом и отчет в систему контроля версий в соответствии с правилами : правила работы с репозиторием Создать пулреквест ( pull request ) на github странице репозитория Баллы за пулреквест будут зачтены , если Ваш пулреквест прошел все проверки . Описание меток пулреквеста и ошибок при автоматической проверке работы : < link > Для того , чтобы получить баллы за защиту , Вам необходимо выполнить следующие требования : Порядок и правила защиты и написания дистанционных работ Перезащита работы допускается только один раз , если по итогам предыдущей защиты студент получил 0 баллов . Перезащита работы возможна только на парах до дедлайна лаб . работы , которые указаны в графике . Пример : если дедлайн по работе 1 марта , и студент получил 0 баллов на защите 28 февраля , то перезащты невозможна . Если обнаруживается , что студент выполнил лабораторную работу не самостоятельно , то результат защиты аннулируется без возможности перезащиты . Правила проведения контрольной и ее формат Контрольная представляет из себя набор практических и теоретических заданий . Контрольная будет проходить в специальном курсе moodle : < link > Каждое выполненное задание дает Вам балл . Результаты контрольной могут быть аннулированы , если не соблюдать правила проведения контрольной работы . Когда зачтена оценка за работу Лабораторные и курсовые работы считаются зачтёнными ( т.е . вы получили данные баллы в рейтинг или в оценку ) только после мержа соответствующего pull-request ’ а преподавателем ! В любых иных случаях работа считается невыполненной и вы не получаете своих баллов за неё . Почему моя работа не смержена Существует несколько причин , по которым ваш pull-request не смержен ( а работа не зачтена ) : Преподаватель не проверил вашу работу/исправления . Нужно подождать некоторое время или обратиться к соответствующему разделу : Трудности коммуникации Преподаватель оставил замечания к pull-request ’ у , которые необходимо исправить в сроки , указанные в разделе Структура курса и график работ . Замечания могут быть оставлены как к коду , так и к отчёту . Данные замечания обязательны к исправлению ( как коду , так и к отчёту ! ) , и их неисправление является основанием для не мержа pull-request ’ а При защите курсовой работы первоначальную проверку pull-request ’ а осуществляет преподаватель , который принимает у вас защиту . Если он оставил замечания , то вы должны их исправить , иначе работу не будет зачтена . Однако дальнейшую проверку ( после защиты курсовой ) pull-request ’ а осуществляет преподаватель по лабораторным работам . Трудности коммуникации Если преподаватель по лабораторным работам длительное время ( больше 2 недель ) не проверяет ваш pull-request ( новый или исправленный ) , без предварительной договоренностей о времени проверок , то необходимо написать ему письмо на почту и уточнить , когда преподаватель проверить ваши pull-request ’ ы . Ответственными за вашу работу являетесь вы , и если вы не интересуетесь временем проверок ваших работ , то ответственность за последствия лежит на вас . Если преподаватель без объяснения причин и предварительных договоренностей не проверяет ваши pull-request ’ ы и не отвечает на письмо больше недели , то необходимо сделать следующее : Проверить правильность оформления своего письма и указанный в письме адрес преподавателя ( любые письма , не соответствующие требованиям оформления , игнорируются ) Отправить ваше письмо повторно , так как оно могло потеряться на почте преподавателя Если ответа нет больше недели с момента повторной отправки и вы уверены в правильности оформления письма , то добавьте в копию письма кураторов дисциплины : Тинякова Сергея и Заславского Марка Марковича courses/programming/working_rules.txt · ",
                "Цифровые платформы  Курсы » Программирование 1 курс » Цифровые платформы courses : programming : digital_platforms Table of Contents Цифровые платформы Платформы для коммцуникации Платформы для обучения Трудности при использовании цифровых платформ Цифровые платформы Платформы для коммцуникации Для коммуникации студентов и преподавателей используются следующие платформы : почта Zoom Дискорд Pruffme SberJazz При прохождении курса Вам необходимо завести аккаунты для каждой из этих платформ и проверить их работу на вашем компьютере ! В Zoom необходимо проверить работу следующих функций : демонстрация экрана , вывод звука динамиков , микрофон , работа web-камеры , запись звонка . Все эти функции могут быть использованы при прохождении курса ! Zoom и Дискорд можно использовать , как прогрмму , так и web-приложение . Использование desktop-приложений рекомендуется , поскольку они более стабильны и не зависят от браузера . Платформы для обучения Обучение может проходить с помощью платформ moodle : Курсы кафедры МО ЭВМ Курсы дисциплин других кафедр Также при защите лабораторных , курсовых работ , написании тестов и экзаменов в дистанционном формате может использоваться прокторинг . Рекомендуется использовать Google Chrome . Также рекомендуется логиниться через google-аккаунт . Обучение по дисциплинам Информатика и Программирование нацелено на операционную систему Linux . Мы рекомендуем использовать дистрибутив Ubuntu , так как он относительно прост для новых пользователей . Если вы по каким-то причинам не хотите устанавливать себе ОС Linux , то рекоммендуется установить VirtulaBox и загрузить специально подготовленный образ виртуальной машины : Образ для VirtualBox . Трудности при использовании цифровых платформ При возникновении любых трудностей необходимо связяться с преподавателем дисциплины согласно правилам : Правила коммуникации ! courses/programming/digital_platforms.txt · ",
                "Курсовая работа  Курсы » Программирование 1 курс » Курсовая работа courses : programming : course_work_autumn Курсовая работа Правила для курсовой работы Для того , чтобы защитить курсовую работу и получить оценку необходимо : Реализовать программу в соответствии с заданием и правилами : Правила создания PR к курсовой работе Важно : Для весеннего семестра предъявляются дополнительные требования : Требования к курсовым ( весенний семестр ) Написать пояснительную записку в соответствии с правилами : Оформление пояснительной записки к курсовой работе Создать пулреквест ( pull request ) . Пулреквест должен пройти все проверки для допуска к защите и должен быть сделан вовремя . Защитить курсовую работу в назначенный индивидуальный день защиты . Правила защиты курсовых работ Требования к формату входных и выходных данных для курсовой работы осеннего семестра : Требования к формату входных и выходных данных для курсовой работы . Осень Расписание защит осеннего семестра : Расписание защит Расписание защит весеннего семестра : < WIP > Формат защиты курсовых работ : Порядок сдачи курсовых работ courses/programming/course_work_autumn.txt · ",
                "Простейшие команды для работы в консоли Linux  Курсы » Программирование 1 курс » Простейшие команды для работы в консоли Linux courses : programming : linux Table of Contents Простейшие команды для работы в консоли Linux Горячие клавиши Для вывода справочной информации по какой-либо команде можно использовать одну из следующих команд : Простейшие команды для работы в консоли Linux mkdir < имя_каталога > // создание каталога nano < имя файла > // редактирование файла cd < каталог > // переход в < каталог > pwd // вывод названия текущей директории ls // вывод списка файлов в данной директории find < каталог > -name < шаблон имени файла > // поиск в данном каталоге ( и вложенных каталогах ) всех файлов , подходящих под шаблон Например : find ~ -name ' * .c' Поиск всех файлов с расширением .c в домашней директории ( ~ эквивалентно /home/ < user > ) Горячие клавиши Ctrl+R // Поиск команды в истории команд консоли ( необходимо ввести часть команды , которую вы ищете и нажимать комбинацию , пока не найдется нужная ) Ctrl+A или Home // Переход к началу строки с командой Ctrl+E или End // Переход к концу строки с командой Ctrl+W // удаление последнего слова Для вывода справочной информации по какой-либо команде можно использовать одну из следующих команд : man < имя_команды > имя_команды -h имя_команды -- help courses/programming/linux.txt · ",
                "Простейшие команды для работы в консоли Linux с git  Курсы » Программирование 1 курс » Простейшие команды для работы в консоли Linux с git courses : programming : git Простейшие команды для работы в консоли Linux с git git clone < ссылка_на_репозиторий > // Клонирование удаленного репозитория на локальную машину git checkout -b new_branch // Создать новую ветку new_branch и переключиться на неё git checkout new_branch // Переключиться на существующую ветку new_branch git add main.c // Добавить файл main.c в индекс git rm main.c // Удалить файл main.c из репозитория и из индекса git commit -m `` add main.c file '' // Создать коммит с сообщением `` add main.c file '' git push origin new_branch // Отправить ветку new_branch в главный репозиторий origin git pull origin new_branch // Извлекает и затем сливает данные из удалённой ветки new_branch в вашу текущую ветку courses/programming/git.txt · ",
                "Отладка  Курсы » Программирование 1 курс » Отладка courses : programming : debug Table of Contents Отладка Способ 1 . Отладочный вывод Основные полезные моменты Почитать подробнее Способ 2. gdb + cli Способ 3 . GDB + VSCode Архив gdb + другие ide Отладка Идея – программы часто не работают так , как того хочет программист . Какие ошибки сложнее всего искать ? Runtime errors , приводящие к немедленной остановке программы . SEGFAULT , Double free corruption и т.п Логические ошибки , которые приводят к неверному поведению программы Есть несколько техник , как искать подобные ошибки . Способ 1 . Отладочный вывод Основные полезные моменты Все отладочные выводы следует делать в поток stderr При отладке полезно использовать макросы , сообщающие , например , номер строки и имя функции Полезно уметь “ отключать ” отладочные сообщения Простой пример отладочных выводов “ на коленке ” ( более подробно этот вопрос рассматривается в статье Logging with GCC ) : # include < stdio.h > # define DEBUG int main ( ) { # ifdef DEBUG fprintf ( stderr , `` DEBUG : % s : % s : % d : % s\\n '' , __FILE__ , __func__ , __LINE__ , `` Debug message '' ) ; # endif return 0 ; } Почитать подробнее Полезные стандартные макросы Статья про простое логгирование ( Logging with GCC ) Использование syslog Способ 2. gdb + cli GDB имеет достаточно простой , но мощный командный интерфейс и хорошую справку по нему . Пример : # include < stdio.h > # include < stdarg.h > void get_int ( int * val ) { val = NULL ; printf ( `` % d\\n '' , * val ) ; } int main ( ) { printf ( `` Hello ! `` ) ; int * a ; get_int ( a ) ; return 0 ; } При запуске данной программы появляется ошибка segmentation fault , т.е попытка доступа к несуществующей/чужой памяти . Что можно сделать что её найти : Найти строчку , где происходит непосредственно обращение к невалидной памяти Изучить состояние переменных , памяти в тот момент , когда произошла ошибка Для этого необходимо : Собрать программу с добавлением отладочных данных : gcc -g myprog.c Открыть её в отладчике : gdb ./a.out Запустить программу командой run : ( gdb ) run Ввести исходные данные , если ваша программа получает какие-то данные на вход . Если требуется перенаправить на вход вашей программе содержимое файла , запустите ее с помощью ( gdb ) run < input_file.txt Вывод для программы после команды run будет следующий : ( gdb ) run Starting program : /a.out Program received signal SIGSEGV , Segmentation fault . 0x0000555555555165 in get_int ( val=0x0 ) at main.c:6 6 printf ( `` % d\\n '' , * val ) ; Теперь вы можете изучить состояние программы , например : Написать ( gdb ) where и получить подробный стектрейс , чтобы узнать в каком файле и функции произошла ошибка : ( gdb ) where # 0 0x0000555555555165 in get_int ( val=0x0 ) at main.c:6 # 1 0x00005555555551ac in main ( ) at main.c:13 Изучить состояние переменных с помощью команды “ p < variable_name > ” ( gdb ) p val $ 1 = ( int * ) 0x0 Если вы хотите изучить состояние программы ДО того , как ошибка случится , то можете использовать команду “ b ” для расстановки точек останова . https : //www.opennet.ru/docs/RUS/gdb/gdb_6.html Полезные ссылки : Краткий туториал с примерами отладки ломающихся программ Полезное про массивы и работу с памятью Полная официальная документация Способ 3 . GDB + VSCode WIP Чтобы использовать отладчик gdb из IDE VSCode , необходимо : Установить расширения для отладки и работы с языком С : Открыть ваш проект/файл в VSCode Расставить точки останова напротив интересующих вас строк кода ( нажать слева от номер строки ) Перейти в вкладку “ Debug ” Нажать комбинацию клавиш ctrl+shift+P ( откроется командная консоль vscode ) и написать debug . Выбрать С/C++ debugging Сохранить файл launch.json . Теперь у вас есть конфигурация для отладки этой программы . Запустите отладку , нажав F5 Теперь в VScode вам доступен интерфейс отладки : Справа панель управления отладкой Слева – состояние памяти и переменных Архив gdb + другие ide Любая среда разработки или даже мощный текстовый редактор обычно предоставляют вам графический интерфейс для использования gdb при отладке своих программ . Обычно он достаточно наглядный и имеет хорошее описание для каждой IDE . Вы можете самостоятельно найти описание использования отладчика в вашей любимой IDE . Для CLion можно посмотреть эти источники : Debugging in CLion Debugging in CLion on youtube courses/programming/debug.txt · ",
                "Автоформатирование исходного кода  Курсы » Программирование 1 курс » Автоформатирование исходного кода courses : programming : autocodeformatter Автоформатирование исходного кода Утилита Artistic Style : http : //astyle.sourceforge.net/ Запускается из командной строки , поддерживает C , C++ , C # и Java , позволяет много настроек форматирования . Можно установить с помощью менеджера пакетов : apt-get install astyle Но на сайте доступна более свежая версия courses/programming/autocodeformatter.txt · ",
                "Команды перенаправления вывода  Курсы » Программирование 1 курс » Команды перенаправления вывода courses : programming : io_redirection Команды перенаправления вывода || StdOut || StdErr || existing Syntax || Terminal | File || Terminal | File || file ==========++==========+==========++==========+==========++=========== > || no | yes || yes | no || overwrite > > || no | yes || yes | no || append || | || | || 2 > || yes | no || no | yes || overwrite 2 > > || yes | no || no | yes || append || | || | || & > || no | yes || no | yes || overwrite & > > || no | yes || no | yes || append || | || | || | tee || yes | yes || yes | no || overwrite | tee -a || yes | yes || yes | no || append || | || | || n.e . ( * ) || yes | no || yes | yes || overwrite n.e . ( * ) || yes | no || yes | yes || append || | || | || | & tee || yes | yes || yes | yes || overwrite | & tee -a || yes | yes || yes | yes || append courses/programming/io_redirection.txt · ",
                "✎ Программирование 1 курс  Курсы » Программирование 1 курс courses : programming : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ===== Программирование 1 курс ===== ====Описание дисциплины==== * [ [ courses : programming : ranking ] ] * [ [ courses : programming : structure ] ] * [ [ courses : programming : working_rules ] ] * [ [ inf : communication_rules ] ] * [ [ courses : programming : digital_platforms ] ] * [ [ courses : programming : course_work_autumn ] ] * [ [ courses : contacts ] ] ====Важные ссылки==== - * * [ [ https : //docs.google.com/spreadsheets/d/1Uw_-MabomGt1wJEUHq5VER1xUgBWoucpc26y2oa46cY|Рейтинг -- весенний семестр 2024 ] ] * * - * * [ [ https : //pruffme.com/landing/u2431738/pr_moevm23|Ссылка на лекции весеннего семестра ] ] * * \\\\ - [ [ programming : vbox_image ] ] \\\\ - * * [ [ https : //se.moevm.info/doku.php/courses : informatics : reportrules|Оформление отчёта ] ] * * - [ [ https : //docs.google.com/document/d/16JGxExC2Lq7aACQVQP03Cx-iDOcrFe4sfqGRv7eOcps/edit ? usp=sharing|Темы лекций , весна 2024 ] ] - [ [ https : //docs.google.com/document/d/1HEb54oTPhy_BdR-eggOTJ3gBhkpIr_2ExNOeeqkN68M/edit ? usp=sharing|Темы лекций , осень 2023 ] ] - [ [ https : //www.youtube.com/playlist ? list=PL2_lbdWa5lfOxzcfQn1cnMkz_D71hf6o_|Записи лекций , осень 2023 + весна 2024 ] ] - [ [ https : //se.moevm.info/doku.php/courses : programming : lectures|Архив записей лекций и тем -- осенний семестр ] ] \\\\ - [ [ https : //se.moevm.info/doku.php/start : prog2 : lectures |Архив записей лекций и тем -- весенний семестр ] ] \\\\ - [ [ https : //docs.google.com/spreadsheets/d/1VdUE351rvOXpVUGOLoc7PlbT1HJTMGBYtdvmE6ncBG0|Рейтинг -- осенний семестр 2023 ] ] - [ [ https : //docs.google.com/spreadsheets/d/1a7BJAPuocxQwyQwQAHrS-da9ZPPuXVDq5mYtEePqa7A/edit ? usp=sharing|Распределение вариантов курсовых работ ] ] ====Ссылки на курсы==== * [ [ https : //e.moevm.info/course/view.php ? id=8|Основной курс осеннего семестра с лабораторными работами ] ] * [ [ https : //e.moevm.info/course/view.php ? id=4|Курс по git ] ] * [ [ https : //e.moevm.info/course/view.php ? id=7|Курс по Linux ] ] -- -- ====Ссылки на полезные ресурсы==== ===Учебные пособия и книги=== - { { : courses : programming : programming_1st_course_last_ver.pdf | МЕТОДИЧЕСКИЕ УКАЗАНИЯ ПО ВЫПОЛНЕНИЮ КУРСОВОЙ И ЛАБОРАТОРНЫХ РАБОТ ПО ДИСЦИПЛИНЕ ПРОГРАММИРОВАНИЕ . ПЕРВЫЙ СЕМЕСТР } } - { { : courses : programming : programming_metoda_2nd_course_last_ver.pdf.pdf | БАЗОВЫЕ СВЕДЕНИЯ К ВЫПОЛНЕНИЮ ЛАБОРАТОРНЫХ РАБОТ ПО ДИСЦИПЛИНЕ « ПРОГРАММИРОВАНИЕ » . ВТОРОЙ СЕМЕСТР } } - { { : courses : programming : programming_cw_metoda_2nd_course_last_ver.pdf.pdf | БАЗОВЫЕ СВЕДЕНИЯ К ВЫПОЛНЕНИЮ КУРСОВОЙ РАБОТЫ ПО ДИСЦИПЛИНЕ « ПРОГРАММИРОВАНИЕ » . ВТОРОЙ СЕМЕСТР } } - { { : courses : programming : умп_программирование_.pdf | Учебно-методическое пособие ( старая версия ) } } - [ [ https : //github.com/AGHABEY/Books/blob/master/c-in-a-nutshell-o-reilly-peter-prinz-tony-crawford.pdf| C in a Nutshell , Peter Prinz & Tony Crawford ] ] - [ [ https : //www.labirint.ru/books/512950/| Керниган , Ритчи : Язык программирования C ] ] ( книга очень популярна , можно легко найти в интернете ) ===Примеры и инструкции=== - [ [ https : //github.com/moevm/pr1-examples|Репозиторий с примерами кода ] ] - [ [ https : //e.moevm.info/course/view.php ? id=81|Автоматическая проверка отчёта ] ] - [ [ courses : programming : linux|Простейшие команды для работы в консоли Linux ] ] - [ [ courses : programming : git|Простейшие команды для работы в консоли Linux с git ] ] - [ [ courses : programming : debug|Отладка программ на языке C ] ] - [ [ http : //codeforces.com/blog/entry/15547 ? locale=ru | Поиск ошибок с помощью gcc ] ] - [ [ courses : programming : autocodeformatter|Автоформатирование исходного кода ] ] - [ [ courses : programming : io_redirection|Перенаправление вывода в Linux ] ] - [ [ https : //zen.yandex.ru/media/itmentor/bolshoi-podvoh-v-malenkoi-zadache-na-iazyke-c-62cfc6cac4469e06dcaff1fa|Интересный пример изменения const переменной ] ] - [ [ http : //www.diary.ru/~referendary/p78733354.htm ? oam|Наиболее часто встречающиеся ошибки , выдаваемые компилятором gcc ] ] - [ [ http : //pythontutor.com/visualize.html # mode=edit | Сервис для визуализации выполнения кода/работы с памятью ] ] ===Документация=== - [ [ https : //git-scm.com/book/ru/v1/Основы-Git|Основы Git ] ] - [ [ https : //gcc.gnu.org/onlinedocs/|Документация GCC ] ] - [ [ https : //www.gnu.org/software/libc/manual/pdf/libc.pdf|Документация GNU C Library ] ] - [ [ https : //www.kernel.org/doc/html/v4.10/process/coding-style.html|Linux kernel coding style ] ] ===Дополнительные источники=== - [ [ https : //devmanual.gentoo.org/general-concepts/autotools/index.html|Основы Autotools ] ] - [ [ https : //neerc.ifmo.ru/wiki/index.php ? title=CMake_Tutorial|Основы CMake ] ] - [ [ https : //github.com/iakov/riscv-courses/blob/main/LFD113x-RU/Chapters/Chapter2.adoc|Основные сведения про оптимизации компилятора ] ] - [ [ https : //github.com/Majerle/c-code-style|Стиль кода для Си используемый в Tilen MAJERLE ] ] courses/programming/start.txt · ",
                "Программирование 1 курс - Old revisions  Курсы » Программирование 1 курс courses : programming : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/03/01 20:03 Программирование 1 курс sergey_tinyakov +124 B ( current ) 2024/03/01 18:11 Программирование 1 курс sergey_tinyakov +523 B 2024/02/09 19:01 Программирование 1 курс – [ Важные ссылки ] sergey_tinyakov +18 B 2024/02/09 08:18 Программирование 1 курс yaroslav.gosudarkin +12 B 2024/02/09 08:18 Программирование 1 курс yaroslav.gosudarkin +132 B 2024/02/07 14:12 Программирование 1 курс – [ Описание дисциплины ] sergey_tinyakov +25 B 2024/02/07 13:59 Программирование 1 курс sergey_tinyakov +145 B 2024/02/06 13:58 Программирование 1 курс sergey_tinyakov +2 B 2023/11/20 11:46 Программирование 1 курс sergey_tinyakov +47 B 2023/11/17 08:43 Программирование 1 курс sergey_tinyakov +180 B 2023/10/20 13:22 Программирование 1 курс sergey_tinyakov +220 B 2023/10/20 13:06 Программирование 1 курс sergey_tinyakov +87 B 2023/10/16 12:06 Программирование 1 курс – [ Важные ссылки ] sergey_tinyakov +183 B 2023/10/13 09:16 Программирование 1 курс – [ Ссылки на полезные ресурсы ] sergey_tinyakov +155 B 2023/10/02 10:37 Программирование 1 курс – [ Ссылки на полезные ресурсы ] andrey_gavrilov +10 B 2023/09/29 07:44 Программирование 1 курс sergey_tinyakov +144 B 2023/09/18 14:08 Программирование 1 курс sergey_tinyakov +605 B 2023/09/11 11:01 Программирование 1 курс sergey_tinyakov +108 B 2023/09/07 13:05 Программирование 1 курс sergey_tinyakov -101 B 2023/09/07 12:59 Программирование 1 курс sergey_tinyakov +124 B 2023/08/31 14:37 Программирование 1 курс sergey_tinyakov -3 KB Show differences between selected revisions less recent > > courses/programming/start.txt · ",
                "Программирование 1 курс - "
            ]
        },
        {
            "name": "Информатика",
            "url": "/doku.php/courses:informatics:start",
            "date": "\"2024/02/15 20:43\"",
            "data": [
                "Информатика 1 курс  Курсы » Информатика 1 курс courses : informatics : start Table of Contents Информатика 1 курс Коммуникация по электронной почте Правила и описание рейтинговой системы и защиты работ дистанционно MOOC Презентации лекций Примеры с лекций Темы для лабораторных работ Темы для контрольной работы Оформление лабораторных и курсовых работ Задачи для практических работ Ссылки на полезные ресурсы Пилотные видео-записи лекций и мастер-классов Информатика 1 курс Коммуникация по электронной почте Правила коммуникации по электронной почте Правила и описание рейтинговой системы и защиты работ дистанционно Правила и описание рейтинговой системы осень 2023 Правила и описание рейтинговой системы весна 2024 Правила дистанционной защиты лабораторных работ Требования по использованию цифровых платформ MOOC Курс `` Информатика . Практические задания . Первый семестр '' Вводный курс по Linux Вводный курс по git Bug Report форма ( для информирования о багах в дистанционном курсе ) Презентации лекций Доступ к репозиторию с презентациями лекций надо получать в индивидуальном порядке . Для этого пишите своему преподавателю на почту . Лекции 2018 Лекции 2019 Лекции 2020 Лекции 2021 Лекции 2022 Примеры с лекций Доступ к репозиторию с примерам программного кода , который демонстрируется на лекциях , надо получать в индивидуальном порядке . Для этого пишите своему преподавателю на почту . Репозиторий с примерами Темы для лабораторных работ Лабораторная работы осень 2023 Темы для контрольной работы Темы для контрольной работы Оформление лабораторных и курсовых работ Правила работы с репозиторием Оформление отчета по лабораторной работе Задачи для практических работ Задачи для начального уровня Ссылки на полезные ресурсы Репозиторий с примерами кода Простейшие команды для работы в консоли Linux Простейшие команды для работы в консоли Linux с git Основы Git Сервис для визуализации выполнения кода/работы с памятью Перенаправление вывода в Linux Linux kernel coding style Как настроить работу с репозиторием в PyCharm ( обновили ссылку ) Простые задачи для самостоятельного решения на Python Пилотные видео-записи лекций и мастер-классов Пилотные записи лекций по информатике 2021 ( ютуб-плейлист ) Пилотные записи лекций , мастер-классов и дополнительных занятий по Информатике 2020 ( ютуб-плейлист ) Лекция 2022 про работу с файлам и изображениями courses/informatics/start.txt · ",
                "Информатика 1 курс - ",
                "",
                "Темы контрольной работы  Курсы » Информатика 1 курс » Темы контрольной работы courses : informatics : test Table of Contents Темы контрольной работы 1 семестр 2 семестр Темы контрольной работы 1 семестр Введение в язык Python : работа с числами : целые , вещественные , комплексные . Операции над числами . Модуль math . Введение в язык Python : работа с логическими значениями . Введение в язык Python : работа со строками . Операции над строками . Методы работы со строками . Введение в язык Python : работа со списками . Операции над списками . Методы работы со списками . Введение в язык Python : условие , цикл . Функции range и enumerate . Введение в язык Python : создание собственных функций . Аргументы по умолчанию , именованные и позиционные аргументы . Сравнение языков Python и C : виды типизаций , управление памятью , сборка программ ( интерпретация и компиляция ) . Байт-код . Введение в язык Python : объекты , ссылки , разделяемые ссылки . Импорт модулей . Создание собственных модулей . Позиционные системы счисления : двоичная , восьмеричная , десятичная и шестнадцатеричная . Количество бит , необходимое для записи числа в n-ичной системе счисления . Булева алгебра : И , ИЛИ , ИНВЕРСИЯ , И-НЕ , ИЛИ-НЕ , ИСКЛЮЧАЮЩЕЕ ИЛИ . Таблицы истинности с помощью побитовых операций . Построение сумматора с помощью вентилей . Формат представления текстовых данных на компьютере . Формат представления чисел на компьютере . Знаковые и беззнаковые целые числа . Формат представления чисел с плавающей точкой . Одинарная и двойная точность . Специальные случаи представления . Сравнение чисел с плавающей точкой . Точность . 2 семестр Императивное и декларативное программирование : примеры Создание классов , экземпляров . Особенности ООП в Python Поля экземпляра класса Поля и методы класса . Изменяемые и неизменяемые поля Конструктор класса Скрытые поля и методы экземпляра класса Наследование Исключения . Обработка исключений , генерация исключений Функциональное программирование . Введение в анализ данных . courses/informatics/test.txt · ",
                "Требования к оформлению отчетов  Курсы » Информатика 1 курс » Требования к оформлению отчетов courses : informatics : reportrules Table of Contents Требования к оформлению отчетов Мастер-классы по оформлению с отчетами Название файла с отчетом Поля и нумерация страниц Поля Нумерация страниц Стиль форматирования для заголовков Для заголовков первого уровня Для заголовков второго уровня Стиль форматирования для основного текста Стиль форматирования для кода и примеров кода Рисунки и таблицы Как работать в редакторе Важное замечание Требования к оформлению отчетов Если по какой-то причине было принято решение не пользоваться шаблоном отчета , который можно скачать с сайта СПбГЭТУ “ ЛЭТИ ” ( раздел Студентам = > Документы для учебы , прямая ссылка на документ ) , то рекомендации , изложенные далее , помогут вам оформить отчет в соответствии с правилами , едиными для всех студентов и работников СПбГЭТУ “ ЛЭТИ ” . Мастер-классы по оформлению с отчетами Мастер-класс от 5 декабря 2020 ( ПМиИ ) Мастер-класс от 5 декабря 2020 ( ПИ ) Название файла с отчетом Называть файлы с отчетом требуется согласно правилам работы с Github Правила работы с Github Поля и нумерация страниц Настраиваются для всего документа : Поля Правое – 1,5 см . Левое - 3 см . Верхнее - 2 см . Нижнее - 2 см . Нумерация страниц Нумерация страниц должена быть на всех страницах , кроме титульного листа . Титульный лист включается в общую нумерацию , номер на нем не ставится . Номер страницы обычно - внизу справа . Стиль форматирования для заголовков Заголовки обозначают начало нового раздела , представляют собой название раздела . Заголовки разделяются по уровням . Уровни заголовков должны соблюдать иерархию , например : Заголовок первого уровня Заголовок второго уровня Еще один заголовок второго уровня Следующий заголовок первого уровня Вложенность заголовков должна быть не больше 3-х уровней . Обратите внимание , что для основных разделов лабораторной работы используются заголовки только 2-го уровня , а для приложений к отчету - заголовки 1-го уровня . Для заголовков первого уровня Стиль « Заголовок 1 » Шрифт – Times New Roman . Размер – 14 . Выравнивание – по центру . Красная строка – 0 . Буквы ( видоизменение ) – все прописные . Междустрочный интервал – 1.5 . Выделение ( начертание ) – полужирный . Для заголовков второго уровня Стиль « Заголовок 2 » Шрифт – Times New Roman . Размер – 14 . Выравнивание – по ширине . Красная строка – 1,25 . Междустрочный интервал – 1.5 . Выделение ( начертание ) – полужирный . Стиль форматирования для основного текста Основной текст - тот , что размещен внутри разделов . Стиль « Базовый » или Стиль « Основной текст » Шрифт – Times New Roman . Размер шрифта ( кегль ) – 14 . Междустрочный интервал – 1,5 . Красная строка ( Абзац , Отступ ) – 1,25 см . Выравнивание – по ширине . Стиль форматирования для кода и примеров кода Обычно весь разработанный код размещают в приложение к отчету . Но если вам удалось придумать очень интересное , хитрое и/или гибкое решение , допустимо привести пример программного кода ( желательно не более 5 строк ) . Стиль « Листинг » Шрифт – Courier New . Размер шрифта ( кегль ) – 11 . Междустрочный интервал – 1 ( Одинарный ) . Красная строка ( Абзац , Отступ ) – 0 . Выравнивание – по ширине . Рисунки и таблицы Оформление рисунков Необходимо иметь ввиду , что сначала должна быть в тексте ссылка на рисунок ( например , “ блок-схему алгоритма см . на рис . 1 ” ) , а только потом – рисунок . Стиль « Рисунок » ( унаследован от стиля « Название » ) Расположение рисунка – по центру . После рисунка – одинарный междустрочный интервал . Название рисунка ( без точки в конце ) : Рисунок < номер > – < Название рисунка > Расположение – под рисунком по центру . Шрифт – Times New Roman . Размер – 14 . Пример ( рамка вокруг изображения дополнительно не ставится ) : Оформление таблиц Необходимо иметь ввиду , что сначала должна быть в тексте ссылка на таблицу , а только потом – таблица . Стиль « Таблица » ( унаследован от стиля « Название » ) Шрифт в таблице – Times New Roman . Размер – 14 ( если таблица больше 5 строк – 12 ) . Междустрочный интервал – Одинарный . Красная строка – 0 . У таблицы должно быть название ( без точки в конце ) : Таблица < номер > – < Название таблицы > Расположение – над таблицей . Выравнивание – по левому краю . Шрифт – Times New Roman . Размер – 14 . Пример : Как работать в редакторе Для создания примеров оформления текста отчета о выполнении лабораторной работы использовался редактор LibreOffice Writer 6.1.2 . Редактор LibreOffice уже давно существует , и в сети Интернет накопилось достаточное количество информации , чтобы суметь самостоятельно найти ответы на все вопросы . Чтобы подогреть интерес , далее - краткие инструкции по работе в редакторе . Настройка полей документа В редакторе LibreOffice поля можно настроить поля документа через вкладку “ Формат ” ⇒ “ Страница ” : Номера страниц Происходит за несколько простых шагов : Щелкнуть левой кнопкой мыши на поле отступа от нижнего края листа , после чего под ним появится всплывающая кнопка : Нажатие на “ + ” добавляет нижний колонтитул . Курсор “ мигает ” в нижнем колонтитуле , переходим к следующему шагу : “ Вставка ” ⇒ “ Номер страницы ” : В том месте , где мигал курсор , появился номер страницы . Обычно для номеров страниц делают выравнивание по правому краю . Убираем нумерацию с титульного листа : Особый колонтитул для титульного листа можно установить через “ Формат ” ⇒ “ Титульная страница ” : Подробнее о нумерации страниц можно ознакомиться здесь . Работа со стилями Обязательное условие - в отчете надо работать со стилями . Список всех возможных стилей можно открыть с помощью кнопки на боковой панели : Понадобятся стили : Уже встроенные в редактор ( их настраивают в соответствии с требованиями ) : Основной текст Заголовок 1 Заголовок 2 Название ⇒ Таблица Название ⇒ Рисунок И созданный вручную : Листинг ( в списке основных его сразу нет , создается отдельно ) Перейти в Настройки какого-либо стиля можно с помощью правой кнопки мыши и нажатия “ Изменить ” : ( как можно было догадаться , с помощью кнопки “ Создать ” можно создать свой собственный стиль , как “ Листинг ” ) . По нажатию на “ Изменить ” открывается окно с большим числом настроек . Понадобятся лишь некоторые из них . На примере стиля “ Основной текст ” рассмотрим : Отступы и интервалы для стиля “ Основной текст ” Выравнивание для стиля “ Основной текст ” Шрифт для стиля “ Основной текст ” Для стиля “ Заголовок 1 ” понадобится еще одна вкладка настроек : Прописные буквы для стиля “ Заголовок 1 ” Применение стилей осуществляется просто : курсор надо поставить в тексте абзаца ( или выделить весь абзац ) и выбрать интересующий стиль . Важное замечание Содержимое отчетов должно обсуждаться в индивидуальном порядке с преподавателями лабораторных и практических работ . Отходить от указанных выше рекомендаций можно только по разрешению или указанию преподавателя . Приятный бонус для тех , кто устоял и дочитал до конца - ссылка на файл .odt с настроенными стилями и подсказками по оформлению : шаблон_отчета_по_лаб_работе_v3.odt . Также прикрепляем обновленную версию очтета в .doc формате с расширенными комментариями от 2022 : template_report.doc Мы постарались сделать шаблон и инструкцию к нему в соответствии с ГОСТ 7.32-2001 и требованиями СПбГЭТУ “ ЛЭТИ ” . Если вы нашли грубое несоответсвие с ГОСТом или требованиями СПбГЭТУ “ ЛЭТИ ” , свяжитесь с преподавателем Натальей Владимировной Шевской . courses/informatics/reportrules.txt · ",
                "Простые задачи  Курсы » Информатика 1 курс » Простые задачи courses : informatics : extra_tasks Table of Contents Простые задачи Задачи на списки Задачи на строки Простые задачи 3 Написать программу , которая выводит строку “ HELLO WORLD ! ” на консоль . 3 На вход подаются два целых числа если первое больше второго , вывести их сумму если они равны , вывести 0 если второе больше первого , вывести их произведение . 3 Найти и вывести максимальное число из трех целых чисел ( числа вводятся с консоли ) . 3 Заполнить значениями , введенными с клавиатуры , одномерный список целых чисел длиной 15 и вывести эти значения на консоль . 3 Заполнить значениями , введенными с клавиатуры , одномерный список целых чисел длиной 15 и вывести эти значения на консоль в обратном порядке . 3 Найти и вывести максимальное число из 15 целых чисел ( числа вводятся с консоли ) . 3 Найти и вывести первое отрицательное число из 3 введенных целых чисел . 3 Найти и вывести первое отрицательное число из 15 введенных целых чисел . 3 Найти и вывести последнее отрицательное число из 15 введенных целых чисел . 3 Найти и вывести среднее арифметическое 3 введенных целых чисел . 3 Найти и вывести среднее арифметическое 15 введенных целых чисел . 3 Найти и вывести индекс первого символа пробела из 3 введенных символов ( пробел вводится обязательно ) . 3 Найти и вывести индекс первого символа пробела из 15 введенных символов ( пробел вводится обязательно ) . 3 Посчитать и вывести количество пробелов в 15 введенных символах . 3 Посчитать и вывести количество пробелов и восклицательных знаков в 15 введенных символах 3 Вывести индексы пробелов в 15 введенных символах , если пробелов в символах не было , вывести символ “ - ” . 3 На вход программе подается сначала число n , а после - n целых чисел . Требуется определить , упорядоченны ли числа по неубыванию . Вывести “ Yes ” или “ No ” . Числа для обработки сохранить в список . 3 На вход программе подается строка , представляющая собой одно слово из латинских букв . Требуется определить , является ли слово палиндромом ( одинаково читающееся в обоих направлениях ( anna ) ) . Вывести “ Yes ” или “ No ” . 3 Заполнить двумерный список нулями и вывести его на консоль . размера 10×10 размера 5×10 размера 10×5 Задачи на списки 3 Найти разницу между максимальным и минимальным числом в этом списке . 3 Найти сумму элементов списка , расположенных до минимального элемента 3 Найти сумму элементов списка , расположенных после последнего элемента , равного нулю 3 Найти сумму модулей элементов списка , расположенных после максимального по модулю элемента 3 Найти сумму модулей элементов списка , расположенных после первого элемента , равного нулю 3 Найти произведение элементов списка , расположенных между первым и вторых нулевыми элементами 3 Найти сумму элементов списка , расположенных между первым и последним отрицательными элементами 3 Найти произведение элементов списка , расположенных между максимальным по модулю и минимальным по модулю элементами Задачи на строки Определить длину строки , введенной пользователем . Найти разницу между числом строчных и прописных ( заглавных ) букв в строке . Дана строка состоящая из букв и цифр ( считается , что больше одной цифры подряд идти не может ) . Требуется посчитать сумму этих цифр . Дана строка состоящая из букв и цифр Требуется сформировать и вывести новую строку , состоящую только из этих цифр , разделенных пробелами . Поменять местами слова в строке , состоящей из двух слов . Вводится строка , представляющая собой некоторое слово . Требуется определить , является ли это слово палиндромом - одинаково читающимся в обоих направлениях . ( Saippuakivikauppias - слово палиндром ) Добавить в строку пробелы после знаков препинания , если они там отсутствуют . Требуется в произвольной строке удалить последнее слово , т.е . все символы после последнего пробела в строке . Найти слово , стоящее в тексте под определенным номером , и вывести его первую букву . Подсчитать количество слов во введенной пользователем строке . Для упрощения задачи считать , что слова разделяются исключительно одним пробелом , а первый и последний символы строки не являются пробелами . Во введенной строке удалить все символы между первым и вторым вопросительным знаком . Сами знаки в троке оставить Дана строка . Определите процентное отношение строчных и прописных букв к общему числу символов в ней . courses/informatics/extra_tasks.txt · ",
                "Дополнительные задачи по программированию  Курсы » Информатика 1 курс » Дополнительные задачи по программированию courses : informatics : tasks Table of Contents Дополнительные задачи по программированию Легенда Задачи Дополнительные задачи по программированию Легенда 3 – простые задачи 4 – задачи средней сложности 5 – более сложные задачи Задачи 3 Написать программу , которая выводит строку “ HELLO WORLD ! ” на консоль . 3 Написать программу , на вход которой с консоли вводится ИМЯ , и которая выводит строку “ HELLO , ИМЯ ! ” на консоль . 3 Заполнить значениями , введенными с клавиатуры , список целых чисел длиной 15 и вывести эти значения на консоль в обратном порядке . 3 Найти и вывести сумму из 15 целых чисел ( числа обязательно вводятся с консоли ) . 3 Найти и вывести первое отрицательное четное число из 15 введенных целых чисел . 3 Найти и вывести последнее отрицательное нечетное число из 15 введенных целых чисел . 3 Найти и вывести среднее арифметическое 15 введенных целых чисел . 3 На вход программе подается строка чисел , разделенных ; . Найдите произведение этих чисел . 3 На вход программе подается строка символов латинского алфавита , разделенных ; . Найдите количество этих строк . 3 Посчитать и вывести количество пробелов и восклицательных знаков в 15 введенных символах . 3 Вывести индексы пробелов в 15 введенных символах , если пробелов в символах не было , вывести символ “ - ” . 3 На вход программе подается один из трех символов : - , + , * и два целых числа . Выведите результат операции для первого и второго числа . ( Например , на вход поступило '- ' , 30 , 10 . Программа должна вывести 20 . ) 3 На вход программе подается сначала число n , а после - n целых чисел . Требуется определить , упорядоченны ли числа по неубыванию . Вывести “ Yes ” или “ No ” . Числа для обработки сохранить в список . 3 На вход программе подается строка , представляющая собой одно слово из латинских букв . Требуется определить , является ли слово палиндромом ( одинаково читающееся в обоих направлениях ( anna ) ) . Вывести “ Yes ” или “ No ” . 3 Заполнить двумерный список нулями и вывести его на консоль . размера 10×10 размера 5×10 размера 10×5 4 На вход программе подается число n , х , а после - n целых чисел , являющиеся коэффициентами многочлена степени n. Коэффициенты заданы по убыванию степеней . Треуется вычислить и вывести на экран значение многочлена в точке х. Задачи на списки ( в задачах следует полагать , что на вход программе сначала подается количество элементов N⇐100 , а после - N чисел . ) 3 Найти разницу между максимальным и минимальным числом в этом списке . 3 Найти сумму элементов списка , расположенных до минимального элемента 3 Найти сумму элементов списка , расположенных после последнего элемента , равного нулю 3 Найти сумму модулей элементов списка , расположенных после максимального о модулю элемента 3 Найти сумму модулей элементов списка , расположенных после первого элемента , равного нулю 3 Найти произведение элементов списка , расположенных между первым и вторых нулевыми элементами 3 Найти сумму элементов списка , расположенных между первым и последним отрицательными элементами 3 Найти произведение элементов списка , расположенных между максимальным по модулю и минимальным по модулю элементами Строки : 3 На вход программе подается строка символов латинского алфавита , разделенных ; . Найдите самую длинную строку . 4 Найти разницу между числом строчных и прописных ( заглавных ) букв в строке . Найдите метод строк , который может помочь решить задачу . 4 Дана строка состоящая из букв и цифр ( считается , что больше одной цифры подряд идти не может ) . Требуется посчитать сумму этих цифр . 3 Дана строка состоящая из букв и цифр . Требуется сформировать и вывести новую строку , состоящую только из этих цифр , разделенных пробелами . 3 Поменять местами слова в строке , состоящей из двух слов . 4 Добавить в строку пробелы после знаков препинания , если они там отсутствуют . 3 Требуется в произвольной строке удалить последнее слово , т.е . все символы после последнего пробела в строке . 3 Найти слово , стоящее в тексте под определенным ( введенным ) номером , и вывести его первую и последнюю буквы . Повторите для списка слов . 3 Во введенной строке удалить все символы между первым и вторым вопросительным знаком . Сами знаки в строке оставить . 4 Дана строка . Определите процентное отношение строчных и прописных букв к общему числу символов в ней . 4 Написать функцию , на вход которой передается строка . Функция должна определять , являются ли символы в строке отсортированы в лексикографическом порядке и возвращать True или False . 5 Встреча с Римлянами Попав в 500 год до нашей эры , вы столкнулись с необходимостью перевести число , записанное арабскими цифрами в число , записанное римскими цифрами Напишите программу , которая переводит число ( ⇐3000 ) из арабской записи в римскую . Примеры : 1994 → MCMXCIV 123 → CXXIII 5 Часы Представьте обычные цифровые часы , время на которых отображается на 7-ми сегментных индикаторах с учетом ведущего нуля . Например , 9:30 на таких часах отображается так : Числа отображатся следующим образом : Требуется написать программу , на вход которой подается целое число n , обозначающее количество зажженных сегментов в отображении некого времени . Програма должна по этому числу востановить время , которое отображается на часах . Время должно быть корректным ( подразумевается 24 формат представления времени ) . Если это невозможно , программа должна вывести “ Impossible ” . Если может быть несколько вариантов корректного времени , вывести любой . Примеры : Вход : 23 Выход : 09:30 Вход : 28 Выход : Impossible Вход : 2 Выход : Impossible 5 Могила Территория некоторого кладбища имеет ровную прямоугольную форму . На нем ( не выходя за его границы ) расположена прямоугольная церковь . Требуется определить , хватит ли на кладбище места для прямоугольной могилы ? могила может касаться границы кладбища и/или церкви , но не должна перекрывать их . На вход программе подаются 10 чисел : сначала x1 , y1 , x2 , y2 - координаты левого нижнего и правого верхнего углов гладбища после x1 , y1 , x2 , y2 - координаты левого нижнего и правого верхнего углов церкви а потом w и h - ширина и высота могилы . Сторона длины w должна располагаться вдоль оси OX , а сторона длины h - вдоль оси OY Программа должна вывести “ Yes ” , если место имеется и “ No ” в проиивном случае . Пример : Вход : 1 1 11 8 2 3 8 6 3 2 Выход : Yes Вход : 1 1 11 8 2 3 8 6 4 3 Выход : No 5 Углы углы углы Даны n попарно различных точек на плоскости с целыми координатами до 10^6 по абсолютной величине . Требуется найти среди этих точек две точки A и B такие , что угол AOB минимальный . O – центр координат . 5 Делим пространство Дан набор прямых линий на плоскости ( прямая может задаваться уравнением прямой или с помощью двух точек - на ваш выбор ) , которые могут пересекаться . Найти количество областей , на которые они разбивают плоскость . courses/informatics/tasks.txt · ",
                "✎ Информатика 1 курс  Курсы » Информатика 1 курс courses : informatics : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Информатика 1 курс ====== ===== Коммуникация по электронной почте ===== * [ [ : inf : communication_rules|Правила коммуникации по электронной почте ] ] ===== Правила и описание рейтинговой системы и защиты работ дистанционно ===== * [ [ https : //docs.google.com/document/d/e/2PACX-1vSCcUjWiM2qcCiJ6LW0kmdQ9PHqASyIm9WmYRdMKp1HUowoJbW0_vgitMmFaPmhx3MAQ59_czyXk6vY/pub|Правила и описание рейтинговой системы осень 2023 ] ] * [ [ https : //docs.google.com/document/d/e/2PACX-1vQnDw6mcj3FL5dlTSs9KKY_8Qg23G6-G1qTCrQ9tyV03oBQ4kEL-JQ6xwAGB6iBnx3TqZnOi5jyWNNb/pub|Правила и описание рейтинговой системы весна 2024 ] ] * [ [ https : //docs.google.com/document/d/e/2PACX-1vTkUOVVcBT15-642pbXl0zvGCxw4ruDzGzHV14tkF7yahIw5_5-jEK0g0bB8IqO_xlyuHo7mTWAQdaC/pub ? urp=gmail_link & gxids=7757|Правила дистанционной защиты лабораторных работ ] ] * [ [ https : //docs.google.com/document/d/e/2PACX-1vRk8qGv6nB0qCCR6AkM6rTESh8TdOL4H5TPFeY9FriAq3mlbbPUvy-p9gaoxTSYEPrYoRCEtSwzj__u/pub|Требования по использованию цифровых платформ ] ] ===== MOOC ===== * [ [ http : //e.moevm.info/course/view.php ? id=68| Курс `` Информатика . Практические задания . Первый семестр '' ] ] * [ [ http : //e.moevm.info/course/view.php ? id=7|Вводный курс по Linux ] ] * [ [ http : //e.moevm.info/course/view.php ? id=4|Вводный курс по git ] ] * [ [ https : //forms.gle/AeX7ucYTR1j1Lt3R8| Bug Report форма ( для информирования о багах в дистанционном курсе ) ] ] ===== Презентации лекций ===== Доступ к репозиторию с презентациями лекций надо получать в индивидуальном порядке . Для этого пишите своему преподавателю на почту . * [ [ https : //github.com/moevm/cs_lectures/tree/master/Lectures/Lectures-2018|Лекции 2018 ] ] * [ [ https : //github.com/moevm/cs_lectures/tree/master/Lectures/Lectures-2019|Лекции 2019 ] ] * [ [ https : //github.com/moevm/cs_lectures/tree/master/Lectures/Lectures-2020|Лекции 2020 ] ] * [ [ https : //github.com/moevm/cs_lectures/tree/master/Lectures/Lectures-2021|Лекции 2021 ] ] * [ [ https : //github.com/moevm/cs_lectures/tree/master/Lectures/Lectures-2022|Лекции 2022 ] ] ===== Примеры с лекций ===== Доступ к репозиторию с примерам программного кода , который демонстрируется на лекциях , надо получать в индивидуальном порядке . Для этого пишите своему преподавателю на почту . * [ [ https : //github.com/moevm/cs_lectures/tree/master|Репозиторий с примерами ] ] ===== Темы для лабораторных работ ===== * [ [ http : //se.moevm.info/doku.php/courses : informatics : topics_lr_autumn|Лабораторная работы осень 2023 ] ] ===== Темы для контрольной работы ===== * [ [ courses : informatics : test|Темы для контрольной работы ] ] ===== Оформление лабораторных и курсовых работ ===== * [ [ courses : programming : github_rules|Правила работы с репозиторием ] ] * [ [ courses : informatics : reportrules|Оформление отчета по лабораторной работе ] ] ===== Задачи для практических работ ===== - [ [ courses : informatics : extra_tasks|Задачи для начального уровня ] ] ===== Ссылки на полезные ресурсы ===== - [ [ https : //github.com/moevm/cs_lectures| Репозиторий с примерами кода ] ] - [ [ courses : programming : linux|Простейшие команды для работы в консоли Linux ] ] - [ [ courses : programming : git|Простейшие команды для работы в консоли Linux с git ] ] - [ [ https : //git-scm.com/book/ru/v1/Основы-Git|Основы Git ] ] - [ [ http : //pythontutor.com/visualize.html # mode=edit | Сервис для визуализации выполнения кода/работы с памятью ] ] - [ [ courses : programming : io_redirection|Перенаправление вывода в Linux ] ] - [ [ https : //www.kernel.org/doc/html/v4.10/process/coding-style.html|Linux kernel coding style ] ] - [ [ https : //github.com/moevm/cs_lectures/blob/master/Usefull_materials/KC4_git_and_collaboration.pdf|Как настроить работу с репозиторием в PyCharm ( обновили ссылку ) ] ] - [ [ courses : informatics : tasks|Простые задачи для самостоятельного решения на Python ] ] ===== Пилотные видео-записи лекций и мастер-классов ===== * [ [ https : //youtube.com/playlist ? list=PLXvT09UUaPPPA469ZxETOH-vNl1cviShN| Пилотные записи лекций по информатике 2021 ( ютуб-плейлист ) ] ] * [ [ https : //youtube.com/playlist ? list=PLXvT09UUaPPOIwTa7F1-a6cmbWOCMej8v| Пилотные записи лекций , мастер-классов и дополнительных занятий по Информатике 2020 ( ютуб-плейлист ) ] ] * [ [ https : //youtube.com/playlist ? list=PLXvT09UUaPPPy2NMMr7vzvfg9c6f_jAee| Лекция 2022 про работу с файлам и изображениями ] ] courses/informatics/start.txt · ",
                "Информатика 1 курс - Old revisions  Курсы » Информатика 1 курс courses : informatics : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/15 20:43 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] dmitry.ivanov ±0 B ( current ) 2023/09/28 12:33 Информатика 1 курс dmitry.ivanov -338 B 2023/08/31 10:44 Информатика 1 курс – move to 2023 dmitry.ivanov +181 B 2023/02/14 09:44 Информатика 1 курс dmitry.ivanov ±0 B 2023/02/14 04:46 Информатика 1 курс – [ Анкета первокурсника МОЭВМ ] natalya.razmochaeva +9 B 2023/02/08 19:03 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] natalya.razmochaeva +225 B 2023/02/07 04:45 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] natalya.razmochaeva -1 B 2022/12/10 09:08 Информатика 1 курс – external edit 127.0.0.1 ±0 B 2022/11/28 07:51 Информатика 1 курс – [ Пилотные видео-записи лекций и мастер-классов ] natalya.razmochaeva +163 B 2022/10/11 08:03 Информатика 1 курс – [ Коммуникация по электронной почте ] natalya.razmochaeva +30 B 2022/09/27 09:24 Информатика 1 курс – [ MOOC ] natalya.razmochaeva ±0 B 2022/09/19 15:25 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] natalya.razmochaeva +8 B 2022/09/12 18:13 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] natalya.razmochaeva +215 B 2022/09/07 13:58 Информатика 1 курс natalya.razmochaeva -217 B 2022/09/06 04:02 Информатика 1 курс – [ Темы для лабораторных работ ] natalya.razmochaeva -198 B 2022/09/06 03:54 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] natalya.razmochaeva +118 B 2022/09/05 12:28 Информатика 1 курс – [ MOOC ] natalya.razmochaeva -19 B 2022/09/05 12:27 Информатика 1 курс – [ Правила и описание рейтинговой системы и защиты работ дистанционно ] natalya.razmochaeva -102 B 2022/09/05 12:25 Информатика 1 курс – [ Анкета первокурсника МОЭВМ ] natalya.razmochaeva +1 B 2021/12/07 09:29 Информатика 1 курс – [ Темы для контрольных работ ] natalya.razmochaeva +18 B 2021/12/07 09:29 Информатика 1 курс – [ Темы для контрольных работ ] natalya.razmochaeva -83 B Show differences between selected revisions less recent > > courses/informatics/start.txt · ",
                "Информатика 1 курс - "
            ]
        },
        {
            "name": "Научно-технический семинар 2024 (бывш. конференция ППС)",
            "url": "/doku.php/start:conf:moevm_seminar2024",
            "date": "\"2024/02/01 12:27\"",
            "data": [
                "Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС )  МОЭВМ Вики » conf » Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) start : conf : moevm_seminar2024 Table of Contents Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) Программный комитет Мероприятия предыдущих лет Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) Ежегодно , в весеннем семестре на кафедре МО ЭВМ проводится обсуждение научных успехов студентов и преподавателей в формате небольшой конференции . В прошлом эта активность была привязана к ВУЗовской конференции ППС . В этом году мероприятие получило название “ Научно-технический семинар студентов и преподавателей каф . МО ЭВМ 2024 ” . Семинар пройдет в режиме ОНЛАЙН . В рамках семинара каждый желающий может представить результаты своего исследования , которым он занимался в течение осеннего семестра , или любую другую научную работу по профилю кафедры . Участие в семинаре дает студентам следующие возможности : получить дополнительные баллы для поступления в магистратуру , подготовиться к выступлению на конференции более высокого уровня , опубликовать статью в сборнике , обсудить результаты своей научной работы , получить качественную обратную связь от коллег и рецензентов , узнать , чем занимаются коллеги , порепетировать предстоящую защиту выпускной работы . С 2017 года для подачи материалов конференции мы используем систему Easychair , в которой необходимо сначала зарегистрироваться , а затем проследовать по ссылке указанной ниже для подачи статей . Регистрация и подача статей на НТС-2024 Лучшие статьи будут рекомендованы к расширению для публикации в журналах , а также будет оказана помощь в подготовки данных публикаций . Требования к материалам На конференцию принимаются статьи ( в формате PDF ) , не менее 3 и не более 12 страниц , оформленные в шаблоне IEEE . Объем аннотации - от 150 слов . Рабочий язык : русский , английский . Алгоритм подачи материалов Подача текста статьи через easychair.com . Рецензирование статьи и прием исправлений . Уведомление о включении вашего доклада в программу конференции . Доклад ( выступление с презентацией ) на конференции . Основные даты Начало приема статей - 15 декабря . Окончание приема статей - 16 января 23:59 ( включительно ) . Предоставление рецензий ( результатов рецензирования статей программным комитетом ) - 24 января . Дни конференции 1 - 2 февраля - выступления участников с докладами . Прием исправленных версий статей - до 10:00 по Московскому времени 6 февраля . Доклады Рекомендации по подготовке : Время на доклад 10 минут . Количество слайдов - не более 13 . На всех слайдов , кроме титульного обязательны номера слайдов в правом нижнем углу Формат подготовки - PDF . Шрифт не менее 18 . Обязательные слайды : Титульный ( тема , фамилия и имя докладчика , организация ) . Цель и задачи . Постановка задачи ( детальное описание , что именно вы делали и какими свойствами должно обладать решение ) . Заключение ( что конкретно вы сделали , какие направления для дальнейших решений ) . Положительное впечатление производят : Скришноты / видео / интерактивное демо ваших разработок , Ссылки на репозиторий с исходным кодом , Ссылки на опубликованное приложение , Как выступить с докладом по научной работе ? ( видео-урок ) Программа конференции https : //docs.google.com/spreadsheets/d/136fYvsYur7e8Nnv-n5O5cbGLE58J7rwOGp08YnD -- E4/edit # gid=0 Контакты По любым вопросам , связанным с участием в конференции необходимо писать по почте ask ( на ) moevm.info Программный комитет Шевелева Анна Головин Алексей Меркулов Арсений Субботин Алексей Заславский Марк Мероприятия предыдущих лет 2023 2022 2021 2020 2019 2018 2017 start/conf/moevm_seminar2024.txt · ",
                "Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) - ",
                "",
                "start : conf : start  МОЭВМ Вики » conf start : conf : start This topic does not exist yet You 've followed a link to a topic that does n't exist yet . If permissions allow , you may create it by clicking on “ Create this page ” . Page Tools Show pagesourceOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "✎ Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС )  МОЭВМ Вики » conf » Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) start : conf : moevm_seminar2024 This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) ====== Ежегодно , в весеннем семестре на кафедре МО ЭВМ проводится обсуждение научных успехов студентов и преподавателей в формате небольшой конференции . В прошлом эта активность была привязана к ВУЗовской конференции ППС . В этом году мероприятие получило название `` Научно-технический семинар студентов и преподавателей каф . МО ЭВМ 2024 '' . Семинар пройдет в режиме __ * * ОНЛАЙН * * __ . В рамках семинара каждый желающий может представить результаты своего исследования , которым он занимался в течение осеннего семестра , или любую другую научную работу по профилю кафедры . Участие в семинаре дает студентам следующие возможности : * получить дополнительные баллы для поступления в магистратуру , * подготовиться к выступлению на конференции более высокого уровня , * опубликовать статью в [ [ https : //etu.ru/ru/fakultety/fkti/sostav/kafedra-moevm/pechatnye-trudy/publikacii-studentov|сборнике ] ] , * обсудить результаты своей научной работы , * получить качественную обратную связь от коллег и рецензентов , * узнать , чем занимаются коллеги , * порепетировать предстоящую защиту выпускной работы . С 2017 года для подачи материалов конференции мы используем систему [ [ http : //easychair.org|Easychair ] ] , в которой необходимо сначала зарегистрироваться , а затем проследовать по ссылке указанной ниже для подачи статей . * * * [ [ https : //easychair.org/conferences/ ? conf=moevmnts2024|Регистрация и подача статей на НТС-2024 ] ] * * Лучшие статьи будут рекомендованы к расширению для публикации в журналах , а также будет оказана помощь в подготовки данных публикаций . == Требования к материалам == На конференцию принимаются статьи ( в формате * * PDF * * ) , не менее 3 и не более 12 страниц , оформленные в шаблоне [ [ https : //www.ieee.org/content/dam/ieee-org/ieee/web/org/conferences/conference-template-a4.docx|IEEE ] ] . Объем аннотации - от 150 слов . Рабочий язык : русский , английский . == Алгоритм подачи материалов == - Подача текста статьи через easychair.com . - Рецензирование статьи и прием исправлений . - Уведомление о включении вашего доклада в программу конференции . - Доклад ( выступление с презентацией ) на конференции . == Основные даты == * Начало приема статей - * * 15 декабря * * . * Окончание приема статей - * * 16 января 23:59 * * ( включительно ) . * Предоставление рецензий ( результатов рецензирования статей программным комитетом ) - * * 24 января * * . * Дни конференции * * 1 - 2 февраля * * - выступления участников с докладами . * Прием исправленных версий статей - * * до 10:00 по Московскому времени 6 февраля * * . == Доклады == Рекомендации по подготовке : * Время на доклад 10 минут . * Количество слайдов - не более 13 . * На всех слайдов , кроме титульного * * обязательны номера слайдов * * в правом нижнем углу * Формат подготовки - PDF . * Шрифт не менее 18 . * Обязательные слайды : * Титульный ( тема , фамилия и имя докладчика , организация ) . * Цель и задачи . * Постановка задачи ( детальное описание , что именно вы делали и какими свойствами должно обладать решение ) . * Заключение ( что конкретно вы сделали , какие направления для дальнейших решений ) . * Положительное впечатление производят : * Скришноты / видео / интерактивное демо ваших разработок , * Ссылки на репозиторий с исходным кодом , * Ссылки на опубликованное приложение , * * [ [ https : //www.youtube.com/watch ? v=L5MMZbOA9ww & |Как выступить с докладом по научной работе ? ( видео-урок ) ] ] * * == Программа конференции == https : //docs.google.com/spreadsheets/d/136fYvsYur7e8Nnv-n5O5cbGLE58J7rwOGp08YnD -- E4/edit # gid=0 == Контакты == По любым вопросам , связанным с участием в конференции необходимо писать по почте ask ( на ) moevm.info ==== Программный комитет ==== * Шевелева Анна * Головин Алексей * Меркулов Арсений * Субботин Алексей * Заславский Марк ==== Мероприятия предыдущих лет ==== * [ [ http : //se.moevm.info/doku.php/start : conf : moevm_seminar2023|2023 ] ] * [ [ http : //se.moevm.info/doku.php/start : conf : moevm_seminar2022|2022 ] ] * [ [ http : //se.moevm.info/doku.php/start : conf : moevm_seminar2021|2021 ] ] * [ [ http : //se.moevm.info/doku.php/start : conf : pps2020|2020 ] ] * [ [ http : //se.moevm.info/doku.php/start : conf : pps2019|2019 ] ] * [ [ http : //se.moevm.info/doku.php/start : conf : pps2018|2018 ] ] * [ [ http : //se.moevm.info/doku.php/start : conf : pps2017|2017 ] ] start/conf/moevm_seminar2024.txt · ",
                "Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) - Old revisions  МОЭВМ Вики » conf » Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) start : conf : moevm_seminar2024 Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/01 12:27 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) – [ Программный комитет ] mark +166 B ( current ) 2024/02/01 12:27 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) – [ Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) ] mark +6 B 2024/01/12 07:39 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) – [ Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) ] mark -4 B 2024/01/12 07:39 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) mark +18 B 2024/01/10 13:56 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) mark -179 B 2023/12/18 08:11 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) mark +18 B 2023/12/12 13:43 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) – [ Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) ] mark ±0 B 2023/12/12 13:40 Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) – created mark +6.7 KB Show differences between selected revisions start/conf/moevm_seminar2024.txt · ",
                "Научно-технический семинар кафедры МО ЭВМ 2024 ( бывш . конференция ППС ) - "
            ]
        },
        {
            "name": "Регистрация научных профилей",
            "url": "/doku.php/start:researcher_profile_registration",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Регистрация научных профилей  МОЭВМ Вики » Регистрация научных профилей start : researcher_profile_registration Регистрация научных профилей Научные профили - информационные системы , позволяющие ученому повысить свои наукометрические показатели , а также упрощающие учет публикаций . При регистрации профилей необходимо соблюдать следующие правила : в качестве электронной почты указывайте ваш корпоративный email ( например iiivanov @ etu.ru ) ; не забудьте загрузить фото профиля ; название организации на русском языке : Санкт-Петербургский государственный электротехнический университет « ЛЭТИ » имени В. И. Ульянова ( Ленина ) на английском языке : Saint Petersburg Electrotechnical University 'LETI' название подразделения на русском языке : кафедра Математического обеспечения и применения ЭВМ , на английском языке : Department of Software Engineering and Computer Applications . Для максимально полного учета ( и упрощения задачи поиска публикаций в отдельных индексах ) , вам необходимо зарегистрироваться в четырех системах , страницы регистрации указаны в скобках : Elibrary.ru , аггрегация статей из РИНЦ и ВАК ( Российский индекс научного цитирования ) ( подробнее https : //moluch.ru/information/kak-zaregistrirovatsya-v-elibraryru/ ) Google Scholar , аггрегация всех статей вне зависимости от источников ( https : //scholar.google.ru/ ) ORCID , аггрегация статей из Scopus ( https : //orcid.org/register ) ResearcherID , аггрегация статей из Web of Science ( https : //publons.com/account/register/ ) * После регистрации вам необходимо выслать ссылки на зарегистрированные профили секретарю кафедры . start/researcher_profile_registration.txt · ",
                "Регистрация научных профилей - ",
                "",
                "✎ Регистрация научных профилей  МОЭВМ Вики » Регистрация научных профилей start : researcher_profile_registration This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Регистрация научных профилей ====== Научные профили - информационные системы , позволяющие ученому повысить свои наукометрические показатели , а также упрощающие учет публикаций . При регистрации профилей необходимо соблюдать следующие правила : * в качестве электронной почты указывайте ваш корпоративный email ( например iiivanov @ etu.ru ) ; * не забудьте загрузить фото профиля ; * название организации * на русском языке : * * Санкт-Петербургский государственный электротехнический университет « ЛЭТИ » имени В. И. Ульянова ( Ленина ) * * * на английском языке : * * Saint Petersburg Electrotechnical University 'LETI ' * * * название подразделения * на русском языке : * * кафедра Математического обеспечения и применения ЭВМ * * , * на английском языке : * * Department of Software Engineering and Computer Applications * * . Для максимально полного учета ( и упрощения задачи поиска публикаций в отдельных индексах ) , вам необходимо зарегистрироваться в четырех системах , страницы регистрации указаны в скобках : * Elibrary.ru , аггрегация статей из РИНЦ и ВАК ( Российский индекс научного цитирования ) ( подробнее https : //moluch.ru/information/kak-zaregistrirovatsya-v-elibraryru/ ) * Google Scholar , аггрегация всех статей вне зависимости от источников ( https : //scholar.google.ru/ ) * ORCID , аггрегация статей из Scopus ( https : //orcid.org/register ) * ResearcherID , аггрегация статей из Web of Science ( https : //publons.com/account/register/ ) * После регистрации вам необходимо выслать ссылки на зарегистрированные профили секретарю кафедры . start/researcher_profile_registration.txt · ",
                "Регистрация научных профилей - Old revisions  МОЭВМ Вики » Регистрация научных профилей start : researcher_profile_registration Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Регистрация научных профилей ( external edit ) ( current ) 2020/11/30 09:09 Регистрация научных профилей mark -600 B 2020/11/30 09:08 Регистрация научных профилей – created mark +2.8 KB Show differences between selected revisions start/researcher_profile_registration.txt · ",
                "Регистрация научных профилей - "
            ]
        },
        {
            "name": "Развертывание студенченских проектов",
            "url": "/doku.php/start:student_projects_deploy",
            "date": "\"2023/12/14 09:13\"",
            "data": [
                "Развертывание студенческих проектов  МОЭВМ Вики » Развертывание студенческих проектов start : student_projects_deploy Table of Contents Развертывание студенческих проектов Веб-приложения Плагины для Moodle Развертывание студенческих проектов Для того , чтобы упростить процедуру развертывания студенческих проектов на кафедральных серверах , составлен список необходимых требований . Эти требования должны быть выполнены перед тем , как проект будет размещен на кафедральных ресурсах . Также можно рассматривать эти требования как крайне полезные рекомендации , выработанные ценой большого количества нервов и проектов , которые кафедра развертывала . Веб-приложения проект запакован в docker-compose , конфигурация собирается и запускается одним скриптом данные постоянного хранения проекта ( файлы БД и прочее такое ) должно подключатся через именованный volume в docker-compose конфиге указаны точные версии всех образов , версия latest недопускается к использованию в скриптах установки зависимостей и Docker файлах указаны версии всех пакетов в скриптах указаны точные версии интерпретаторов ( Например , python3.8 ) ключи шифрования , сертификаты , пароли и любые чувствительные данные передаются через .env файл Если в проекте есть СУБД : она располагается в отдельном контейнере каталог с файлами данных СУБД монтируется в volume контейнеру СУБД не нужно открывать никаких портов режим сети не host для docker-compose volume не использует файлы или каталоги хоста ( исключения ниже ) конфигурация docker-compose открывает только необходимые порты для production работы ( идеально - только фронтенд ) все порты в docker-compose открываются только с указанием на 127.0.0.1 ( то есть - так можно 127.0.0.1:8000:8000 , а так - 8000:8000 нельзя ) веб-интерфейс доступен на порте с номером от 5000 docker-compose не использует порты хоста с номерами < 1024 есть конфиг для apache2 , настраивающий работу через reverse proxy необходимые для отладки логи работы приложения доступны через веб-интерфейс ( или хотя бы в файле в volume ) если в системе несколько контейнеров с кодом ( например бакенд и фронтенд ) , то логи всех контейнеров должны собираться на одном из них есть примитивные интеграционные тесты в настройках docker-compose для всех контейнеров есть монтирование данных о часовом поясе хост-машины /etc/timezone : /etc/timezone : ro и /etc/localtime : /etc/localtime : ro Плагины для Moodle start/student_projects_deploy.txt · ",
                "Развертывание студенческих проектов - ",
                "",
                "✎ Развертывание студенческих проектов  МОЭВМ Вики » Развертывание студенческих проектов start : student_projects_deploy This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Развертывание студенческих проектов ====== Для того , чтобы упростить процедуру развертывания студенческих проектов на кафедральных серверах , составлен список необходимых требований . Эти требования должны быть выполнены перед тем , как проект будет размещен на кафедральных ресурсах . Также можно рассматривать эти требования как крайне полезные рекомендации , выработанные ценой большого количества нервов и проектов , которые кафедра развертывала . ===== Веб-приложения ===== * проект запакован в docker-compose , конфигурация собирается и запускается одним скриптом * данные постоянного хранения проекта ( файлы БД и прочее такое ) должно подключатся через именованный volume * в docker-compose конфиге указаны точные версии всех образов , версия latest недопускается к использованию * в скриптах установки зависимостей и Docker файлах указаны версии всех пакетов * в скриптах указаны точные версии интерпретаторов ( Например , python3.8 ) * ключи шифрования , сертификаты , пароли и любые чувствительные данные передаются через .env файл * Если в проекте есть СУБД : * она располагается в отдельном контейнере * каталог с файлами данных СУБД монтируется в volume * контейнеру СУБД не нужно открывать никаких портов * режим сети не host для docker-compose * volume не использует файлы или каталоги хоста ( исключения ниже ) * конфигурация docker-compose открывает только необходимые порты для production работы ( идеально - только фронтенд ) * все порты в docker-compose открываются только с указанием на 127.0.0.1 ( то есть - так можно 127.0.0.1:8000:8000 , а так - 8000:8000 нельзя ) * веб-интерфейс доступен на порте с номером от 5000 * docker-compose не использует порты хоста с номерами < 1024 * есть конфиг для apache2 , настраивающий работу через reverse proxy * необходимые для отладки логи работы приложения доступны через веб-интерфейс ( или хотя бы в файле в volume ) * если в системе несколько контейнеров с кодом ( например бакенд и фронтенд ) , то логи всех контейнеров должны собираться на одном из них * есть примитивные интеграционные тесты * в настройках docker-compose для всех контейнеров есть монтирование данных о часовом поясе хост-машины /etc/timezone : /etc/timezone : ro и /etc/localtime : /etc/localtime : ro ===== Плагины для Moodle ===== start/student_projects_deploy.txt · ",
                "Развертывание студенческих проектов - Old revisions  МОЭВМ Вики » Развертывание студенческих проектов start : student_projects_deploy Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/12/14 09:13 Развертывание студенческих проектов – [ Веб-приложения ] mark +36 B ( current ) 2023/08/03 18:20 Развертывание студенческих проектов – [ Веб-приложения ] mark +46 B 2023/08/03 18:00 Развертывание студенческих проектов – [ Веб-приложения ] mark +94 B 2023/08/03 17:56 Развертывание студенческих проектов – [ Развертывание студенческих проектов ] mark +304 B 2023/08/03 17:54 Развертывание студенческих проектов – [ Веб-приложения ] mark +100 B 2022/12/10 09:08 Развертывание студенческих проектов – external edit 127.0.0.1 ±0 B 2022/12/07 09:50 Развертывание студенческих проектов – [ Веб-приложения ] mark +206 B 2022/12/07 06:30 Развертывание студенческих проектов – [ Веб-приложения ] mark +372 B 2022/08/26 12:48 Развертывание студенческих проектов – [ Веб-приложения ] mark +241 B 2022/01/28 07:11 Развертывание студенческих проектов – [ Веб-приложения ] mark +211 B 2021/03/30 08:19 Развертывание студенческих проектов – [ Веб-приложения ] mark +209 B 2021/03/19 17:14 Развертывание студенческих проектов – [ Веб-приложения ] mark +108 B 2021/03/19 17:12 Развертывание студенческих проектов – created mark +1.9 KB Show differences between selected revisions start/student_projects_deploy.txt · ",
                "Развертывание студенческих проектов - "
            ]
        },
        {
            "name": "Moodle - хитрости, проблемы, решения (для преподавателей и авторов задач)",
            "url": "/doku.php/start:moodle_tips_and_tricks",
            "date": "\"2023/06/22 14:59\"",
            "data": [
                "Введение  МОЭВМ Вики » Введение start : moodle_tips_and_tricks Table of Contents Введение Автоматическая выгрузка успеваемости из курсов в гугл таблицу Задачи CodeRunner Ошибка failed to map segment from shared object Создание вопросов-прототипов ( своих типов вопросов ) Тесты ( Quiz ) Несоответствие набранных баллов и итога прохождения теста ( не отображаются дробные баллы ) Введение На этой странице собираем выстраданные рекомендации по работе в Moodle - настройка , создание задач и прочее . Автоматическая выгрузка успеваемости из курсов в гугл таблицу https : //github.com/OSLL/lms_grades_export/tree/main/moodle_export Задачи CodeRunner Прежде чем делать задачи , полезно почитать о том , как устроен сам сервер проверки https : //github.com/trampgeek/jobe Ошибка failed to map segment from shared object Если при запуске скрипта проверки созданной вами задачи ( равно как и при запуске студенческого решения ) возникает примерно такая ошибка ( ключевые слова failed to map segment from shared object ) : ImportError : /usr/local/lib/python3.8/dist-packages/pandas/_libs/sparse.cpython-38-x86_64-linux-gnu.so : failed to map segment from shared object то с высокой вероятностью проблема в том , что код проверки или решения выходит за рамки стандартного ограничения ОЗУ на отдельный процесс , которое устанавливает CodeRunner . Даже если , в поле “ Advanced customisation / MemLimit ( MB ) ” в настройке вопроса вы ничего не указывали ( срабатывает стандартное ограничение ) . В документации описано конкретное значение https : //github.com/trampgeek/jobe # run_spec-parameters Если гипотеза подтвердилась , то это большой повод переработать дизайн задачи в сторону радикального сокращения ОЗУ - она не должна выходить за рамки стандартного ограничения и даже приближатся к нему . Создание вопросов-прототипов ( своих типов вопросов ) Подробно о том , как работают прототипы https : //github.com/trampgeek/moodle-qtype_coderunner/blob/master/Readme.md # user-defined-question-types Как создать свой прототип : Заходим в настройки любого теста ( QUIZ ) в вашем курсе . Открываем Question bank В “ Select a category : ” выбираем “ Prototypes-custom ” Нажимаем “ Create a new question …. ” В диалоговом окне выбираем тип “ CodeRunner ” Выбираем необходимый базовый тип в CodeRunner question type / Question type Выставляем галочку CodeRunner question type / Customisation / Customise В Advanced customisation / Prototyping / Is prototype ? выставляем “ Yes ( user defined ) ” В Advanced customisation / Prototyping / Question type указываем желаемое имя для типа вопросов ( например - fortran_programm ) Заполняем описания в General и хотя бы один тест кейс в Test cases Как редактировать прототипы : Заходим в настройки любого теста ( QUIZ ) в вашем курсе . Открываем Question bank В “ Select a category : ” выбираем “ Prototypes-custom ” Для интересующего нас вопроса выбираем в таблице Edit / Edit question Тесты ( Quiz ) Несоответствие набранных баллов и итога прохождения теста ( не отображаются дробные баллы ) В ряде случаев настройки отображения баллов в тесте ( quiz ) могут сложится так , что в оценке не будет отображатся дробная часть ( хотя фактически она будет ) . Пример : Такое поведение часто путает студентов и бывали случаи , когда студенты думали , что тест ими пройден полностью ( хотя по баллам это не так ) . Как исправить проблему - перейти в настройки теста ( не вопроса ) , развернуть секцию “ Внешний вид ” ( Appereance ) , в ней нажать “ Показать больше ” ( Show more ) , выставить настройки как на рисунке ниже . start/moodle_tips_and_tricks.txt · ",
                "Введение - ",
                "",
                "✎ Введение  МОЭВМ Вики » Введение start : moodle_tips_and_tricks This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ===== Введение ===== На этой странице собираем выстраданные рекомендации по работе в Moodle - настройка , создание задач и прочее . ===== Автоматическая выгрузка успеваемости из курсов в гугл таблицу ===== https : //github.com/OSLL/lms_grades_export/tree/main/moodle_export ===== Задачи CodeRunner ===== Прежде чем делать задачи , полезно почитать о том , как устроен сам сервер проверки https : //github.com/trampgeek/jobe ==== Ошибка failed to map segment from shared object ==== Если при запуске скрипта проверки созданной вами задачи ( равно как и при запуске студенческого решения ) возникает примерно такая ошибка ( ключевые слова failed to map segment from shared object ) : < note > ImportError : /usr/local/lib/python3.8/dist-packages/pandas/_libs/sparse.cpython-38-x86_64-linux-gnu.so : failed to map segment from shared object < /note > то с высокой вероятностью проблема в том , что код проверки или решения выходит за рамки стандартного ограничения ОЗУ на отдельный процесс , которое устанавливает CodeRunner . Даже если , в поле `` Advanced customisation / MemLimit ( MB ) '' в настройке вопроса вы ничего не указывали ( срабатывает стандартное ограничение ) . В документации описано конкретное значение https : //github.com/trampgeek/jobe # run_spec-parameters Если гипотеза подтвердилась , то это большой повод переработать дизайн задачи в сторону радикального сокращения ОЗУ - она не должна выходить за рамки стандартного ограничения и даже приближатся к нему . ==== Создание вопросов-прототипов ( своих типов вопросов ) ==== Подробно о том , как работают прототипы https : //github.com/trampgeek/moodle-qtype_coderunner/blob/master/Readme.md # user-defined-question-types Как создать свой прототип : - Заходим в настройки любого теста ( QUIZ ) в вашем курсе . Открываем Question bank - В `` Select a category : '' выбираем `` Prototypes-custom '' - Нажимаем `` Create a new question .... '' - В диалоговом окне выбираем тип `` CodeRunner '' - Выбираем необходимый базовый тип в CodeRunner question type / Question type - Выставляем галочку CodeRunner question type / Customisation / Customise - В Advanced customisation / Prototyping / Is prototype ? выставляем `` Yes ( user defined ) '' - В Advanced customisation / Prototyping / Question type указываем желаемое имя для типа вопросов ( например - fortran_programm ) - Заполняем описания в General и хотя бы один тест кейс в Test cases Как редактировать прототипы : - Заходим в настройки любого теста ( QUIZ ) в вашем курсе . Открываем Question bank - В `` Select a category : '' выбираем `` Prototypes-custom '' - Для интересующего нас вопроса выбираем в таблице Edit / Edit question ===== Тесты ( Quiz ) ===== ==== Несоответствие набранных баллов и итога прохождения теста ( не отображаются дробные баллы ) ==== В ряде случаев настройки отображения баллов в тесте ( quiz ) могут сложится так , что в оценке не будет отображатся дробная часть ( хотя фактически она будет ) . Пример : { { : start : quiz_wrong_score.png| } } Такое поведение часто путает студентов и бывали случаи , когда студенты думали , что тест ими пройден полностью ( хотя по баллам это не так ) . Как исправить проблему - * перейти в настройки теста ( не вопроса ) , * развернуть секцию `` Внешний вид '' ( Appereance ) , * в ней нажать `` Показать больше '' ( Show more ) , * выставить настройки как на рисунке ниже . { { : start : quiz_wrong_score_fix.png| } } start/moodle_tips_and_tricks.txt · ",
                "Введение - Old revisions  МОЭВМ Вики » Введение start : moodle_tips_and_tricks Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/06/22 14:59 Введение – [ Ошибка failed to map segment from shared object ] mark +1.6 KB ( current ) 2022/12/10 09:08 Введение – external edit 127.0.0.1 ±0 B 2022/07/13 09:44 Введение – [ Автоматическая выгрузка успеваемости из курсов ] mark +27 B 2022/07/13 09:35 Введение mark +169 B 2022/07/12 08:01 Введение – [ Тесты ( Quiz ) ] mark +1.1 KB 2022/07/12 07:41 Введение – [ Задачи CodeRunner ] mark +1.7 KB 2022/07/12 07:31 Введение – created mark +292 B Show differences between selected revisions start/moodle_tips_and_tricks.txt · ",
                "Введение - "
            ]
        },
        {
            "name": "Domain-driven design",
            "url": "/doku.php/courses:domain_driven_design",
            "date": "\"2023/03/16 17:09\"",
            "data": [
                "Domain-driven design ( DDD )  Курсы » Domain-driven design ( DDD ) courses : domain_driven_design Table of Contents Domain-driven design ( DDD ) Презентации Тексты Учебное пособие Презентации ( старые ) Тексты ( старые ) Domain-driven design ( DDD ) Предметно-ориентированное проектирование Процесс создания моделей Презентации Лекция 1 . Модель предметной области Лекция 2 . Структурные элементы предметно-ориентированного проектирования Лекция 3 . Углубляющий рефакторинг Лекция 4 . Стратегическое проектирование Тексты Текст 1 для лекции Текст 2 для лекции Текст 3 для лекции Текст 4 для лекции Учебное пособие Эрик Эванс . Предметно-ориентированное проектирование ( DDD ) : структуризация сложных программных систем . Скачать : Учебное пособие включает содержание всех лекций курса ( на русском ) Презентации ( старые ) Лекция №1 Обзор DDD Лекция №2 Предпосылки DDD Лекция №3 Стратегический дизайн DDD Лекция №4 DDD : Архитектурный стиль ( вид ) Лекция №5 DDD : Тактический дизайн . Часть 1 Лекция №6 DDD : Тактический дизайн . Часть 2 Тексты ( старые ) Текст 1 для лекции ( взято из Введения и главы 1 ) ( Текст на основе видео 1 ) Текст 2 для лекции ( взято из главы 1 ) ( Текст на основе видео 2 ) Текст 3 для лекции ( взято из частей : I , II , IV ; глав : 1 , 2 , 14 ) ( Текст на основе видео 24-27 ) Текст 4 для лекции ( взято из главы 2 ) Текст 5 для лекции ( взято из главы 3 ) Текст 6 для лекции ( взято из части II ) courses/domain_driven_design.txt · ",
                "Domain-driven design ( DDD ) - ",
                "",
                "Курсы  Курсы courses : start Table of Contents Курсы 1 курс 2 курс 3 курс 4 курс 5 курс 6 курс Курсы 1 курс Программирование 1 курс Информатика 1 курс Контакты преподавателей 2 курс Алгоритмы и структуры данных Объектно-ориентированное программирование Построение и анализ алгоритмов 3 курс Введение в программную инженерию Разработка ПО с GUI Искусственные нейронные сети 4 курс Базы знаний и экспертные системы Цифровая обработка сигналов Функциональное программирование Технологии хранения данных Проектирование человеко-машинного интерфейса Статистические методы обработки экспериментальных данных Тестирование 5 курс Анализ , моделирование и оптимизация систем Анализ и интерпретация данных 6 курс Многопоточное и распределённое программирование Представление знаний и системы искусственного интеллекта Robot OS courses/start.txt · ",
                "✎ Domain-driven design ( DDD )  Курсы » Domain-driven design ( DDD ) courses : domain_driven_design This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Domain-driven design ( DDD ) ====== Предметно-ориентированное проектирование Процесс создания моделей ===== Презентации ===== * { { https : //docs.google.com/presentation/d/17zfP4gaICov0cFGfYMFYbcTbSm0UlUY4|Лекция 1 . } } * * Модель предметной области * * * { { https : //docs.google.com/presentation/d/11qoAwT66UK1KrpwHxyvcBorcmWz31VMk|Лекция 2 . } } * * Структурные элементы предметно-ориентированного проектирования * * * { { https : //docs.google.com/presentation/d/1yt_Zv9ggfBchqbog9NOGmZgOnSMxwgiG|Лекция 3 . } } * * Углубляющий рефакторинг * * * { { https : //docs.google.com/presentation/d/1HvzSd8ARbhvdq-dZzknre3CSwKbnAaF9|Лекция 4 . } } * * Стратегическое проектирование * * ===== Тексты ===== * { { https : //docs.google.com/document/d/1bPKNnfLgZ05G9XqLdi0ZLRecGbmVo4iB|Текст 1 для лекции } } * { { https : //docs.google.com/document/d/1yXNBNBTZ0Spx0lXLVhOrYIkeOf4qU1ht|Текст 2 для лекции } } * { { https : //docs.google.com/document/d/18ihKb3tkLFyY8zAeYbcO7fOGTfkRC22A|Текст 3 для лекции } } * { { https : //docs.google.com/document/d/1UXQH0XojmewFSxcs5RLK4qW-HYa_MG04|Текст 4 для лекции } } ===== Учебное пособие ===== * * Эрик Эванс . * * Предметно-ориентированное проектирование ( DDD ) : структуризация сложных программных систем . //Скачать : // { { https : //drive.google.com/file/d/1Ry9PZ5nyR2nraO7CjfAptoDprNEqvL91/view ? usp=share_link|Учебное пособие включает содержание всех лекций курса ( на русском ) } } ===== Презентации ( старые ) ===== * { { https : //docs.google.com/presentation/d/1XbXTdEnJ9I_noImse_IOprRiL-N0mk2w|Лекция №1 } } * * Обзор DDD * * * { { https : //docs.google.com/presentation/d/1aKOdJT2Ezo-y2Hx40vyH4iHv9py9uzfS|Лекция №2 } } * * Предпосылки DDD * * * { { https : //docs.google.com/presentation/d/1Cz4neYFU2_rFScQSXtONDIHjbCojLKoJ|Лекция №3 } } * * Стратегический дизайн DDD * * * { { https : //docs.google.com/presentation/d/1-qOtJnVCEvdPrcXztYiphzmMzPWgOhA-|Лекция №4 } } * * DDD : Архитектурный стиль ( вид ) * * * { { https : //docs.google.com/presentation/d/1qywatwzGaqd4St5kZjVWGsT1JZ3G2I1A|Лекция №5 } } * * DDD : Тактический дизайн . Часть 1 * * * { { https : //docs.google.com/presentation/d/16D5sqzcujN0rcOsfXSZQOD -- HHmXrWUw|Лекция №6 } } * * DDD : Тактический дизайн . Часть 2 * * ===== Тексты ( старые ) ===== * { { https : //docs.google.com/document/d/1oSmXeKTm3hCQY0Mqy7g7g0c8wp30nl99|Текст 1 для лекции } } ( взято из Введения и главы 1 ) ( { { https : //docs.google.com/document/d/1rXXIMuJyBQX0y5sKuQyEwDtBm__11No_|Текст на основе видео 1 } } ) * { { https : //docs.google.com/document/d/10j41AZwuecHQ0c8VH_rbkstcjJKsoIES|Текст 2 для лекции } } ( взято из главы 1 ) ( { { https : //docs.google.com/document/d/1aZo0fLCEIOjVxvlSkdOjXxGeoq6f6PKe|Текст на основе видео 2 } } ) * { { https : //docs.google.com/document/d/1mVOSdUjJ9uCcs3SxExawleaUE7J4MfnX|Текст 3 для лекции } } ( взято из частей : I , II , IV ; глав : 1 , 2 , 14 ) ( { { https : //docs.google.com/document/d/1uiUxr4xTxmoqvsFgacSiRDDDXHOE35FY|Текст на основе видео 24-27 } } ) * { { https : //docs.google.com/document/d/1hAgaE4o5QtRpklU1O9DE_Ed180HUDXE1|Текст 4 для лекции } } ( взято из главы 2 ) * { { https : //docs.google.com/document/d/1lOwwCPmFxpe9tCxjY6WOU4wLq41kntyR|Текст 5 для лекции } } ( взято из главы 3 ) * { { https : //docs.google.com/document/d/11fhAUGpFwoK33Tercnokh5DI9U-IwiUj|Текст 6 для лекции } } ( взято из части II ) courses/domain_driven_design.txt · ",
                "Domain-driven design ( DDD ) - Old revisions  Курсы » Domain-driven design ( DDD ) courses : domain_driven_design Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/03/16 17:09 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +111 B ( current ) 2023/03/16 17:08 Domain-driven design ( DDD ) – [ Презентации ] alexey.subbotin +160 B 2023/03/07 11:50 Domain-driven design ( DDD ) – [ Презентации ] alexey.subbotin ±0 B 2023/03/07 10:38 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin -926 B 2023/03/07 10:36 Domain-driven design ( DDD ) – [ Презентации ( старые ) ] alexey.subbotin +1.3 KB 2023/03/07 10:35 Domain-driven design ( DDD ) – [ Учебное пособие ] alexey.subbotin +924 B 2023/03/07 10:35 Domain-driven design ( DDD ) – [ Презентации ] alexey.subbotin -352 B 2023/02/14 20:00 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +121 B 2023/02/01 00:53 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin ±0 B 2023/02/01 00:52 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +2 B 2023/02/01 00:52 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin -3 B 2023/02/01 00:50 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin -344 B 2023/01/07 10:25 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin -56 B 2023/01/07 09:56 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +6 B 2023/01/05 05:00 Domain-driven design ( DDD ) – [ Презентации ] alexey.subbotin -396 B 2023/01/05 04:57 Domain-driven design ( DDD ) – [ Презентации ] alexey.subbotin ±0 B 2022/12/31 10:30 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +42 B 2022/12/31 10:29 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +44 B 2022/12/31 10:28 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +42 B 2022/12/31 10:20 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +56 B 2022/12/31 10:11 Domain-driven design ( DDD ) – [ Тексты ] alexey.subbotin +42 B Show differences between selected revisions less recent > > courses/domain_driven_design.txt · ",
                "Domain-driven design ( DDD ) - "
            ]
        },
        {
            "name": "AutoML",
            "url": "/doku.php/courses:automl",
            "date": "\"2023/02/06 17:32\"",
            "data": [
                "AutoML  Курсы » AutoML courses : automl Table of Contents AutoML Материалы Лабораторные работы AutoML Материалы Учебные материалы Лабораторные работы Лабораторная работа 1 - AutoWEKA courses/automl.txt · ",
                "AutoML - ",
                "",
                "Учебные материалы  Курсы » AutoML » Учебные материалы courses : automl : materials Table of Contents Учебные материалы Список литературы Основная литература Дополнительная литература Учебные материалы AutoML системы Список литературы Основная литература Automated Machine Learning . Methods , Systems , Challenges Дополнительная литература courses/automl/materials.txt · ",
                "✎ AutoML  Курсы » AutoML courses : automl This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== AutoML ====== ===== Материалы ===== * [ [ courses : automl : materials ] ] ===== Лабораторные работы ===== { { : courses : лаб1._autoweka.pdf | Лабораторная работа 1 - AutoWEKA } } courses/automl.txt · ",
                "AutoML - Old revisions  Курсы » AutoML courses : automl Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/02/06 17:32 AutoML nataly.zhukova +88 B ( current ) 2023/02/06 17:11 AutoML nataly.zhukova +8 B 2023/02/06 17:09 AutoML nataly.zhukova +7 B 2023/02/06 17:08 AutoML nataly.zhukova +99 B 2023/01/25 13:15 AutoML – created mark +21 B Show differences between selected revisions courses/automl.txt · ",
                "AutoML - "
            ]
        },
        {
            "name": "Олимпиадное программирование",
            "url": "/doku.php/start:olympiad_programming:start",
            "date": "\"2024/02/11 16:34\"",
            "data": [
                "Олимпиадное программирование  МОЭВМ Вики » Олимпиадное программирование start : olympiad_programming : start Table of Contents Олимпиадное программирование Организация Время занятий Темы занятий Олимпиады Внутренние `` ЛЭТИ '' ICPC Внешние ресурсы Тренировочны площадки Олимпиады и конкурсы Разное Олимпиадное программирование Группа ВКонтакте Google-календарь Организация Занятия разделены на 2 вида ( с 2023 года ) : Введение в олимпиадное программирование ( начальный уровень ) : Методическая подготовка : теоретичекий разбор тем по алгоритмам и их реализации ( ~1 час ) Решение подготовленного контеста со значительной частью задач из разобранной темы ( ~1,5 часа ) Разбор задач с тренером ( ~0,5 часа ) Работа в командах : формирование команд и их ведение Тренировки к олимпиадам Имитация проведения олимпиады : команда решает задачи , часто прорешивание различных олимпиад прошлого ( 2-2,5 часа ) Разбор задач с тренером ( ~0,5-1 часа ) Несмотря на разные фокусы занятий , ограничений по посещению любого вида занятий ка23.ким-либо студентом/командой не существует Тренировки повышенной сложности связаны по одной пройденной теме с предшествующей тренировкой начального уровня : то есть как минимум одна из задач именно на разобранную тему на неделе , предшествующей тренировке повышенной сложности Время занятий Введение в олимпиадное программирование ( начальный уровень ) : 18:00 вторника Тренировки к олимпиадам каждую неделю : 18:00 четверга Темы занятий 2024 2023 2022 2021 Олимпиады Советы бывалых Внутренние `` ЛЭТИ '' 2023 / 2024 Вид Дата Видео Команд Участвовало Прошло в следующий тур Квалификация 16.12.2023 youtube 45 Полуфинал Финал 2022 / 2023 Вид Дата Видео Команд Участвовало Прошло в следующий тур Квалификация 11.12.2022 youtube 57 48 Полуфинал 26.03.2023 youtube 37 14 Финал 05.2023 12 2021 / 2022 Вид Дата Видео Команд Участвовало Прошло в следующий тур Квалификация 28.11.2021 youtube 39 25 Полуфинал 27.03.2022 youtube 20 13 Финал 15.05.2022 10 ICPC 2023 / 2024 Вид Дата Команд Участвовало Прошло в следующий тур Квалификация 14.10.2023 25 3 Четвертьфинал 05.11.2023 3 1 Полуфинал 2022 / 2023 Вид Дата Команд Участвовало Прошло в следующий тур Квалификация 08.10.2022 4 3 Четвертьфинал 29.10.2022 2 1 Полуфинал 06.12.2022 1 0 2021 / 2022 Вид Дата Команд Участвовало Прошло в следующий тур Квалификация 1 1 Четвертьфинал Внешние ресурсы Вводная статья от Yandex Тренировочны площадки Школа программиста ( подготовка для школьников ) CodeForces ( множество соревнований и тренировок ) Архив задач ( acm ) Периодические on-line олимпиады и разборы Олимпиады и конкурсы IT-планета Russian Code Cup ( от Mail.ru ) Разное Встреча организаторов `` Стратегия работы на 2023 год '' ( 30.12.2022 ) start/olympiad_programming/start.txt · ",
                "Олимпиадное программирование - ",
                "",
                "2024  МОЭВМ Вики » Олимпиадное программирование » 2024 start : olympiad_programming:2024_studies Table of Contents 2024 Весна Тренировки к олимпиадам ( повышенная сложность ) Введение в олимпиадное программирование ( начальный уровень ) 2024 Весна Тренировки к олимпиадам ( повышенная сложность ) Тема Дата Видео Человек в контесте Сборная 15.02.2024 youtube 2 Сборная 22.02.2024 youtube 1 Сборная 29.02.2024 youtube 5 Введение в олимпиадное программирование ( начальный уровень ) Тема Дата Видео Человек в контесте Теория Разбор Перебор 13.02.2024 2 Перебор / декомпозиция 20.02.2024 youtube youtube 9 Динамическое программирование : начало 27.02.2024 youtube youtube 10 Динамическое программирование : продолжение 05.03.2024 youtube youtube 10 start/olympiad_programming/2024_studies.txt · ",
                "2023  МОЭВМ Вики » Олимпиадное программирование » 2023 start : olympiad_programming:2023_studies Table of Contents 2023 Осень Тренировки к олимпиадам ( повышенная сложность ) Введение в олимпиадное программирование ( начальный уровень ) Весна Тренировки к олимпиадам ( повышенная сложность ) Введение в олимпиадное программирование ( начальный уровень ) 2023 Осень Тренировки к олимпиадам ( повышенная сложность ) Тема Дата Видео Человек в контесте Сборная 23.10.2023 youtube 9 Сборная 30.10.2023 youtube 6 Прорешивание CRRC 2023 02.11.2023 youtube 6 Сборная 06.11.2023 youtube 5 Сборная 13.11.2023 youtube 7 Прорешивание финала NEERC 2018 19.11.2023 youtube 3 Сборная 20.11.2023 youtube 3 Сборная 27.11.2023 youtube 5 Сборная 04.12.2023 youtube 9 Сборная 11.12.2023 youtube 5 Сборная 18.12.2023 youtube 4 Введение в олимпиадное программирование ( начальный уровень ) Тема Дата Видео Человек в контесте Теория Разбор Жадность 21.11.2023 youtube youtube 4 Бинарный поиск 28.11.2023 youtube youtube 4 Контест 3 дивизиона CF 05.12.2023 youtube ? Весна Тренировки к олимпиадам ( повышенная сложность ) Тема Дата Видео Человек в контесте NEERC 13 26.02.2023 youtube 7 NEERC 14 12.03.2023 youtube 7 NEERC 15 02.04.2023 youtube 5 NEERC 16 23.04.2023 youtube 4 NEERC 17 07.05.2023 youtube 6 Введение в олимпиадное программирование ( начальный уровень ) Тема Дата Видео Человек в контесте Жадные арлгоритмы 02.03.2023 youtube 3 Графы 16.03.2023 youtube Сортировка 30.03.2023 youtube 4 Динамическое программирование 13.04.2023 youtube 2 Теория чисел ( НОД , теорема об остатках… ) 27.04.2023 youtube 1 Строки/хеши 18.05.2023 youtube 1 start/olympiad_programming/2023_studies.txt · ",
                "2022  МОЭВМ Вики » Олимпиадное программирование » 2022 start : olympiad_programming:2022_studies 2022 Тема Дата Видео Человек в контесте Разминочная тренировка в начале года 24.02.2022 7 Динамическое программирование 03.03.2022 youtube 5 Двоичный поиск 10.03.2022 youtube 7 Графы . Представление и поиск в ширину 17.03.2022 youtube 5 Перебор 24.03.2022 youtube 7 Комбинаторика 31.03.2022 youtube 6 Строки 07.04.2022 youtube 6 STL-контейнеры 14.04.2022 youtube 3 Интегральные суммы 21.04.2022 youtube 6 Деревья отрезков 28.04.2022 youtube 4 Разреженные таблицы 05.05.2022 youtube 4 Полиномиальные хеши 12.05.2022 youtube 4 Прорешивание четвертьфинала ICPC 2019 21.10.2022 youtube 3 Прорешивание четвертьфинала ICPC 2020 27.10.2022 youtube 6 Прорешивание полуфинала ICPC 2016 08.11.2022 youtube 6 Прорешивание полуфинала ICPC 2018 14.11.2022 youtube 6 Прорешивание полуфинала ICPC 2021 20.11.2022 youtube 6 Прорешивание полуфинала ICPC 2019 27.11.2022 youtube 6 Пробный раунд перед отбором олимпиады “ ЛЭТИ ” ( бинарный поиск ) 10.12.2022 youtube 28 start/olympiad_programming/2022_studies.txt · ",
                "2021  МОЭВМ Вики » Олимпиадное программирование » 2021 start : olympiad_programming:2021_studies 2021 Тема Дата Видео Человек в контесте Основы теории игр 25.11.2021 youtube 34 Жадные алгоритмы 02.12.2021 youtube 13 Теория чисел 09.12.2021 youtube 7 start/olympiad_programming/2021_studies.txt · ",
                "Советы бывалых  МОЭВМ Вики » Олимпиадное программирование » Советы бывалых start : olympiad_programming : broscience Table of Contents Советы бывалых Технические Организационные Разные ICPC Советы бывалых Советы для начинающих олимпиадных программистов от умудрённых опытом участников Технические … Организационные Выбирать какие задачи решать в части сложности можно исходя из текущей турнирной таблицы - брать решённые большим числом остальных команд Разные … ICPC В нашем регионе этапы ICPC разделены на следующие : Квалификация Северо-Запада России ( онлайн ) Квалификация Северо-Запада России ( оффлайн ( в ИТМО ) ) Финал Северной Евразии Финал ICPC Основной тур в каждом этапе длиться 5 часов . В команде по 3 человека . Разрешается использовать для отсылки решений 1 компьютер . P.s . На очных площадках будет предоставляться только 1 компьютер , в онлайн этапе за этим сильно не следят , но от раза к разу не приходится . Самый первый этап проходит онлайн и для того чтобы получить логин и пароль нужно выполнить следуюште шаги : Войти на icpc.global/login На вкладке « Teams » выбрать свою команду Перейти на вкладку « Attachments » Скачать файл « NWQ-PASSWORD… » Найти в файле логин , пароль и URL Более подробная информация на официальном сайте start/olympiad_programming/broscience.txt · ",
                "Встреча организаторов `` Стратегия работы на 2023 год '' ( 30.12.2022 )  МОЭВМ Вики » Олимпиадное программирование » Встреча организаторов `` Стратегия работы на 2023 год '' ( 30.12.2022 ) start : olympiad_programming : org_meeting_30_12_2022 Table of Contents Встреча организаторов `` Стратегия работы на 2023 год '' ( 30.12.2022 ) Повестка Решения Встреча организаторов `` Стратегия работы на 2023 год '' ( 30.12.2022 ) Повестка Разделение на группы текущего и прошлого года Повтор или не повтор тем и тренировок Цели : ICPC полуфинал ( 2-3 команды ) ICPC финал ( 1 команда ) Региональный уровень Школа в Петрозаводске или рядом Преподавательский состав Привлечение студентов к тренировкам Решения Приоритетные цели на 2023 : Выход в финал ICPC 1 команды Увеличение числа команд в четвертьфинале и полуфинале ICPC до 5 и 3 команд соответственно Расширение охвата олимпиадным программированием до ~7 постоянно участвующих в контестах команд на конец семестра Выделить 2 потока студентов : Начальный уровень : разбор избранных тем и решение контестов с подобранными задачами Продвинутый уровень : целенаправленная подготовка к ICPC с большим упором на решение штатных контестов и их разбора Профессиональными тренировками команд к ICPC в основном занимается Фёдор Меньшиков Тренировки начального уровня предложить желающим студентам продвинутого уровня ( в качестве практик / учебной практики / зачётов и т.п . ) , за эти тренировки в целом пока отвечает Евгений Калишенко Сроки занятий : По окончании зимней сессии до зачётной недели весенней сессии ( с середины мая до последней недели июня занятия не проводить ) По окончании весеннего семестра организовать занятия в июле/августе в удалённом формате с желающими командами Занятия осеннего семестра начинать с сентября Расширить информационный охват по занятиям в том числе за счёт работы через студенческий комитет start/olympiad_programming/org_meeting_30_12_2022.txt · ",
                "✎ Олимпиадное программирование  МОЭВМ Вики » Олимпиадное программирование start : olympiad_programming : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Олимпиадное программирование ====== > [ [ https : //vk.com/leti_contest|Группа ВКонтакте ] ] > [ [ https : //calendar.google.com/calendar/embed ? src=3lgitjdnmvqgc7bcst8b0s3jts % 40group.calendar.google.com & ctz=Europe % 2FMoscow|Google-календарь ] ] ===== Организация ===== Занятия разделены на 2 вида ( с 2023 года ) : * Введение в олимпиадное программирование * * ( начальный уровень ) * * : - Методическая подготовка : теоретичекий разбор тем по алгоритмам и их реализации ( ~1 час ) - Решение подготовленного контеста со значительной частью задач из разобранной темы ( ~1,5 часа ) - Разбор задач с тренером ( ~0,5 часа ) - Работа в командах : формирование команд и их ведение * Тренировки к олимпиадам - Имитация проведения олимпиады : команда решает задачи , часто прорешивание различных олимпиад прошлого ( 2-2,5 часа ) - Разбор задач с тренером ( ~0,5-1 часа ) Несмотря на разные фокусы занятий , ограничений по посещению любого вида занятий ка23.ким-либо студентом/командой не существует Тренировки повышенной сложности связаны по одной пройденной теме с предшествующей тренировкой начального уровня : то есть как минимум одна из задач именно на разобранную тему на неделе , предшествующей тренировке повышенной сложности ===== Время занятий ===== * Введение в олимпиадное программирование * * ( начальный уровень ) * * : * * 18:00 вторника * * * Тренировки к олимпиадам каждую неделю : * * 18:00 четверга * * ===== Темы занятий ===== * [ [ 2024_studies ] ] * [ [ 2023_studies ] ] * [ [ 2022_studies ] ] * [ [ 2021_studies ] ] ===== Олимпиады ===== * [ [ broscience ] ] ==== Внутренние `` ЛЭТИ '' ==== === 2023 / 2024 === ^ Вид ^ Дата ^ Видео ^ Команд ^^ ^ : : : ^ : : : ^ : : : ^ Участвовало ^ Прошло в следующий тур ^ |Квалификация | 16.12.2023| [ [ https : //youtu.be/BK5K5ALcM2w|youtube ] ] | 45| | |Полуфинал | | | | | |Финал | | | | | === 2022 / 2023 === ^ Вид ^ Дата ^ Видео ^ Команд ^^ ^ : : : ^ : : : ^ : : : ^ Участвовало ^ Прошло в следующий тур ^ |Квалификация | 11.12.2022| [ [ https : //youtu.be/JJhhSSVUcAc|youtube ] ] | 57| 48| |Полуфинал | 26.03.2023| [ [ https : //youtu.be/A7tgncy73XY|youtube ] ] | 37| 14| |Финал | 05.2023| | 12| | === 2021 / 2022 === ^ Вид ^ Дата ^ Видео ^ Команд ^^ ^ : : : ^ : : : ^ : : : ^ Участвовало ^ Прошло в следующий тур ^ |Квалификация | 28.11.2021| [ [ https : //youtu.be/tl1ePeWrfyM|youtube ] ] | 39| 25| |Полуфинал | 27.03.2022| [ [ https : //youtu.be/OMdLsMx-S6s|youtube ] ] | 20| 13| |Финал | 15.05.2022| | 10| | ==== ICPC ==== === 2023 / 2024 === ^ Вид ^ Дата ^ Команд ^^ ^ : : : ^ : : : ^ Участвовало ^ Прошло в следующий тур ^ |Квалификация | 14.10.2023| 25| 3| |Четвертьфинал | 05.11.2023| 3| 1| |Полуфинал | | | | === 2022 / 2023 === ^ Вид ^ Дата ^ Команд ^^ ^ : : : ^ : : : ^ Участвовало ^ Прошло в следующий тур ^ |Квалификация | 08.10.2022| 4| 3| |Четвертьфинал | 29.10.2022| 2| 1| |Полуфинал | 06.12.2022| 1| 0| === 2021 / 2022 === ^ Вид ^ Дата ^ Команд ^^ ^ : : : ^ : : : ^ Участвовало ^ Прошло в следующий тур ^ |Квалификация | | 1| 1| |Четвертьфинал | | | | ===== Внешние ресурсы ===== * [ [ https : //academy.yandex.ru/journal/sport-dlya-razrabotchikov-kak-ustroeno-olimpiadnoe-programmirovanie|Вводная статья от Yandex ] ] ==== Тренировочны площадки ==== - [ [ https : //acmp.ru|Школа программиста ( подготовка для школьников ) ] ] - [ [ https : //codeforces.com|CodeForces ( множество соревнований и тренировок ) ] ] - [ [ http : //acm.timus.ru/|Архив задач ( acm ) ] ] - [ [ https : //www.codechef.com|Периодические on-line олимпиады и разборы ] ] ==== Олимпиады и конкурсы ==== - [ [ http : //world-it-planet.org/description|IT-планета ] ] - [ [ https : //www.russiancodecup.ru|Russian Code Cup ( от Mail.ru ) ] ] ===== Разное ===== * [ [ org_meeting_30_12_2022 ] ] start/olympiad_programming/start.txt · ",
                "Олимпиадное программирование - Old revisions  МОЭВМ Вики » Олимпиадное программирование start : olympiad_programming : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/11 16:34 Олимпиадное программирование kalishenko +13 B ( current ) 2023/12/16 15:16 Олимпиадное программирование kalishenko +40 B 2023/12/16 09:30 Олимпиадное программирование kalishenko +294 B 2023/11/25 12:14 Олимпиадное программирование kalishenko +18 B 2023/11/05 17:36 Олимпиадное программирование kalishenko +154 B 2023/11/05 17:21 Олимпиадное программирование kalishenko +34 B 2023/10/23 21:52 Олимпиадное программирование kalishenko -140 B 2023/10/23 21:51 Олимпиадное программирование kalishenko -165 B 2023/10/23 21:48 Олимпиадное программирование kalishenko -312 B 2023/10/14 16:25 Олимпиадное программирование kalishenko +541 B 2023/10/14 14:59 Олимпиадное программирование kalishenko +50 B 2023/10/12 21:16 Олимпиадное программирование kalishenko +282 B 2023/10/12 21:11 Олимпиадное программирование kalishenko -4.1 KB 2023/05/22 05:20 Олимпиадное программирование kalishenko +1 B 2023/05/22 05:20 Олимпиадное программирование kalishenko +53 B 2023/05/13 09:02 Олимпиадное программирование kalishenko +41 B 2023/05/09 11:30 Олимпиадное программирование kalishenko +11 B 2023/05/04 11:12 Олимпиадное программирование kalishenko +43 B 2023/04/24 20:44 Олимпиадное программирование kalishenko +41 B 2023/04/24 05:43 Олимпиадное программирование kalishenko +58 B 2023/04/07 04:28 Олимпиадное программирование kalishenko +40 B Show differences between selected revisions less recent > > start/olympiad_programming/start.txt · ",
                "Олимпиадное программирование - "
            ]
        },
        {
            "name": "FAQ",
            "url": "/doku.php/faq",
            "date": "\"2024/02/19 08:38\"",
            "data": [
                "Часто задаваемые вопросы  Часто задаваемые вопросы faq Часто задаваемые вопросы Как определить stepik ID ( временно не работает ) Как определить ваш логин ( он же имя пользователя / username ) на сайте e.moevm.info Как правильно подписать свое имя на Pruffme faq.txt · ",
                "Часто задаваемые вопросы - ",
                "",
                "Как определить stepik-id  Часто задаваемые вопросы » Как определить stepik-id faq : stepik_id Как определить stepik-id faq/stepik_id.txt · ",
                "( временно не работает ) Как определить ваш логин ( он же имя пользователя / username ) на сайте e.moevm.info  Часто задаваемые вопросы » ( временно не работает ) Как определить ваш логин ( он же имя пользователя / username ) на сайте e.moevm.info faq : emoevminfo_login ( временно не работает ) Как определить ваш логин ( он же имя пользователя / username ) на сайте e.moevm.info https : //youtu.be/K6kCEreVoW4 faq/emoevminfo_login.txt · ",
                "Как правильно подписать свое имя на Pruffme  Часто задаваемые вопросы » Как правильно подписать свое имя на Pruffme faq : pruffme_setup_name Как правильно подписать свое имя на Pruffme faq/pruffme_setup_name.txt · ",
                "✎ Часто задаваемые вопросы  Часто задаваемые вопросы faq This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . == Часто задаваемые вопросы == * [ [ faq : :stepik_id| Как определить stepik ID ] ] * [ [ faq : emoevminfo_login ] ] * [ [ faq : pruffme_setup_name ] ] faq.txt · ",
                "Часто задаваемые вопросы - Old revisions  Часто задаваемые вопросы faq Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/19 08:38 Часто задаваемые вопросы mark +32 B ( current ) 2023/04/19 07:48 Часто задаваемые вопросы mark -126 B 2023/04/19 07:44 Часто задаваемые вопросы mark +156 B 2022/12/10 09:08 Часто задаваемые вопросы – external edit 127.0.0.1 ±0 B 2016/09/10 17:09 Часто задаваемые вопросы kkv ±0 B 2016/09/10 17:09 Часто задаваемые вопросы – created kkv +115 B Show differences between selected revisions faq.txt · ",
                "Часто задаваемые вопросы - "
            ]
        },
        {
            "name": "Summer Schools",
            "url": "/doku.php/start:summer_schools",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "2017 : Software Engineering for IoT and Robotics  МОЭВМ Вики » 2017 : Software Engineering for IoT and Robotics start : summer_schools 2017 : Software Engineering for IoT and Robotics Intro into Embedded Intro into Linux Kernel Intro into Robot Operating System jkk start/summer_schools.txt · ",
                "2017 : Software Engineering for IoT and Robotics - ",
                "",
                "start : jkk  МОЭВМ Вики » jkk start : jkk This topic does not exist yet You 've followed a link to a topic that does n't exist yet . If permissions allow , you may create it by clicking on “ Create this page ” . Page Tools Show pagesourceOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "✎ 2017 : Software Engineering for IoT and Robotics  МОЭВМ Вики » 2017 : Software Engineering for IoT and Robotics start : summer_schools This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ==== 2017 : Software Engineering for IoT and Robotics ==== * { { : start:1.embedded.pdf |Intro into Embedded } } * { { : start:2.linux.intro.pdf | Intro into Linux Kernel } } * { { : start : summer.zip | Intro into Robot Operating System } } * [ [ jkk ] ] start/summer_schools.txt · ",
                "2017 : Software Engineering for IoT and Robotics - Old revisions  МОЭВМ Вики » 2017 : Software Engineering for IoT and Robotics start : summer_schools Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 2017 : Software Engineering for IoT and Robotics ( external edit ) ( current ) 2017/09/11 10:23 2017 : Software Engineering for IoT and Robotics kkv +5 B 2017/09/11 10:23 2017 : Software Engineering for IoT and Robotics kkv +5 B 2017/07/14 08:36 2017 : Software Engineering for IoT and Robotics anton.filatov +24 B 2017/07/14 08:30 2017 : Software Engineering for IoT and Robotics anton.filatov +40 B 2017/07/12 04:56 2017 : Software Engineering for IoT and Robotics kkv +1 B 2017/07/12 04:56 2017 : Software Engineering for IoT and Robotics kkv +87 B 2017/07/12 04:49 2017 : Software Engineering for IoT and Robotics – created kkv +82 B Show differences between selected revisions start/summer_schools.txt · ",
                "2017 : Software Engineering for IoT and Robotics - "
            ]
        },
        {
            "name": "Отправка отчетов",
            "url": "/doku.php/start:report_submission",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года  МОЭВМ Вики » Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года start : report_submission Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года Должны быть собраны и представлены результаты работы за осенний семестр 2017/2018 уч . года , сроки представления 31.10.2017 и 29.12.2017 Студенты собирают результаты своей работы по каждой дисциплине кафедры МО ЭВМ : Отчеты по лабораторным работам Пояснительные записки к курсовым работам Индивидуальные домашние задания Тексты программ Другие материалы в электронном виде Материалы должны быть собраны в папки по видам отчетности , например , ЛР1 , ЛР2 , КР и т.д . Папки с материалами по дисциплине должны быть заархивированы в файл zip , имеющий имя в формате : XXXX-NAME-LASTNAME-FIRSTNAME.zip , где : XXXX - номер группы , NAME - сокращенное название дисциплины из списка из файла LASTNAME - ФАМИЛИЯ , FIRSTNAME - ИМЯ . Пример : 6303-ПРОГ-ИВАНОВ-ИВАН.zip Сформированный архив нужно отправить по электронной почте на адрес report ( at ) moevm.info Архивы по каждой дисциплине отправляйте отдельными файлами , в общий архив не собирайте Отчеты , выполненные “ бригадой ” , включаются в архивы каждого из соавторов start/report_submission.txt · ",
                "Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года - ",
                "",
                "✎ Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года  МОЭВМ Вики » Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года start : report_submission This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . === Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года === * Должны быть собраны и представлены результаты работы за осенний семестр 2017/2018 уч . года , сроки представления 31.10.2017 и 29.12.2017 * Студенты собирают результаты своей работы по каждой дисциплине кафедры МО ЭВМ : * Отчеты по лабораторным работам * Пояснительные записки к курсовым работам * Индивидуальные домашние задания * Тексты программ * Другие материалы в электронном виде * Материалы должны быть собраны в папки по видам отчетности , например , ЛР1 , ЛР2 , КР и т.д . * Папки с материалами по дисциплине должны быть заархивированы в файл zip , имеющий имя в формате : XXXX-NAME-LASTNAME-FIRSTNAME.zip , где : * XXXX - номер группы , * NAME - * * сокращенное название дисциплины из списка * * из { { : start : disc.2018.autumn_.doc |файла } } * LASTNAME - ФАМИЛИЯ , * FIRSTNAME - ИМЯ . Пример : * * 6303-ПРОГ-ИВАНОВ-ИВАН.zip * * * Сформированный архив нужно отправить по электронной почте на адрес report ( at ) moevm.info * Архивы по каждой дисциплине отправляйте отдельными файлами , в общий архив не собирайте * Отчеты , выполненные `` бригадой '' , включаются в архивы каждого из соавторов start/report_submission.txt · ",
                "Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года - Old revisions  МОЭВМ Вики » Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года start : report_submission Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года ( external edit ) ( current ) 2018/04/16 07:27 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года – external edit 127.0.0.1 ±0 B 2017/09/04 16:08 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года anna.liss +1 B 2017/09/04 16:06 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года anna.liss -1 B 2017/09/04 15:51 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года anna.liss ±0 B 2017/09/04 15:50 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года anna.liss +1 B 2016/12/15 18:53 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +227 B 2016/12/15 15:59 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +137 B 2016/12/15 15:08 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss ±0 B 2016/12/15 15:07 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +1 B 2016/12/15 15:04 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +165 B 2016/12/15 14:56 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года kkv -104 B 2016/12/15 14:44 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +60 B 2016/12/15 14:37 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +1.3 KB 2016/12/15 13:42 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss -11 B 2016/12/15 13:27 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года annaliss +161 B 2016/12/15 13:00 Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года – created kkv +10 B Show differences between selected revisions start/report_submission.txt · ",
                "Порядок представления электронных версий отчетов за осенний семестр 2017/2018 уч . года - "
            ]
        },
        {
            "name": "SPCN 2020",
            "url": "/doku.php/start:spcn_2020",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "start : spcn_2020  МОЭВМ Вики » spcn_2020 start : spcn_2020 Презентация Подробное описание кейсов Форма выбора кейса Форма регистрации ссылки на репозиторий с решением Telegram-канал для быстрого общения start/spcn_2020.txt · ",
                "start : spcn_2020 - ",
                "",
                "✎ start : spcn_2020  МОЭВМ Вики » spcn_2020 start : spcn_2020 This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . * [ [ https : //docs.google.com/presentation/d/13C10l6z99G1hW1PRzQkQ5mXoee4eEtxx1hbQK8_4ahE/edit ? usp=sharing|Презентация ] ] * [ [ https : //docs.google.com/document/d/e/2PACX-1vQAyYQ0Ni7Y74BlRCZh6gx4K4w5-Jq1FxsvAz47iz1NH4g_jEsC8c1NdtI-J9QwZQ4RqfbhtqSyBS7c/pub|Подробное описание кейсов ] ] * [ [ https : //forms.gle/xDN5ytzQsvfKuMbC9|Форма выбора кейса ] ] * [ [ https : //forms.gle/k8f3rA1NckboCAYg9|Форма регистрации ссылки на репозиторий с решением ] ] * [ [ https : //t.me/joinchat/DNsbgh18raIbvMHuncwefg|Telegram-канал для быстрого общения ] ] start/spcn_2020.txt · ",
                "start : spcn_2020 - Old revisions  МОЭВМ Вики » spcn_2020 start : spcn_2020 Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 start : spcn_2020 ( external edit ) ( current ) 2020/11/10 06:58 start : spcn_2020 pro100kot +114 B 2020/11/10 06:34 start : spcn_2020 – created pro100kot +500 B Show differences between selected revisions start/spcn_2020.txt · ",
                "start : spcn_2020 - "
            ]
        },
        {
            "name": "Магистрам",
            "url": "/doku.php/start:report_for_mcs",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Магистрам  МОЭВМ Вики » Магистрам start : report_for_mcs Магистрам Для того , чтобы комфортно себя чувствовать в течение всего периода обучения в магистратуре , необходимо выполнить следуюшие действия по регистрации : Завести ( если нет ) аккаунт на http : //stepik.org Завести ( если нет ) аккаунт на http : //github.com Заполнить форму Практики Семестр Наименование Назначение 1 Учебная Участие в учебной работе , помощь преподавателям ; Выбор и согласование темы НИР 2 НИР Научная работа , подготовка публикаций ; работа над ВКР 3 НИР Научная работа , подготовка публикаций ; работа над ВКР 4 Преддипломная Подготовка рукописи ; Подготовка к защите Выбор и согласование темы НИР ( сроки ) Мероприятие1 год2 год Публикация вариантов тем/направлений НИР кафедрой15.0915.09 Сбор предложений тем/руководителей от студентов15.0915.09 Финальное согласование тем/руководителей/магистрантов25.1010.10 Публикации В течение каждого семестра обучения в магистратуре , магистрант должен готовить минимум одну публикацию в рецензируемом источнике , а также делать доклад на конференции . Ресурсы кафедры Основная страница : http : //moevm.info twitter : https : //twitter.com/moevm_leti VK : https : //vk.com/moevm_leti Email для связи с администрацией : ask ( at ) moevm.info start/report_for_mcs.txt · ",
                "Магистрам - ",
                "",
                "✎ Магистрам  МОЭВМ Вики » Магистрам start : report_for_mcs This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . === Магистрам === Для того , чтобы комфортно себя чувствовать в течение всего периода обучения в магистратуре , необходимо выполнить следуюшие действия по регистрации : * Завести ( если нет ) аккаунт на http : //stepik.org * Завести ( если нет ) аккаунт на http : //github.com * Заполнить [ [ https : //goo.gl/forms/xaoDDmAeRNYlwIFj1|форму ] ] === Практики === | * * Семестр * * | * * Наименование * * | * * Назначение * * | | 1 | Учебная | Участие в учебной работе , помощь преподавателям ; Выбор и согласование темы НИР | | 2 | НИР | Научная работа , подготовка публикаций ; работа над ВКР | | 3 | НИР | Научная работа , подготовка публикаций ; работа над ВКР | | 4 | Преддипломная | Подготовка рукописи ; Подготовка к защите | === Выбор и согласование темы НИР ( сроки ) === | * * Мероприятие * * | * * 1 год * * | * * 2 год * * | |Публикация вариантов тем/направлений НИР кафедрой|15.09|15.09| |Сбор предложений тем/руководителей от студентов|15.09|15.09| |Финальное согласование тем/руководителей/магистрантов|25.10|10.10| === Публикации === В течение каждого семестра обучения в магистратуре , магистрант должен готовить минимум одну публикацию в рецензируемом источнике , а также делать доклад на конференции . === Ресурсы кафедры === * Основная страница : http : //moevm.info * twitter : https : //twitter.com/moevm_leti * VK : https : //vk.com/moevm_leti * Email для связи с администрацией : ask ( at ) moevm.info start/report_for_mcs.txt · ",
                "Магистрам - Old revisions  МОЭВМ Вики » Магистрам start : report_for_mcs Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Магистрам ( external edit ) ( current ) 2017/09/04 11:13 Магистрам – [ Выбор и согласование темы НИР ( сроки ) ] kkv -18 B 2017/09/04 11:12 Магистрам – [ Выбор и согласование темы НИР ( сроки ) ] kkv +99 B 2017/09/04 10:33 Магистрам – created kkv +1.8 KB Show differences between selected revisions start/report_for_mcs.txt · ",
                "Магистрам - "
            ]
        },
        {
            "name": "Учебные материалы по работе со Stepik",
            "url": "/doku.php/staff:stepik_materials",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Материалы по работе со Stepik  Сотрудникам » Материалы по работе со Stepik staff : stepik_materials Материалы по работе со Stepik Создание задач для Stepik Алгоритм обработки комментариев staff/stepik_materials.txt · ",
                "Материалы по работе со Stepik - ",
                "",
                "Создание задач для Stepik  Сотрудникам » Создание задач для Stepik staff : stepik Table of Contents Создание задач для Stepik Linux Challenge Как локально отлаживать задачи Linux Challenge Чеклист отладки задачи Linux Challenge Создание задач для Stepik Linux Challenge Базовый мануал по LC https : //stepik.org/lesson/9180/step/1 ? unit=1725 Технические ограничения LC https : //support.stepik.org/en/support/solutions/articles/19000015512-linux-challenge-issues Templates for Linux Challenge https : //github.com/OSLL/stepik_templates Презентация про создание Linux Challenge https : //bitbucket.org/mark_zaslavskiy/teaching_meta/src/master/slides/creating_stepik_linux_challenges.pdf ? at=master & fileviewer=file-view-default Как локально отлаживать задачи Linux Challenge docker pull stepic/challenge-base docker run -- name stepik -t stepic/challenge-base docker exec -it stepik bash -c 'su box' Чеклист отладки задачи Linux Challenge Stepik не отображает ошибки в bootstrap и/или test scenraio . При открытии терминала и нажатии Enter допустимая задержка перед появление приглашения командной строки не более трех секунд , не должен отображаться вывод скриптов инициализации задачи . На файловой системе не должно быть следов настройки задачи ( скрипты , лишние файлы ) - только файл с условием ( если нужен ) и зашифрованный правильный ответ ( если есть ) . Если сразу же после начала решения задачи нажать Submit , задача не отмечается как решенная . Если задача подразумевает наличие файла с ответом : При пустом файле задача не должна отмечатся как решенная . При наличии случайного содержимого задача не должна отмечатся как решенная . При правильном решении задачи она отмечается как решенная . staff/stepik.txt · ",
                "Алгоритм обработки комментариев  Сотрудникам » Алгоритм обработки комментариев staff : stepik_comments_processing Алгоритм обработки комментариев Общие идеи : Улучшать курс за счет комментариев пользователей , Поощрять и принимать участие в конструктивных дискусиях , Отмечать предлагаемые улучшения и дополнительные материалы , Обрабатывать найденные баги , Давать пользователям такие подсказки , которые сделают курс лучше . На что необходимо обращать внимание : Авторы курса не обязаны отвечать на 100 % комментариев . Материалы курса точно содержат ошибки . Прежде , чем посчитать , что проблема на стороне пользователя , подумайте - может быть проблема в курсе ? Курс подразумевает самостоятельную работу над задачами и освоение учебных материалов , поэтому ситуация когда над задачей нужно думать - нормальна . Часто неконструктивные с виду комментарии могут содержать полезный фидбек . Алгоритм : Определите конструктивность комментария : Конструктивный Ссылка/рассказ о полезных материалах / подсказка ( без спойлеров ) или совет по задаче - поставить палец вверх , поблагодарить . Если очень хорошо написано - закрепить . Описание бага в материалах ( не видео ) - проверить наличие , подумать , на чьей стороне проблема спланировать исправление/исправить , поблагодарить и сказать , что исправили/исправим . Описание бага в материалах ( видео ) - проверить наличие , создать баг на доске , поблагодарить и сказать , что в будущем учтем . просьба подсказать к авторам - ( если в комменте есть фрагмент решения - отредактировать и удалить ) , проверить последнее решение человека , убедиться , что проблема именно в решении , а не в проверяющей системе/материалах , по возможности в ответе сослаться на существующие материалы вопросы по материалу - создайте степ с ответом в уроке “ Дополнительные материалы ” соответствующего модуля , ответьте ссылкой на степ . Фрагменты решений/ целые решения ( если больше ничего не содержится ) - удалить Неконструктивный - поставить дизлайк эскалировать staff/stepik_comments_processing.txt · ",
                "✎ Материалы по работе со Stepik  Сотрудникам » Материалы по работе со Stepik staff : stepik_materials This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Материалы по работе со Stepik ====== - [ [ staff : stepik|Создание задач для Stepik ] ] - [ [ staff : stepik_comments_processing|Алгоритм обработки комментариев ] ] staff/stepik_materials.txt · ",
                "Материалы по работе со Stepik - Old revisions  Сотрудникам » Материалы по работе со Stepik staff : stepik_materials Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Материалы по работе со Stepik ( external edit ) ( current ) Show differences between selected revisions staff/stepik_materials.txt · ",
                "Материалы по работе со Stepik - "
            ]
        },
        {
            "name": "МДП",
            "url": "/doku.php/start:mdp",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Описание тем МДП  МОЭВМ Вики » Описание тем МДП start : mdp Описание тем МДП [ IND ] Темы 1-10 описаны в файле [ ST ] Тема 11 Исследование производительности Open v storage Open V Storage проект открытого программного обеспечения для построения центра обработки данных . Требуется разобраться в его установкой и конфигурированием $ hазработать и реализовать методику оценки производительности . Возможно , потребуется параллельная разработка инструментов для измерения характеристик системы . [ MOOC ] Темы 12-18 Автоматизация проверяющей системы для MOOC Требуется разработать средства автоматизации рутинных задач для электронного курса на платформе stepik [ OS ] Тема 19 Участие в Open Source разработке известного проекта Вы можете выбрать произвольный , но достаточно известный Open Source проект с устоявшейся системой и политикой внесения изменений и разработать патч для этого проекта , который будет принят сообществом . Сопутствующие материалы и ссылки Требования к отчетам Студенты и темы start/mdp.txt · ",
                "Описание тем МДП - ",
                "",
                "Требования к отчетам по МДП  МОЭВМ Вики » Описание тем МДП » Требования к отчетам по МДП start : mdp : reports Требования к отчетам по МДП Отчеты по междисциплинарному проекту оформляются в соответствии с требованиями СПбГЭТУ , используются следующие шаблоны по направлениям : Программная инженерия Прикладная математика Электронные копии копии отчетов высылаются на email адрес < mdp-reports -на- moevm.info > электронная копия содержит отчет в редактируемом ( doc , docx , odp , … ) формате и в pdf все высылается одним zip файлом , именованным следующим образом GGGG-lastname-firstname.zip , где GGGG – номер учебной группы lastname – фамилия студента firstname – имя студента Бумажные копии отчетов сдаются в канцелярию кафедры Срок сдачи отчетов по МДП 27.12.2016 start/mdp/reports.txt · ",
                "✎ Описание тем МДП  МОЭВМ Вики » Описание тем МДП start : mdp This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . == Описание тем МДП == === [ IND ] Темы 1-10 === * описаны в { { : start : mdp1-10.pdf |файле } } === [ ST ] Тема 11 Исследование производительности Open v storage === [ [ https : //github.com/openvstorage |Open V Storage ] ] проект открытого программного обеспечения для построения центра обработки данных . Требуется разобраться в его установкой и конфигурированием $ hазработать и реализовать методику оценки производительности . Возможно , потребуется параллельная разработка инструментов для измерения характеристик системы . === [ MOOC ] Темы 12-18 Автоматизация проверяющей системы для MOOC === Требуется разработать средства автоматизации рутинных задач для электронного [ [ https : //stepik.org/course/ % D0 % 9E % D1 % 81 % D0 % BD % D0 % BE % D0 % B2 % D1 % 8B- % D0 % BF % D1 % 80 % D0 % BE % D0 % B3 % D1 % 80 % D0 % B0 % D0 % BC % D0 % BC % D0 % B8 % D1 % 80 % D0 % BE % D0 % B2 % D0 % B0 % D0 % BD % D0 % B8 % D1 % 8F- % D0 % B4 % D0 % BB % D1 % 8F-Linux-548/|курса ] ] на платформе stepik === [ OS ] Тема 19 Участие в Open Source разработке известного проекта === Вы можете выбрать произвольный , но достаточно известный Open Source проект с устоявшейся системой и политикой внесения изменений и разработать патч для этого проекта , который будет принят сообществом . === Сопутствующие материалы и ссылки === * [ [ . : mdp : reports|Требования к отчетам ] ] * [ [ https : //docs.google.com/spreadsheets/d/1hhu9W988nFFnannnrkZK4LE8lleEo6GpNo1Z8L6CIfE/edit ? usp=sharing|Студенты и темы ] ] start/mdp.txt · ",
                "Описание тем МДП - Old revisions  МОЭВМ Вики » Описание тем МДП start : mdp Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Описание тем МДП ( external edit ) ( current ) 2016/10/31 07:15 Описание тем МДП kkv +58 B 2016/10/31 06:38 Описание тем МДП kkv ±0 B 2016/10/31 06:37 Описание тем МДП kkv +24 B 2016/10/13 07:16 Описание тем МДП kkv +4 B 2016/10/13 07:15 Описание тем МДП kkv +128 B 2016/10/06 13:14 Описание тем МДП kkv -2 B 2016/10/06 10:32 Описание тем МДП – created kkv +1.8 KB Show differences between selected revisions start/mdp.txt · ",
                "Описание тем МДП - "
            ]
        },
        {
            "name": "Разработка ПО с GUI",
            "url": "/doku.php/courses:gui:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Разработка ПО с GUI  Курсы » Разработка ПО с GUI courses : gui : start Разработка ПО с GUI Видеолекции по Qt Видеолекции по QtQuick Qt tutorials Этапы разработки Desktop приложения 1.Описание и анализ проекта 2.Основные итерации 3.Релиз windows 4.Релиз linux Полезные ссылки MIT 6.831 User Interface Design and Implementation courses/gui/start.txt · ",
                "Разработка ПО с GUI - ",
                "",
                "Описание и анализ проекта  Курсы » Разработка ПО с GUI » Описание и анализ проекта courses : gui : stage1 Описание и анализ проекта В репозитории создается wiki страница содержащая : Наименование проекта Список участников Анализ пользователей Список типов пользователей . Основная задача каждого типа . Для каждого типа пользователя привести список сценариев использования Анализ предметной области Описание основных понятий предметной области в формате тезауруса Анализ задач и разработка архитектуры Выделить 3 основных задачи , которые требуется решить в рамках проекта ( список ) Разработать архитектуру приложения ( диаграмма компонентов + описание ) courses/gui/stage1.txt · ",
                "Выполнение проекта  Курсы » Разработка ПО с GUI » Выполнение проекта courses : gui : stage2 Выполнение проекта Выполнение проекта осуществляется итерационно Итерация длится 2 недели Вначале каждой итерации команда создает страницу с описанием : задач которые будут выполнены в рамках итерации сценарии использования , которые будут использоваться для проверки список ограничений ( если требуется ) Приемка работы осуществляется при наличии кода в репозитарии , в виде “ живой ” демонстрации очередной версии программы . courses/gui/stage2.txt · ",
                "courses : gui : stage3  Курсы » Разработка ПО с GUI » stage3 courses : gui : stage3 This topic does not exist yet You 've followed a link to a topic that does n't exist yet . If permissions allow , you may create it by clicking on “ Create this page ” . Page Tools Show pagesourceOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "courses : gui : stage4  Курсы » Разработка ПО с GUI » stage4 courses : gui : stage4 This topic does not exist yet You 've followed a link to a topic that does n't exist yet . If permissions allow , you may create it by clicking on “ Create this page ” . Page Tools Show pagesourceOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "✎ Разработка ПО с GUI  Курсы » Разработка ПО с GUI courses : gui : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Разработка ПО с GUI ====== * [ [ https : //www.youtube.com/watch ? v=n9K87FwKUZw & list=PL754BBE9A89BA9D3B|Видеолекции по Qt ] ] * [ [ https : //www.youtube.com/playlist ? list=PL6sOPlpzmAmwLDtMn7eUszjdBlqeUvChC|Видеолекции по QtQuick ] ] * [ [ http : //doc.qt.io/qt-5/qtexamplesandtutorials.html|Qt tutorials ] ] === Этапы разработки Desktop приложения === * [ [ stage1|1.Описание и анализ проекта ] ] * [ [ stage2|2.Основные итерации ] ] * [ [ stage3|3.Релиз windows ] ] * [ [ stage4|4.Релиз linux ] ] === Полезные ссылки === * [ [ https : //ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-831-user-interface-design-and-implementation-spring-2011/index.htm|MIT 6.831 User Interface Design and Implementation ] ] courses/gui/start.txt · ",
                "Разработка ПО с GUI - Old revisions  Курсы » Разработка ПО с GUI courses : gui : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Разработка ПО с GUI ( external edit ) ( current ) 2018/11/25 21:10 Разработка ПО с GUI – ↷ Page moved from start : gui : start to courses : gui : start kalishenko +964 B 2018/11/25 21:10 Разработка ПО с GUI – ↷ Links adapted because of a move operation kalishenko -20 B 2018/11/25 21:10 Разработка ПО с GUI – ↷ Page moved and renamed from start : gui to start : gui : start kalishenko +984 B 2018/11/25 21:09 Разработка ПО с GUI kalishenko +6 B 2018/04/16 07:27 Разработка ПО с GUI – external edit 127.0.0.1 ±0 B 2018/02/15 07:33 Разработка ПО с GUI kkv +117 B 2018/02/15 06:56 Разработка ПО с GUI kkv +71 B 2018/02/15 06:54 Разработка ПО с GUI kkv +8 B 2018/02/15 06:53 Разработка ПО с GUI kkv +100 B 2017/03/02 05:39 Разработка ПО с GUI kkv +165 B 2017/03/02 05:25 Разработка ПО с GUI kkv +112 B 2017/03/02 05:13 Разработка ПО с GUI kkv +240 B 2017/03/02 04:29 Разработка ПО с GUI – created kkv +165 B Show differences between selected revisions courses/gui/start.txt · ",
                "Разработка ПО с GUI - "
            ]
        },
        {
            "name": "AI Systems practice",
            "url": "/doku.php/start:ai-practice",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "AI Practice  МОЭВМ Вики » AI Practice start : ai-practice Table of Contents Projects Rating and status OpenCV examples AI Practice Registration form Projects * [ [ http : //vizdoom.cs.put.edu.pl/ | VizDoom ] ] * [ [ https : //www.duckietown.org/research/AI-Driving-Olympics | AI Driving Olympics ] ] Rating and status Status table OpenCV examples Contours start/ai-practice.txt · ",
                "AI Practice - ",
                "",
                "✎ AI Practice  МОЭВМ Вики » AI Practice start : ai-practice This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . === AI Practice === * [ [ https : //goo.gl/forms/yjP4FXbKZBSq6TD72|Registration form ] ] ==== Projects ==== * [ [ http : //vizdoom.cs.put.edu.pl/ | VizDoom ] ] * [ [ https : //www.duckietown.org/research/AI-Driving-Olympics | AI Driving Olympics ] ] ==== Rating and status ==== * [ [ https : //docs.google.com/spreadsheets/d/1OJhPRvvcaxzxkSO1gcf3G9CqyRQ0Zg_9Y7XUPtVHilk/edit ? usp=sharing|Status table ] ] ==== OpenCV examples ==== * [ [ https : //opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_contours/py_contour_features/py_contour_features.html # contour-features|Contours ] ] start/ai-practice.txt · ",
                "AI Practice - Old revisions  МОЭВМ Вики » AI Practice start : ai-practice Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 AI Practice ( external edit ) ( current ) 2018/12/15 10:29 AI Practice kkv +198 B 2018/09/20 09:24 AI Practice kkv +165 B 2018/09/20 09:22 AI Practice kkv +2 B 2018/09/20 09:07 AI Practice kkv -2 B 2018/09/20 09:07 AI Practice – created kkv +233 B Show differences between selected revisions start/ai-practice.txt · ",
                "AI Practice - "
            ]
        },
        {
            "name": "Список конференций",
            "url": "/doku.php/staff:conferences",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "staff : conferences  Сотрудникам » conferences staff : conferences Конференции : [ СПБ ] Неделя науки СПБГПУ https : //week-science.spbstu.ru/ , проводиться в ноябре . [ СПБ ] Конференция профессорско-преподавательского состава СПБГЭТУ “ ЛЭТИ ” , https : //etu.ru/ru/universitet/konferencii-forumy-seminary/2019/72-ntk-pps - проводиться в начале весеннего семестра . “ FRUCT ” https : //www.fruct.org/ , проводиться в конце осени и весны . [ СПБ ] “ Наука настоящего и будущего ” http : //nnb.eltech.ru/ , проводиться в начале весны . [ СПБ ] “ Конгресс молодых ученых ” , ИТМО http : //kmu.ifmo.ru/ , проводиться в апреле . [ СПБ ] SEIM , https : //seim-conf.org/ проводиться в апреле . [ СПБ ] « Международная конференция по мягким вычислениям и измерениям » https : //scm.etu.ru , проводиться в конце весны . Журналы : Компьютерные инструменты в образовании , https : //etu.ru/ru/fakultety/fakultet-kompyuternyh-tehnologiy-i-informatiki/obshaya-informaciya/zhurnaly-kompyuternye-instrumenty-v-obrazovanii-i-kompyutepnye-instpumenty-v-shkole « Научно-технический вестник информационных технологий , механики и оптики » https : //ntv.ifmo.ru/ Постоянно пополняемый список международных конференций http : //www.wikicfp.com/cfp/ staff/conferences.txt · ",
                "staff : conferences - ",
                "",
                "✎ staff : conferences  Сотрудникам » conferences staff : conferences This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . Конференции : - [ СПБ ] Неделя науки СПБГПУ https : //week-science.spbstu.ru/ , проводиться в ноябре . - [ СПБ ] Конференция профессорско-преподавательского состава СПБГЭТУ `` ЛЭТИ '' , https : //etu.ru/ru/universitet/konferencii-forumy-seminary/2019/72-ntk-pps - проводиться в начале весеннего семестра . - `` FRUCT `` https : //www.fruct.org/ , проводиться в конце осени и весны . - [ СПБ ] `` Наука настоящего и будущего '' http : //nnb.eltech.ru/ , проводиться в начале весны . - [ СПБ ] `` Конгресс молодых ученых '' , ИТМО http : //kmu.ifmo.ru/ , проводиться в апреле . - [ СПБ ] SEIM , https : //seim-conf.org/ проводиться в апреле . - [ СПБ ] « Международная конференция по мягким вычислениям и измерениям » https : //scm.etu.ru , проводиться в конце весны . Журналы : - Компьютерные инструменты в образовании , https : //etu.ru/ru/fakultety/fakultet-kompyuternyh-tehnologiy-i-informatiki/obshaya-informaciya/zhurnaly-kompyuternye-instrumenty-v-obrazovanii-i-kompyutepnye-instpumenty-v-shkole - « Научно-технический вестник информационных технологий , механики и оптики » https : //ntv.ifmo.ru/ Постоянно пополняемый список международных конференций http : //www.wikicfp.com/cfp/ staff/conferences.txt · ",
                "staff : conferences - Old revisions  Сотрудникам » conferences staff : conferences Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 staff : conferences ( external edit ) ( current ) 2019/10/10 10:00 staff : conferences mark -4.9 KB 2018/04/16 07:27 staff : conferences – external edit 127.0.0.1 ±0 B 2017/04/13 07:54 staff : conferences mark +48 B 2017/02/16 10:20 staff : conferences eduard_blees +1.5 KB 2017/02/10 08:45 staff : conferences mark -527 B 2017/01/27 18:07 staff : conferences eduard_blees +18 B 2017/01/27 18:06 staff : conferences eduard_blees -2 B 2017/01/27 18:05 staff : conferences eduard_blees -8 B 2017/01/27 18:05 staff : conferences eduard_blees +31 B 2017/01/27 18:03 staff : conferences eduard_blees +2.3 KB 2017/01/27 18:01 staff : conferences eduard_blees +680 B 2016/12/02 12:18 staff : conferences kkv +219 B 2016/11/22 11:32 staff : conferences eduard_blees +263 B 2016/11/15 20:18 staff : conferences eduard_blees +527 B 2016/11/14 21:31 staff : conferences eduard_blees +510 B 2016/11/14 21:27 staff : conferences eduard_blees +491 B 2016/11/04 09:32 staff : conferences – created mark +35 B Show differences between selected revisions staff/conferences.txt · ",
                "staff : conferences - "
            ]
        },
        {
            "name": "Сотрудникам",
            "url": "/doku.php/staff:start",
            "date": null,
            "data": [
                "Сотрудникам  Сотрудникам staff : start Permission Denied Sorry , you do n't have enough rights to continue . Login You are currently not logged in ! Enter your authentication credentials below to log in . You need to have cookies enabled to log in . Log In Username Password Remember me Log In Forgotten your password ? Get a new one : Set new password Page Tools Show pageOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "Сотрудникам - ",
                "",
                "Set new password  Сотрудникам staff : start Send new password Please enter your user name in the form below to request a new password for your account in this wiki . A confirmation link will be sent to your registered email address . Set new password for Username Set new password Page Tools Show pageOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "Сотрудникам  Сотрудникам staff : start Permission Denied Sorry , you do n't have enough rights to continue . Login You are currently not logged in ! Enter your authentication credentials below to log in . You need to have cookies enabled to log in . Log In Username Password Remember me Log In Forgotten your password ? Get a new one : Set new password Page Tools Show pageOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "Сотрудникам  Сотрудникам staff : start Permission Denied Sorry , you do n't have enough rights to continue . Login You are currently not logged in ! Enter your authentication credentials below to log in . You need to have cookies enabled to log in . Log In Username Password Remember me Log In Forgotten your password ? Get a new one : Set new password Page Tools Show pageOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "Сотрудникам  Сотрудникам staff : start Permission Denied Sorry , you do n't have enough rights to continue . Login You are currently not logged in ! Enter your authentication credentials below to log in . You need to have cookies enabled to log in . Log In Username Password Remember me Log In Forgotten your password ? Get a new one : Set new password Page Tools Show pageOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International"
            ]
        },
        {
            "name": "Функциональное программирование",
            "url": "/doku.php/courses:functional_programming:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Функциональное программирование  Курсы » Функциональное программирование courses : functional_programming : start Table of Contents Функциональное программирование Материалы Задания Экзамен Функциональное программирование Материалы Программа Учебные материалы Задания Домашние задания Экзамен 2018 courses/functional_programming/start.txt · ",
                "Функциональное программирование - ",
                "",
                "Программа  Курсы » Функциональное программирование » Программа courses : functional_programming : lectures Table of Contents Программа Введение Лямбда-исчиcление Рекурсия и редукция Просто ( е ) типизированное лямбда-исчисление Введение в язык Haskell Основы программирования в Haskell Классы типов Свертки и моноиды Функторы Монады Стандартные монады Использование аппликативных функторов Трансформеры монад Вывод типов * Программирование с зависимыми типами * Чисто функциональные структуры данных * ФП в mainstream-языках * GHC Core * Программа Введение Особенности функционального программирования ( ФП ) Отличия ФП от императивного программирования Сильные и слабые стороны ФП Лямбда-исчиcление Формализации понятия алгоритма Чистое λ-исчисление Свободные и связанные переменные Комбинаторы Каррирование Подстановка Правила преобразования Эквивалентность λ-термов Рекурсия и редукция Теорема о неподвижной точке , Y-комбинатор Совместимые ( с λ-исчислением ) отношения , отношения редукции , отношения равенства ( конгруэнтности ) Одношаговая β-редукция , β-редукция , β-равенство Редукционные графы Нормальная форма ( nf ) Ненормализуемые , слабо нормализуемые и сильно нормализуемые термы Теорема Чёрча-Россера , теорема об общем редукте , теорема о единственности nf Стратегии редукции Головная нормальная форма , слабая головная нормальная форма Теорема о нормализации Просто ( е ) типизированное лямбда-исчисление Понятие типа ( предназначение типов ) Просто ( е ) типизированное λ-исчисление ( STLC ) Типизация по Чёрчу и Карри Множество типов , предтермы , утверждение о типизации , контекст Правила типизации Леммы генерации , о контекстах Теорема о редукции субъекта Теорема о единственности типа для типизации по Чёрчу Теорема о нормализации Введение в язык Haskell Базовые типы Связывание Определение функций Охранные выражения Конструкции where и let…in Операторы и сечения Модули Реализации языка Haskell и инфраструктура ( cabal , stack , hackage , hoogle ) Основы программирования в Haskell Ленивые и строгие вычисления Алгебраические типы данных : декартово произведение и размеченное объединение Сопоставление с образцом Работа со списками Генераторы списков Функции высших порядков над списками Классы типов Виды полиморфизма Классы типов Сравнение с другими языками программирования Обзор стандартных классов типов ( Eq , Ord , Enum , Bounded , Show , Read , Num , Fractional , Integral ) Особенности внутренней реализации классов типов ( реализация с помощью словарей ) Свертки и моноиды Левая и правая свертки ( foldr , foldl , foldl ' , foldr1 , foldl1 ) Родственные сверткам функции ( scanl , scanr , unfold ) Semigroup a , закон для полугруппы Semigroup a ⇒ Monoid a , законы для моноида Стандартные моноиды ( [ a ] , Any , All , Product a , Sum a , Endo a , Dual a , Last a , First a ) Foldable Функторы Функторы Законы для функторов Аппликативные функторы Законы для аппликативных функторов Функция как функтор , аппликативный функтор Список как аппликативный функтор , ZipList Монады Стрелка Клейсли Понятие монады Класс типов Monad Монады Identity , Maybe Список как монада Отличие монад от аппликативных функторов Стандартные монады Reader Writer State IO Функции ввода-вывода Остальное не успели Использование аппликативных функторов Аппликативные парсеры Класс типов Alternative Законы класса Alternative Класс типов Traversable Законы класса Traversable Трансформеры монад Класс типов MonadPlus Законы класса MonadPlus Монада Except Мультипараметрические классы типов Трансформеры монад Законы для класса типов MonadTrans Стандартные трансформеры библиотеки mtl Вывод типов * Программирование с зависимыми типами * Чисто функциональные структуры данных * ФП в mainstream-языках * GHC Core * courses/functional_programming/lectures.txt · ",
                "Учебные материалы  Курсы » Функциональное программирование » Учебные материалы courses : functional_programming : materials Table of Contents Учебные материалы λ-исчисление и типы Haskell Scala , Java , Python ... LaTeX Для повышения уровня математической культуры и общего развития Учебные материалы λ-исчисление и типы Литература Ламбда-исчисление , его синтаксис и семантика , Барендрегт Х. , Изд : Мир , ( 1985 ) Introduction to Lambda Calculus . Henk Barendregt , Erik Barendsen Введение в функциональное программирование . Харрисон Дж . Lambda-Calculus and Combinators An Introduction ( 2nd Edition ) . J. Roger Hindley Jonathan P. Seldin ( 2008 ) Типы в языках программирования , Пирс Б. , Изд : Лямбда пресс , Добросвет ( 2012 ) Видео CSCenter . Функциональное программирование . Москвин Д.Н . ЛШСМ-2017.Соответствие Карри–Ховарда : от математической логики к программированию . Брагилевский В . ( Занятие 2 ) МИАН . Спецкурс « Лямбда-исчисление или вычислительная теория доказательств » . Кузнецов С.Л . Haskell Литература Изучай Haskell во имя добра ! , Липовача М. , Изд : ДМК Пресс ( 2012 ) О Haskell по-человечески ( небольшое введение в язык для практиков ) Обзор свежих англоязычных книг по Haskell . Брагилевский В. Перевод терминов , имён и названий Typeclassopedia ( немного устарела ) Презентация о классах типов в Haskell и внутренней реализации через словари A tutorial on the universality and expressiveness of fold ( Hutton ) Monoids Tour ( немного устарела , но объяснение доступное с примерами ) Theory and Practice of Fusion ( Ralf Hinze , Thomas Harper , and Daniel W. H. James ) Моноиды в Haskell и их использование ( немного устарела , но объяснение доступное с примерами ) Monoid ( Haskell wiki ) Haskell functions as functors , applicatives and monads Функторы , аппликативные функторы и монады в картинках Видео CSCenter . Функциональное программирование . Москвин Д.Н . Stepik . Функциональное программирование на языке Haskell . Москвин Д.Н . Stepik . Функциональное программирование на языке Haskell ( часть 2 ) . Москвин Д.Н . Код с пар Типы данных , ленивость , списки Классы типов Свертки , моноиды Функторы Scala , Java , Python ... Coursera . Functional Programming Principles in Scala . Odersky M. Stepik . Java . Functional programming Stepik . Python . Functional Programming LaTeX Может пригодиться при оформлении решений ДЗ по λ-исчислению Overleaf . Онлайн-редактор LaTeX в примерах , Воронцов К.В . Набор и вёрстка в системе LaTeX , Львовский С.М . Wiki-книга о LaTeX c кучей примеров ( англ . ) Видео курса по LaTeX от ВШЭ . A very minimal introduction to TikZ Для повышения уровня математической культуры и общего развития Темы , затронутые на лекциях , но не относящиеся напрямую к предмету курса ( или относящие , но этого пока нет в курсе ) Аксиоматический метод . Беклемишев Л.Д . Компьютерные доказательства . Беклемишев Л.Д . Stepik . Введение в теоретическую информатику . Шень А.Х . CSClub . Ликбез : коды , исправляющие ошибки . Шень А.Х . CSClub . Десятая проблема Гильберта . Решение и применения в информатике . Матиясевич Ю.В . Математика для всех . Алексей Савватеев . Лекция 4.2 . Теорема Брауэра Неподвижные точки ( Vsauce ) courses/functional_programming/materials.txt · ",
                "Домашние задания  Курсы » Функциональное программирование » Домашние задания courses : functional_programming : practice Table of Contents Домашние задания λ-исчисление и типы Haskell Домашние задания 2018 Результаты Решения первых трех заданий ( λ-исчисление и типы ) присылаются на почту . Формат : предпочтительно - pdf ( лучше верстать в LaTeX ) , но можно и markdown или даже plain text в кодировке utf8 . В теме письма обязательно укажите [ leti_fp ] . Также в письме не забудьте указать группу и ФИО . λ-исчисление и типы Подстановка , комбинаторы , логические значения , нумералы Чёрча Дедлайн 20.09.2018 23:59 ( MSK ) Задание Исходник ( LaTeX ) Нумералы Чёрча , списки , комбинаторы неподвижной точки , редукционные графы , нормальные формы ( NF , HNF , WHNF ) Дедлайн 04.10.2018 23:59 ( MSK ) Задание Исходник ( LaTeX ) Простое типизированное λ-исчисление ( λ→ ) Дедлайн 18.10.2018 23:59 ( MSK ) Задание Исходник ( LaTeX ) Haskell Введение в язык Дедлайн 01.11.2018 23:59 ( MSK ) Задание Списки , ADT , typeclasses , fold * , Semigroup , Monoid , Foldable Дедлайн 30.11.2018 23:59 ( MSK ) Задание courses/functional_programming/practice.txt · ",
                "✎ Функциональное программирование  Курсы » Функциональное программирование courses : functional_programming : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Функциональное программирование ====== ===== Материалы ===== * [ [ lectures ] ] * [ [ materials ] ] ===== Задания ===== * [ [ practice ] ] ===== Экзамен ===== * [ [ https : //docs.google.com/spreadsheets/d/1tzI2GUrNkh-f9ZaVUunejV298EwW3S4txxzuoLZoaTQ/edit # gid=0|2018 ] ] courses/functional_programming/start.txt · ",
                "Функциональное программирование - Old revisions  Курсы » Функциональное программирование courses : functional_programming : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Функциональное программирование ( external edit ) ( current ) 2018/08/30 18:03 Функциональное программирование vnikolenko +152 B 2018/08/30 08:22 Функциональное программирование – created kalishenko +76 B Show differences between selected revisions courses/functional_programming/start.txt · ",
                "Функциональное программирование - "
            ]
        },
        {
            "name": "Технологии хранения данных",
            "url": "/doku.php/courses:storage:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Технологии хранения данных  Курсы » Технологии хранения данных courses : storage : start Технологии хранения данных Варианты Осеннего Семестра 2019 Выбор варианта Ключевая книга : “ От хранения данных к управлению информацией . 2-е издание ” ISBN 978-5-496-01859-3 Архив Трек 1 . BigData Курс вводит в тематику BigData и в основы разработки высоконагруженных приложений . Основными темами являются : Высоконагруженные приложения Java в BigData HDFS NoSQL MapReduce Hive Основы Scala Spark Полная программа курса Преподаватель : Алексей Зиновьев ( EPAM ) Трек 2 . Industrial storages Курс рассказывает о методах хранения данных в инфраструктурах современного предприятия . Слушатели получат информацию о видах СХД и особенностях их применения в классических и облачных средах предприятий , узнают о архитектуре решений и базовых алгоритмах , лежащих в основе систем хранения и получат представление о сетях SAN . Виды и назначение СХД Архитектуры и основные элементы Медоты защиты данных Кэширование данных : алгоритмы и подходы СХД в облачных инфраструктурах , гиперковергентные решения Протоколы доступа и основы SAN Преподаватель : Алексей Маров ( RAIDIX ) Трек 3 . Project Проектная работа по исследованию Open V Storage ( https : //github.com/openvstorage ) . В рамках курса проводится исследование различных испектов функционирования платформы . При необходимости дорабатываются отдельные компоненты . Выполняется нагрузочное и другие виды тестирования . Возможна разработка патчей в платформу и написание статей . Преподаватель : Кирилл Кринкин ( ЛЭТИ ) courses/storage/start.txt · ",
                "Технологии хранения данных - ",
                "",
                "✎ Технологии хранения данных  Курсы » Технологии хранения данных courses : storage : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Технологии хранения данных ====== * [ [ https : //docs.google.com/presentation/d/1XRb0qINuftoO0PhfnwB_K4NX2iizv9bXBajXmtVlE9s/edit ? usp=sharing|Варианты Осеннего Семестра 2019 ] ] * [ [ https : //forms.gle/1JaX9qP3KcpuC7b4A|Выбор варианта ] ] * Ключевая книга : `` От хранения данных к управлению информацией . 2-е издание '' ISBN 978-5-496-01859-3 === Архив === == Трек 1 . BigData == Курс вводит в тематику BigData и в основы разработки высоконагруженных приложений . Основными темами являются : * Высоконагруженные приложения * Java в BigData * HDFS * NoSQL * MapReduce * Hive * Основы Scala * Spark { { : start : big_data_univer_program.pdf | Полная программа курса } } Преподаватель : Алексей Зиновьев ( EPAM ) == Трек 2 . Industrial storages == Курс рассказывает о методах хранения данных в инфраструктурах современного предприятия . Слушатели получат информацию о видах СХД и особенностях их применения в классических и облачных средах предприятий , узнают о архитектуре решений и базовых алгоритмах , лежащих в основе систем хранения и получат представление о сетях SAN . * Виды и назначение СХД * Архитектуры и основные элементы * Медоты защиты данных * Кэширование данных : алгоритмы и подходы * СХД в облачных инфраструктурах , гиперковергентные решения * Протоколы доступа и основы SAN Преподаватель : Алексей Маров ( RAIDIX ) == Трек 3 . Project == Проектная работа по исследованию Open V Storage ( https : //github.com/openvstorage ) . В рамках курса проводится исследование различных испектов функционирования платформы . При необходимости дорабатываются отдельные компоненты . Выполняется нагрузочное и другие виды тестирования . Возможна разработка патчей в платформу и написание статей . Преподаватель : Кирилл Кринкин ( ЛЭТИ ) courses/storage/start.txt · ",
                "Технологии хранения данных - Old revisions  Курсы » Технологии хранения данных courses : storage : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Технологии хранения данных ( external edit ) ( current ) 2019/11/06 10:34 Технологии хранения данных kkv +21 B 2019/11/06 10:33 Технологии хранения данных kkv +1 B 2019/11/06 10:33 Технологии хранения данных kkv +71 B 2019/11/06 10:27 Технологии хранения данных kkv +166 B 2018/12/23 15:07 Технологии хранения данных kkv -2 B 2018/11/25 21:53 Технологии хранения данных kalishenko -13 B 2018/11/25 21:53 Технологии хранения данных – ↷ Page moved from start : storage : start to courses : storage : start kalishenko +2.3 KB 2018/11/25 21:52 Технологии хранения данных – ↷ Page moved and renamed from start : storage to start : storage : start kalishenko +2.3 KB 2016/09/20 17:05 Технологии хранения данных kkv +7 B 2016/09/20 17:05 Технологии хранения данных kkv +803 B 2016/09/20 08:24 Технологии хранения данных kkv +434 B 2016/09/19 08:46 Технологии хранения данных – created kkv +1.1 KB Show differences between selected revisions courses/storage/start.txt · "
            ]
        }
    ],
    "1 курс": [
        {
            "name": "Программирование",
            "url": "/doku.php/courses:programming:start",
            "date": "\"2024/03/01 20:03\"",
            "data": []
        },
        {
            "name": "Информатика",
            "url": "/doku.php/courses:informatics:start",
            "date": "\"2024/02/15 20:43\"",
            "data": []
        }
    ],
    "2 курс": [
        {
            "name": "Объектно-ориентированное программирование",
            "url": "/doku.php/courses:object_oriented_programming:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Объектно-ориентированное программирование  Курсы » Объектно-ориентированное программирование courses : object_oriented_programming : start Table of Contents Объектно-ориентированное программирование Материалы Задания Студенты Экзамен Объектно-ориентированное программирование Репозиторий : github , обязательно перед коммитом прочитать правила Материалы Программа Материалы лекций Учебные материалы Задания Практика Студенты 5382 5383 Экзамен Список вопросов Расписание courses/object_oriented_programming/start.txt · ",
                "Объектно-ориентированное программирование - ",
                "",
                "Правила пользования репозиторием  Курсы » Объектно-ориентированное программирование » Правила пользования репозиторием courses : object_oriented_programming : repository_rules Table of Contents Правила пользования репозиторием Иерархия директорий Правила пользования Правила пользования репозиторием Иерархия директорий 5382 - номер группы korolev - директория студента 1 - материалы по первой л/р … common - общие части работ , если такие есть ( разделяемый код , тесты… ) playground - любые исходные коды Правила пользования Директории уровнем студента и ниже заводят сами студенты Имя директории студента - транслит фамилии в нижнем регистре При коммите обязателен комментарий . Русский язык в комментариях допускается только в кодировке UTF-8 Число коммитов не ограничено - много коммитов не плохо , наоборот - это показывает работу над кодом и позволяет откатывать изменения playground - это ваша площадка для экспериментов над репозиторием и не только , при оценке л/р её содержимое учитываться не будет Не нужно добавлять в репозиторий исполняемые файлы , библиотеки и всё то , что получается в процессе сборки проекта ! Приветствуется поддерживать модульность и минимальное дублирование кода , для чего рекомендуется общие части ( заголовки , тесты… ) выносить в common courses/object_oriented_programming/repository_rules.txt · ",
                "Программа  Курсы » Объектно-ориентированное программирование » Программа courses : object_oriented_programming : list Table of Contents Программа 1 . Введение 2 . Структуры и классы 3 . Создание и разрушение объектов 4 . Исключения 5 . Связность объектов 6 . Полиморфизм 7 . Виды наследования 8 . Умные указатели 9 . Перегрузка операторов 10 . Шаблоны функций и классов - 1 11 . Шаблоны функций и классов - 2 12 . Шаблоны функций и классов - 3 13 . Шаблоны проектирования Discussion Программа 1 . Введение Объектно-ориентрованный подход Содержание курса История ОО языков 2 . Структуры и классы Инкапсуляция Поля и методы Права доступа Определение класса в h , .hpp и в .cpp 3 . Создание и разрушение объектов Конструкторы ( с move версиями ) Деструкторы malloc/free и new/delete RAII 4 . Исключения Стандартные типы исключений Стратегии обработки исключений Исключения в констуркторе / деструкторе 5 . Связность объектов Наследование Агрегирование Дружественность Диаграмма классов 6 . Полиморфизм Переопределение и перегрузка функций Mock-объекты при использовании интерфейсов Динамический полиморфизм RTTI 7 . Виды наследования Одиночное Множественное Виртуальное 8 . Умные указатели scoped_ptr shared_ptr weak_ptr intrusive_ptr 9 . Перегрузка операторов Приоритет операций Какие операторы можно перегружать Перегрузка & & , || , ‘ , ’ Перегрузка [ ] и ( ) 10 . Шаблоны функций и классов - 1 Вывод шаблонных параметров из аргументов функций Ленивая компиляция шаблонов Использование зависимых имён Наследование шаблонных классов 11 . Шаблоны функций и классов - 2 Полная специализация шаблонов Классы свойств ( Traits ) Частичная специализация шаблонов Статический полиморфизм VS динамический полиморфизм на примере паттерна стратегия 12 . Шаблоны функций и классов - 3 Метапрограммирование с использованием шаблонов SFINAE С++11 ( using вместо typedef в шаблонах , variadic templates ) 13 . Шаблоны проектирования Область применения шаблонов Порождающие паттерны Структурные паттерны Поведенческие паттерны You could leave a comment if you were logged in . courses/object_oriented_programming/list.txt · ",
                "Материалы лекций  Курсы » Объектно-ориентированное программирование » Материалы лекций courses : object_oriented_programming : lectures Материалы лекций Введение Структуры и классы Создание и разрушение объектов Исключения Связность объектов Виды наследования Умные указатели Перегрузка операторов Шаблоны функций и классов Шаблоны проектирования courses/object_oriented_programming/lectures.txt · ",
                "Учебные материалы  Курсы » Объектно-ориентированное программирование » Учебные материалы courses : object_oriented_programming : materials Table of Contents Учебные материалы Книги Ссылки Шаблоны функций и классов Учебные материалы Книги “ Шаблоны C++ . Справочник разработчика. ” Дэвид Вандервуд , Николай М. Джосаттис “ Effective Modern C++ ” . Scott Meyers Ссылки Шаблоны функций и классов Архив с исходными кодами примеров с лекции courses/object_oriented_programming/materials.txt · ",
                "Практика  Курсы » Объектно-ориентированное программирование » Практика courses : object_oriented_programming : practice Table of Contents Практика Создание и разрушение объектов Наследование Контейнер Умный указатель Полиморфная логика Немодифициующие алгоритмы Mодифициующие алгоритмы Практика Перед очной защитой , все задания выкладываются на Stepik и , где это возможно , организуются автоматические проверки . До защиты работы , все проверки должны быть пройдены Создание и разрушение объектов Stepik Наследование Индивидуальные задания , проверяемые на Stepik c помощью peer-review . Варианты заданий : Окружность , пятиугольник , правильный пятиугольник Прямоугольник , квадрат , эллипс Равнобедренный треугольник , квадрат , прямоугольный треугольник Трапеция , эллипс , равнобедренная трапеция Эллипс , сектор эллипса , параллелограмм Треугольник , ромб , параллелограмм Дуга , окружность , эллипс Квадрат , ромб , трапеция Пятиугольник , пентаграмма , прямоугольник Пятиугольник , эллипс , отрезок Прямоугольник , окружность , трапеция Контейнер Разработать шаблонный контейнер с заданным интерфейсом Умный указатель Разработать умный указатель с заданным интерфейсом Полиморфная логика Объединить предыдущие работы в приложении , использующем логику полиморфного хранения объектов . Необходимо сгененрировать контейнер из 1000 фигур , которые хранятся как shared_ptr < Shape > , и применить к ним 2 стандартных алгоритма по вариантам . В качестве предиката использовать предикат из дополнительного задания 2-й лабораторной . UPDATE ( 15.05.17 ) . Если вы считаете , что вашу функцию из 2-й лабораторной невозможно использовать в качестве критерия для индивидуального задания ( например , если она возвращает что-то отличное от булевых или числовых значений ) , то необходимо самостоятельно придумать предикат , использующий вируальные функции в дереве классов . Пример : а ) сортировка фигур в порядке возрастания их площади , б ) отбор фигур , пересекающихся с заданной эталонной фигурой , в ) замена фигур , периметр которых меньше определённого порога , на окружность единичного радиуса . Описание вашего вашего задания приложить в виде файла README . Корректность алгоритмов доказать с помощью юнит тестов и/или ручного тестирования . В случае юнит-тестов тестирование достаточно провести для контейнера небольшого размера ( 5-10 ) заданных фигур . Варианты индивидуальных заданий : Немодифициующие алгоритмы Поиск первого элемента удовлетворяющего определенному критерию . Поиск первых n последовательных элементов с определенными свойствами . Поиск первого из нескольких возможных элементов по заданному критерию . Поиск двух смежных элементов , равных между собой по определенному критерию . Проверка двух неупорядоченных диапазонов на равенство по определенному критерию . Поиск первых отличающихся друг от друга элементов двух последовательностей по определенному критерию . Проверка разделен ли диапазон на две группы по заданному критерию . Проверка что все элементы диапазона удовлетворяют определенному критерию . Проверка что хотя бы один элемент диапазона соответствует заданному критерию . Проверка что ни один элемент диапазона не соответствует заданному критерию . Проверка двух упорядоченных диапазонов на равенство по определенному критерию . Mодифициующие алгоритмы Заменить элементы , соответствующие критерию другим значением . Скопировать элементы , удовлетворяющие критерию . Разделить диапазон на 2 части в соответствии с критерием . Создать упорядоченное объединение двух диапазонов . Удалить элементы , удовлетворяющие заданному критерию . Создать упорядоченное пересечение двух диапазонов . Создать упорядоченную разность двух диапазонов . Заменить элементы , соответствующие критерию , копируя весь диапазон . Скопировать элементы удалив дубликаты в соответствии с критерием . Скопировать элементы , за исключением тех , кто удовлетворяет критериюю Упорядочить элементы , пока первые n элементов не будут следовать в требуемом порядке . Отсортировать элементы диапазона так , чтобы правильный элемент находился на n-й позиции ( все стоящие перед ним элементы не превосходят его , а все стоящие после - превосходят либо равны ) . courses/object_oriented_programming/practice.txt · ",
                "5382  Курсы » Объектно-ориентированное программирование » 5382 courses : object_oriented_programming:5382 5382 № ​Фамилия , ​ Имя , Отчество ​ 1 ​ 2 3 ​ 4 5 1 Бачинский Максим Олегович + + + + 5 2 Борисовский Даниил Юрьевич + + + + 5 3 Васильева Алёна Евгеньевна + + + + 4- 4 Васильева Людмила Юрьевна + + + + 5 5 Владимирова Ольга Владимировна + + + + 5 6 Дворецкий Виктор Николаевич + + + + 3 7 Забалуев Николай Евгеньевич + 8 Засимович Сергей Дмитриевич + + + + 3 9 Коппель Татьяна Сергеевна+ + + + 5- 10 Лисс Наталья Игоревна + + + + 5 11 Лончина Александра Евгеньевна + + + + 4 12 Мелихова Полина Артуровна + + + + 5 13 Никитин Владислав Андреевич + + + + 4 14 Павлов Данила Сергеевич + + + + 5 15 Панченко Роман Валерьевич + + + + 3- 16 Петрова Таисия Александровна + + + + 4- 17 Разбитнева Анна Михайловна + + + + 3 18 Смоляков Иван Юрьевич + + + + 5 19 Софронов Максим Михайлович + + + + 5 20 Черненко Александра++ + + 4 21 Шахов Александр Дмитриевич + + + + 4 courses/object_oriented_programming/5382.txt · ",
                "5383  Курсы » Объектно-ориентированное программирование » 5383 courses : object_oriented_programming:5383 5383 № ​Фамилия , ​ Имя , Отчество ​ 1 ​ 2 3 ​ 4 5 1 Бибакова Татьяна + + + + 5 2 Васильев Марк + + + + 5 3 Горбатюк Дарья + + + + 4 4 Десятов Антон + + + + 3 5 Допира Валерия + + + + 5 6 Еськов Артемий + + + + 5 7 Лянгузов Александр + + + + 5 8 Максимова Евгения + + + + 5 9 Нуреев Ринат + + + + 3 10 Ришко Сергей + + + + 3 11 Салоев Саади + + + + 3 12 Утеева Асем + + + + 5 13 Филиппова Виктория + + + + 4 14 Ярошенко Максим + + + + 5 courses/object_oriented_programming/5383.txt · ",
                "Список вопросов  Курсы » Объектно-ориентированное программирование » Список вопросов courses : object_oriented_programming : questions Список вопросов Что такое парадигма программирования ? Что такое идиома программирования ? Какую парадигму реализует язык С ? Какую парадигму реализует язык С++ ? Язык С++ считается низкоуровневым или высокоуровневым ? Что такое ООП ? Что подразумевает абстракция с точки зрения ООП ? Что такое инкапсуляция ? Что такое наследование ? Что такое полиморфизм ? Какие существуют виды полиморфизма ? В чем отличие компилируемых и интерпретируемых языков программирования ? Что такое статическая и динамическая типизация ? Что такое слабая и сильная типизация ? Для чего и на какие файлы производится разбиение программы на С++ ? Что такое union в C++ , когда оно может быть применимо ? Опишите процесс преобразования исходного кода в исполняемый файл . В чем отличие ссылки от указателя ? Что такое указатель на функцию и как он может быть использован ? Какие способы группировки данных в С++ вам известны ? Для чего предназначены структуры ? Где может быть определена структура или класс ? Допустимо ли использование указателей/ссылок/массивов структур ? Какие существуют способы передачи параметров в функцию ? Для чего предназначены классы , в чем их отличие от структур ? Что такое инвариант класса ? В чем отличие функций от методов ? В каких случаях используются значения по умолчанию в функциях ? Что такое публичный интерфейс ? Какие существуют модификаторы доступа , для чего они используются ? Что такое геттеры и сеттеры ? Что такое inline-функции ? Где применяется неявный указатель this ? Для чего используется ключевое слово const ? Что такое константные ссылки/указатели , указатели/ссылки на константу ? В чем отличие синтаксической и логической константности методов ? Для чего используется ключевое слово mutable ? Что такое конструктор ? В каких случаях используется перегрузка конструкторов ? Какую цель может преследовать создание приватного конструктора ? Каким образом и в какой последовательности происходит инициализация полей объекта ? Для чего используется ключевое слово explicit ? В чем заключается предназначение конструктора по умолчанию ? Что такое деструктор , для чего он используется ? Каков порядок вызова деструкторов при разрушении объекта ? В какой момент вызывается деструктор объекта ? Каково время жизни объекта ? Зачем нужен виртуальный деструктор ? Как осуществляется работа с динамической памятью в С/С++ ? В чем различие delete и delete [ ] ? Что подразумевается под идиомой RAII ? Перечислите основные подходы к обработке ошибок . Для чего предназначен механизм обработки исключительных ситуаций ? Что такое исключение ? Какие типы данных допустимы для использования в качестве объектов exception ? Как происходит возбуждение исключения ? Кто отвечает за обработку возникших исключительных ситуаций ? Что такое раскрутка стека ? Где и для чего используется спецификатор throw ? Где и для чего используется спецификатор noexcept ? К чему приводит вызов throw без аргументов ? Что такое exception-safe операция ? Что такое делегирующие конструкторы ? Что вы можете сказать о генерации исключений в конструкторе/деструкторе ? Что такое ассоциация ? Что такое композиция и агрегация , чем они отличаются ? Время жизни агрегируемого объекта меньше времени жизни агрегата ? Какие классы называются дружественными , для каких целей используется это отношение ? В каком случае можно говорить об отношение « реализация » ? Как представлены объекты в памяти при использовании механизма наследования ? Какие существуют типы наследования , чем они различаются ? Наследуются ли конструкторы и деструкторы ? Наследуются ли приватные поля базового класса ? Что такое виртуальная функция ? Как осуществить вызов базовой реализации функции при её переопределении в дочернем классе ? Как связаны виртуальные функции и полиморфизм ? Что такое переопределение функций ? Работает ли переопределение для приватных функций ? Что такое таблица виртуальных функций ? Как себя ведут виртуальные функции в конструкторе и деструкторе ? В каких случаях допустимо приведение указателей/ссылок на дочерний класс к базовому ? Что такое чистая виртуальная функция ? Какой класс называется абстрактным ? Как в С++ реализуются интерфейсы ? Что такое перегрузка функций ? Как ведет себя перегрузка при наследовании ? Опишите процесс выбора функции среди перегруженных . Чем отличаются механизмы раннего и позднего связывания ? Что такое множественное наследование ? Что такое ромбовидное наследование ? Какой существует механизм разрешения проблемы ромбовидного наследования в С++ ? Как реализовано приведение типов в Си ? Что такое статическое приведение типов ? Что такое динамическое приведение типов ? Что такое константное приведение типов ? Что такое интерпретирующее преобразование типов ? Как работает преобразование в Си-стиле на языке С++ ? Что такое умные указатели ? Опишите принцип работы boost : :scoped_ptr . Опишите принцип работы std : :auto_ptr . Опишите принцип работы std : :shared_ptr . Опишите принцип работы std : :weak_ptr . В чем особенности работы умных указателей с массивами ? Какие группы операторов в С++ вам известны ? Что такое перегрузка операторов , для чего она используется ? Для каких типов допустима перегрузка операторов ? Где может быть объявлена перегрузка оператора ? Какие особенности у перегрузки операторов инкремента и декремента ? Как ведут себя операторы с особым порядком вычисления при перегрузке ? Наследует ли производный класс перегруженные операторы ? Как защитить объект от копирования ? Для чего предназначен механизм RTTI , как его использовать ? Что такое шаблоны классов ? Что такое шаблоны функций ? Как осуществляется вывод аргументов шаблона ? Что такое специализация шаблонов ? Что такое шаблон проектирования ? + Вопросы по каждому из 23 шаблонов проектирования : название , область применения , решаемая задача , uml-диаграмма ( можно не точную ) , достоинства и недостатки . You could leave a comment if you were logged in . courses/object_oriented_programming/questions.txt · ",
                "Расписание  Курсы » Объектно-ориентированное программирование » Расписание courses : object_oriented_programming : consultation Расписание Консультация будет проведена 09.06.2017 в 17:00 ( аудитория 3324 ) . Экзамен Для групп 5381 , 5382 , 5383 : 13.06.2017 в аудитории 3425 ( начало в 09:00 ) Для групп 5303 , 5304 : 14.06.2017 в аудитории 3425 ( начало в 09:00 ) Таблица с расписанием You could leave a comment if you were logged in . courses/object_oriented_programming/consultation.txt · ",
                "✎ Объектно-ориентированное программирование  Курсы » Объектно-ориентированное программирование courses : object_oriented_programming : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Объектно-ориентированное программирование ====== > Репозиторий : [ [ https : //github.com/moevm/oop|github ] ] , обязательно перед коммитом прочитать // * * [ [ repository_rules|правила ] ] * * // ===== Материалы ===== * [ [ list ] ] * [ [ lectures ] ] * [ [ materials ] ] ===== Задания ===== * [ [ practice ] ] ===== Студенты ===== * [ [ 5382 ] ] * [ [ 5383 ] ] ===== Экзамен ===== * [ [ questions ] ] * [ [ consultation ] ] courses/object_oriented_programming/start.txt · ",
                "Объектно-ориентированное программирование - Old revisions  Курсы » Объектно-ориентированное программирование courses : object_oriented_programming : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Объектно-ориентированное программирование ( external edit ) ( current ) 2017/06/09 20:45 Объектно-ориентированное программирование – [ Экзамен ] nplohoy +6 B 2017/06/09 09:05 Объектно-ориентированное программирование – [ Сроки проведения ] nplohoy -17 B 2017/06/04 12:30 Объектно-ориентированное программирование – [ Экзамен ] nplohoy +17 B 2017/06/04 12:20 Объектно-ориентированное программирование nplohoy +67 B 2017/05/29 13:25 Объектно-ориентированное программирование – [ Материалы ] nplohoy +13 B 2017/03/26 20:52 Объектно-ориентированное программирование kalishenko +182 B 2017/03/19 20:13 Объектно-ориентированное программирование – [ Студенты ] inomad +13 B 2017/03/19 19:48 Объектно-ориентированное программирование inomad -13 B 2017/03/19 19:29 Объектно-ориентированное программирование inomad +13 B 2017/03/19 12:32 Объектно-ориентированное программирование korolev +43 B 2017/03/02 07:10 Объектно-ориентированное программирование kalishenko +17 B 2017/02/15 23:14 Объектно-ориентированное программирование kalishenko +60 B 2017/02/15 23:12 Объектно-ориентированное программирование kalishenko +34 B 2017/02/15 23:11 Объектно-ориентированное программирование – ↷ Page moved and renamed from courses : object_oriented_programming to courses : object_oriented_programming : start kalishenko +95 B 2017/02/15 22:55 Объектно-ориентированное программирование – created kalishenko +95 B Show differences between selected revisions courses/object_oriented_programming/start.txt · ",
                "Объектно-ориентированное программирование - "
            ]
        },
        {
            "name": "Алгоритмы и структуры данных",
            "url": "/doku.php/courses:algorithms_structures:start",
            "date": "\"2023/11/07 09:41\"",
            "data": [
                "Алгоритмы и структуры данных  Курсы » Алгоритмы и структуры данных courses : algorithms_structures : start Table of Contents Алгоритмы и структуры данных Правила и описание рейтинговой системы Лекции MOOC Оформление лабораторных и курсовых работ Темы , рассматриваемые на защите Коммуникация Полезные ссылки и литература Алгоритмы и структуры данных Форма для сбора информации , необходимой для дисциплины ( откроется позднее ) : АиСД 2h2023 Правила и описание рейтинговой системы Правила и описание рейтинговой системы на осень 2023 Лекции Вводная лекция 2023 Ссылка на гугл-диск ( лекции появляются по мере прохождения материала ) Видео-записи лекций MOOC Курс `` Алгоритмы и Структуры Данных '' Bug Report форма Оформление лабораторных и курсовых работ Правила работы с репозиторием Оформление отчета по лабораторной работе Допуск к защите лабораторных работ Темы , рассматриваемые на защите Первая лабораторная работа Вторая лабораторная работа Третья лабораторная работа Четвертая лабораторная работа Коммуникация Правила оформления электронного письма Полезные ссылки и литература Алгоритмы . Вводный курс - Т. Кормен Алгоритмы . Построение и анализ - Т.Кормен , Ч.Лейзерсон , Р.Ривест , К.Штайн Stepik-курс `` Алгоритмы : теория и практика . Структуры данных '' Coursera : Специализация `` Структуры и алгоритмы данных '' Репозиторий с примерами courses/algorithms_structures/start.txt · ",
                "Алгоритмы и структуры данных - ",
                "",
                "Правила работы с Github  Курсы » Алгоритмы и структуры данных » Правила работы с Github courses : algorithms_structures : github_rules Table of Contents Правила работы с Github Основные правила Важные ограничения Правила работы с Github Основные правила Каждая работа должна быть размещена в отдельной ветке , созданной из ветки main Именование ветки : < Фамилия > _ < Имя > _ < Вид и номер работы > . Например : Ivanov_Ivan_lb1 Вид работы может быть lb и cw для лабораторной и курсовой работы соответственно . Другие названия работа не засчитываются Каждая работа должна находиться в своей папке с именем , соответстующем названию ветки Файлы с исходным кодом должны находиться в папке src внутри вашей папки с лабораторной Проект должен быть организован согласно требованиям Отчёт должен находиться в корне папки работы Никакие другие файлы добавлять нельзя Название пуллреквестра должно совпадать с названием ветки/папки Пуллреквест и коммиты должны быть сделаны пользователем с соответствующим ФИО и гитхаб-аккаунтом Необходимо отслеживать комментарии к пуллреквестам и оперативно их исправлять Оценки за работы , пуллреквесты которых не вмержны преподавателем , не засчитываются Важные ограничения Запрещено делать любые коммиты в ветку main Запрещено самостоятельно мержить пуллреквесты Любое из перечисленных нарушений влечет за собой автоматические 0 баллов за защиту работы , соответствующей пуллреквесту , или обнуление ближайшей защиты л/р без возможности перезащиты ( даже в случае , если работа уже была защищена ) . courses/algorithms_structures/github_rules.txt · ",
                "Правила допуска к защите лабораторной работы  Курсы » Алгоритмы и структуры данных » Правила допуска к защите лабораторной работы courses : algorithms_structures : access Правила допуска к защите лабораторной работы Если вы хотите защитить лабораторную работу , вам следует сделать следующее : Создать в срок до указанного дедлайна корректный pull-request , содержащий : исходный код лабораторной работы проект должен быть организован согласно требованиям код должен соответствовать коду , принятому системой проверки онлайн-курса корректно оформленный отчет в формате .pdf метку Passed автоматизированной проверки pull-request-ов Добавить в pull-request тесты , проверяющие функциональность вашей работы . Тесты должны покрывать все пограничные случаи В вашей лабораторной работе должен содержаться код функций , которые ее тестируют Попытка защиты без выполнения требований по допуску влечет уменьшение максимального балла за защиту ( вплоть до 0 ) . courses/algorithms_structures/access.txt · ",
                "Первая лабораторная работа  Курсы » Алгоритмы и структуры данных » Первая лабораторная работа courses : algorithms_structures : lr1 Первая лабораторная работа Тема лабораторной работы : реализация и исследования развернутого связного списка Темы , рассматриваемые на защите : Оценка алгоритмов по времени и памяти Массив . Определение , оценка сложности вставки и удаления Линейные списки . Определение , оценка сложности вставки и удаления Стек , очередь , дек . Определения , сходства , различия Циклический список ( буфер ) , развернутый список courses/algorithms_structures/lr1.txt · ",
                "Вторая лабораторная работа  Курсы » Алгоритмы и структуры данных » Вторая лабораторная работа courses : algorithms_structures : lr2 Вторая лабораторная работа Понятие сортировки . Устойчивость . In-place Сортировка вставками . Алгоритм . Анализ алгоритма Сортировка слиянием . Алгоритм . Анализ алгоритма Быстрая сортировка . Алгоритм . Анализ алгоритма Разделяй и властвуй : описание , примеры . Timsort . Алгоритм . Анализ алгоритма . Сортировка подсчетом . Алгоритм . Анализ алгоритма courses/algorithms_structures/lr2.txt · ",
                "Третья лабораторная работа  Курсы » Алгоритмы и структуры данных » Третья лабораторная работа courses : algorithms_structures : lr3 Третья лабораторная работа Тема лабораторной работы : Очередь с приоритетом Темы , рассматриваемые на защите : Определение двоичной макс-кучи . Свойства . Алгоритм вставки элемента в кучу . Алгоритм извлечения максимума . Очередь с приоритетом . Виды реализации . Жадные алгоритмы . Сжатие с потерями/сжатие без потерь , коды нефиксированной длины , префиксный код . courses/algorithms_structures/lr3.txt · ",
                "Четвертая лабораторная работа  Курсы » Алгоритмы и структуры данных » Четвертая лабораторная работа courses : algorithms_structures : lr4 Четвертая лабораторная работа Тема лабораторной работы : Поиск образца в тексте : алгоритм Рабина-Карпа Темы , рассматриваемые на защите : Хеш-функция . Определение , свойства . Примеры . Хеш-функция для последовательностей Прямая адресация . Определение , свойства , пример . Хеш-таблица . Определение . Отличие от таблицы с прямой адресацией . Коллизии . Виды коллизий . Методы линейного исследования , квадратичного исследования , двойного хеширования . Поиск подстроки в строке : постановка задачи . Наивный алгоритм . Алгоритм Рабина-Карпа . Бинарный поиск . Бинарное дерево поиска . Операции вставки и поиска элементов . Сложность операций . АВЛ-деревья . Операции вставки и поиска элементов . Сложность операций . Красно-черные деревья . Операции вставки и поиска элементов . Сложность операций . B-деревья . Операции вставки и поиска элементов . Сложность операций . courses/algorithms_structures/lr4.txt · ",
                "Правила оформления электронного письма  Курсы » Алгоритмы и структуры данных » Правила оформления электронного письма courses : algorithms_structures : правила_оформления_письма Table of Contents Правила оформления электронного письма Возможные адресаты Тема письма Используйте кнопку `` Ответить всем '' Правила оформления электронного письма Возможные адресаты Почта дисциплины ( по любым вопросам ) : alg @ moevm.info Лектор : Иванов Дмитрий Владимирович , email - dmitry.ivanov @ moevm.info Тема письма Любое электронное письмо по теме курса должно сопровождаться темой : [ ALG_ < номер группы > ] Краткая тема письма Например , вы хотите спросить преподавателя , когда будет проведена дополнительная пара . Тогда тема письма будет примерно следующая : [ ALG_2303 ] Дата дополнительного занятия Не забывайте соблюдать правила деловой переписки : используйте приветствие и подпись . Письмо с неправильной темой может быть потеряно и остаться без ответа Используйте кнопку `` Ответить всем '' Если вы видите , что в копиях письма ( строка “ Копия : ” или “ Сс : ” ) указаны почты и других преподавателей , то обязательно используйте кнопку “ Ответить всем ” . courses/algorithms_structures/правила_оформления_письма.txt · ",
                "✎ Алгоритмы и структуры данных  Курсы » Алгоритмы и структуры данных courses : algorithms_structures : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Алгоритмы и структуры данных ====== * * Форма для сбора информации , необходимой для дисциплины ( откроется позднее ) : * * [ [ https : //forms.gle/t47A2Lh3tEF6YiKY8|АиСД 2h2023 ] ] ==== Правила и описание рейтинговой системы ==== * [ [ https : //docs.google.com/document/d/e/2PACX-1vTSMuk1CpaCxzhQERH25vGYYrtp14AG9IKoqHdqMHQsU1ok61YE9jt -- u8INpZwfZBF0yyt7ovja3R4/pub|Правила и описание рейтинговой системы на осень 2023 ] ] ==== Лекции ==== * [ [ https : //docs.google.com/presentation/d/e/2PACX-1vQzymtJdvoTSStI9pBJdgkWG3q0QUxMSIU0ma5YnHaEjXrO9jnjmEKIUBRXPJijgBBE -- ZShZ_5srb5/pub ? start=false & loop=false & delayms=3000|Вводная лекция 2023 ] ] * [ [ https : //drive.google.com/drive/folders/190UxJ0ADyfQVngD2ONP_y96-FeHybP6w ? usp=drive_link|Ссылка на гугл-диск ( лекции появляются по мере прохождения материала ) ] ] * [ [ https : //www.youtube.com/playlist ? list=PLsemblCLKFVeM9mGL78eMBGGUFMThSYYh|Видео-записи лекций ] ] ==== MOOC ==== * [ [ http : //e.moevm.info/course/view.php ? id=45|Курс `` Алгоритмы и Структуры Данных '' ] ] * [ [ https : //forms.gle/AeX7ucYTR1j1Lt3R8| Bug Report форма ] ] ==== Оформление лабораторных и курсовых работ ==== * [ [ courses : algorithms_structures : github_rules|Правила работы с репозиторием ] ] * [ [ courses : informatics : reportrules|Оформление отчета по лабораторной работе ] ] * [ [ courses : algorithms_structures : access|Допуск к защите лабораторных работ ] ] ==== Темы , рассматриваемые на защите ==== * [ [ courses : algorithms_structures : lr1 ] ] * [ [ courses : algorithms_structures : lr2 ] ] * [ [ courses : algorithms_structures : lr3 ] ] * [ [ courses : algorithms_structures : lr4 ] ] ==== Коммуникация ==== * [ [ Правила оформления письма ] ] ==== Полезные ссылки и литература ==== - Алгоритмы . Вводный курс - Т. Кормен - Алгоритмы . Построение и анализ - Т.Кормен , Ч.Лейзерсон , Р.Ривест , К.Штайн - [ [ https : //stepik.org/course/1547/|Stepik-курс `` Алгоритмы : теория и практика . Структуры данных '' ] ] - [ [ https : //www.coursera.org/specializations/data-structures-algorithms|Coursera : Специализация `` Структуры и алгоритмы данных '' ] ] - [ [ https : //github.com/moevm/algorithms_code|Репозиторий с примерами ] ] courses/algorithms_structures/start.txt · ",
                "Алгоритмы и структуры данных - Old revisions  Курсы » Алгоритмы и структуры данных courses : algorithms_structures : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/11/07 09:41 Алгоритмы и структуры данных – [ Лекции ] Ссылка на плейлист dmitry.ivanov +118 B ( current ) 2023/09/19 10:50 Алгоритмы и структуры данных – [ Полезные ссылки и литература ] dmitry.ivanov +93 B 2023/09/12 08:07 Алгоритмы и структуры данных – [ Лекции ] dmitry.ivanov +145 B 2023/09/04 09:59 Алгоритмы и структуры данных – [ Лекции ] Вводная лекция dmitry.ivanov ±0 B 2023/08/31 12:01 Алгоритмы и структуры данных dmitry.ivanov ±0 B 2023/08/31 12:01 Алгоритмы и структуры данных – move to 2023 dmitry.ivanov +3 B 2022/12/10 09:08 Алгоритмы и структуры данных – external edit 127.0.0.1 ±0 B 2022/09/28 19:28 Алгоритмы и структуры данных dmitry.ivanov +10 B 2022/09/05 12:30 Алгоритмы и структуры данных dmitry.ivanov +164 B 2022/09/04 14:57 Алгоритмы и структуры данных – Добавлена вводная лекция dmitry.ivanov +202 B 2022/08/30 09:51 Алгоритмы и структуры данных – [ Правила и описание рейтинговой системы ] dmitry.ivanov ±0 B 2021/11/24 08:39 Алгоритмы и структуры данных – [ Темы , рассматриваемые на защите ] tatyana.berlenko +42 B 2021/11/09 15:12 Алгоритмы и структуры данных – [ Темы , рассматриваемые на защите ] tatyana.berlenko +42 B 2021/09/26 16:17 Алгоритмы и структуры данных – [ Темы , рассматриваемые на защите ] tatyana.berlenko +42 B 2021/09/06 12:44 Алгоритмы и структуры данных – [ Лекции ] tatyana.berlenko -10 B 2021/09/06 08:27 Алгоритмы и структуры данных – [ Лекции ] tatyana.berlenko +107 B 2021/08/31 16:47 Алгоритмы и структуры данных tatyana.berlenko +112 B 2021/08/31 16:05 Алгоритмы и структуры данных – [ Оформление лабораторных и курсовых работ ] tatyana.berlenko +110 B 2021/08/31 16:04 Алгоритмы и структуры данных – [ Коммуникация ] tatyana.berlenko ±0 B 2021/08/31 16:03 Алгоритмы и структуры данных – [ Ссылки на полезные ресурсы ] tatyana.berlenko +164 B 2021/08/31 16:00 Алгоритмы и структуры данных – [ Коммуникация ] tatyana.berlenko -16 B Show differences between selected revisions less recent > > courses/algorithms_structures/start.txt · ",
                "Алгоритмы и структуры данных - "
            ]
        },
        {
            "name": "Построение и анализ алгоритмов",
            "url": "/doku.php/courses:algorithms_building_and_analysis:start",
            "date": "\"2023/06/07 19:45\"",
            "data": [
                "Построение и анализ алгоритмов  Курсы » Построение и анализ алгоритмов courses : algorithms_building_and_analysis : start Table of Contents Построение и анализ алгоритмов Материалы Курс на виртуальном образовательном кластере `` ЛЭТИ '' ( moodle ) Результаты Разное Построение и анализ алгоритмов Материалы Программа Материалы Курс на виртуальном образовательном кластере `` ЛЭТИ '' ( moodle ) 2020 2021 2022 2023 Результаты 2017 2018 2019 2020 2021 2022 2023 Разное Конкурсы courses/algorithms_building_and_analysis/start.txt · ",
                "Построение и анализ алгоритмов - ",
                "",
                "Программа  Курсы » Построение и анализ алгоритмов » Программа courses : algorithms_building_and_analysis : lectures Table of Contents Программа Сложность алгоритмов Поиск с возвращением Жадные алгоритмы Графы Раскраска в 3 цвета Минимальный разрез Кратчайшие пути . A * и его расширения Топологическая сортировка Задача о коммивояжёре Потоки в графах Изоморфизм графов Строки Редакционное расстояние Алгоритм Кнута-Морриса-Пратта Алгоритм Ахо-Корасик Динамическое программирование Не рассматривается ( пересечение с курсами и т.п . ) Графы и структуры данных Остовные деревья Задачи связности Потоки в графах Кратчайшие пути . Дейкстра Паросочетания Клики Алгоритм Рабина-Карпа Задачи выполнимости Программа Сложность алгоритмов Виды сложности : Операции Время Память Понятие вычислительной сложности в зависимости от размера входа Константная сложность на примере vector и unordered_set : Амортизированная В среднем В худшем Поиск с возвращением Идея поиска с возвращением ( backtracking ) Пример на задаче о ферзях Подходы метода ветвей и границ по отсеканию вариантов Метод Монте-Карло Пример на размере дерева Пример на площади фигуры Ограничения и условия применимости Жадные алгоритмы … Графы Раскраска в 3 цвета Алгоритм полного перебора Перебор с учётом выбора только из 2 цветов Перебор подмножеств размера ⇐ n/3 Вероятностный алгоритм . Сведение к задаче выполнимости Применение раскраски на практике Минимальный разрез Примеры практических задач Алгоритм Каргера Оптимизация Штейна алгоритма Каргера Кратчайшие пути . A * и его расширения Напоминание о A * Эвристические функции Алгоритм ALT Алгоритм REACH Алгоритм Arc flags Топологическая сортировка Ограничения на циклы Алгоритм нумерацией шагов обхода Алгоритм исключения вершины с минимальным количеством входящих рёбер Задача о коммивояжёре Сложность полного перебора Метод ветвей и границ : Отсечка по текущему найденному пути Отсечка по весу МОД Локальный поиск 2-окружение Имитация отжига Приближённое решение ( 2-приближённый алгоритм ) Потоки в графах Алгоритм Гольдберга ( проталкивания предпотока ) : Идея push-relabel алгоритмов Формализмы и инварианты Доказательство корректности Сравнение сложности с Фордом-Фалкерсоном Изоморфизм графов Задача изоморфизма : Точный изоморфизм Поиск подграфа в графе Алгоритм Ульмана ( переборный с матрицей ) Применение изоморфизма Строки Редакционное расстояние Расстояние Левенштейна ( редакционное расстояние ) Вычисление редакционного расстояния методом ДП Восстановление РП по таблице ( обратный ход в методе ДП ) Сведение задачи к путям в графе Алгоритм Кнута-Морриса-Пратта Основные определения Задача точного поиска образца в строке Наивный алгоритм и его сложность Алгоритм КМП Наивное построение префикс-функции и его сложность Построение префикс-функции за линейное время Алгоритм Ахо-Корасик Задача точного поиска набора образцов Trie Задача о словаре Алгоритм Ахо-Корасик Динамическое программирование Примеры вычисления чисел Фибоначчи Масимальная возрастающая подпоследовательность : Сведение к графу Выделение подзадачи Задача о рюкзаке : Без повторений ( одномерный случай ) С повторениями ( двумерный случай ) Задача о порядке перемножения матриц Не рассматривается ( пересечение с курсами и т.п . ) Графы и структуры данных Графы : определения и примеры . Упорядоченный граф Представления графов : матрица инциденций , матрица смежности , список пар , структура смежности ( списки инцидентности ) Остовные деревья Задача о связности графа и остовный лес Минимальное остовное дерево . Теорема “ о минимальном ребре ” : Жадный алгоритм ( Краскал ) Алгоритм “ ближайшего соседа ” ( Ярник , Прим , Дейкстра ) Алгоритм Борувки ( О ( m * log n ) ) Задачи связности Связные компоненты Алгоритм нахождения сильно связных компонент ( Косарайю ) Потоки в графах Алгоритм Форда-Фалкерсона Кратчайшие пути . Дейкстра Кратчайшие пути от фиксированной вершины Случай неотрицательных весов : алгоритм Дейкстры Алгоритм Флойда-Уоршелла вычисления расстояний между всеми парами вершин , одновременное построение путей Паросочетания Понятия вершинных и рёберных покрытий Теорема Галлаи Алгоритм Куна поиска паросочетания в двудольном графе Клики Полные подграфы , клики Применения и сложность задачи построения клик графа Алгоритм нахождения клик на основе поиска с возвращением . Алгоритм Рабина-Карпа Идея использования хешей для решения задачи точного поиска образца в строке Полиномиальные хеши для строк Алгоритм быстрого вычисления всех хешей текста длины образца Алгоритм Рабина-Карпа Задачи выполнимости Локальный поиск Метод расщепления Сведения courses/algorithms_building_and_analysis/lectures.txt · ",
                "Материалы  Курсы » Построение и анализ алгоритмов » Материалы courses : algorithms_building_and_analysis : materials : start Table of Contents Материалы Книги Ссылки NP и сложность Метод Монте-Карло Графы Строки Материалы Книги Томас Х. Кормен , Чарльз И. Лейзерсон , Рональд Л. Ривест . “ Алгоритмы : построение и анализ ” Седжвик Р. , Уэйн К . “ Алгоритмы на Java ” Гасфилд Д . “ Строки , деревья и последовательности в алгоритмах ” Ссылки NP и сложность NP класс и NP-полные задачи Метод Монте-Карло Применение в машинном обучении ( 4 лекция ) Хабрахабр Графы Кратчайшие пути Алгоритмы Дейкстра и Флойда-Уоршелла Алгоритм А * Раскраска графов [ В работе ] Конспект лекции по раскраскам Лекция CS club ( сложность 1,45 можно не смотреть ) Применение раскраски Раскраска в компиляторах Компоненты связности 5 лекция Stepik Эвристические алгоритмы на графах Краткий констпект А * Псевдокод А * Подходы к применению A * в ГИС Паросочетания Определения Максимальное паросочетание Потоки в графах Основы тетории потоков в CS club с алгоритмом Форда-фолкерсона ( Гольдберга ( проталкивания предпотока ) , лекции 1 , 4 , 5 ) Интерактивный пример работы алгоритма Гольдберга ( проталкивания предпотока ) Минимальный разрез Лекция в CS club по вероятностным алгоритмам ( Каргер-Штейн ) Конспект ИТМО ( Каргер-Штейн , оценка сложности для обеспечения вероятности 1/n ) Методичка ИТМО Задача о коммивояжёре CS club лекции Изоморфизм графов Краткое изложение алгоритма Ульмана Строки Редакционное расстояние Редакционное расстояние из курса биоинформатики Гасфилд Д . “ Строки , деревья и последовательности в алгоритмах ” Раздел 11 “ Ядро методов редактирования строк и выстраивания ” ( п.11.1 , п.11.2 , п.11.3 ) Пошаговая визуализация работы алгоритма ( входные строки задаются в константах : const str1 = 'stack ' ; const str2 = 'racket ' ; ) Задача поиска точного поиска подстроки в строке , Кнут-Моррис-Пратт Лекция Н. Вяххи в CS Club Лекция А.Куликова в CS-центре Кормен “ Алгоритмы . Построение и анализ ” 3 изд . Глава 32 ( Введение , п.32.1 , 32.4 ) Алгоритм Рабина-Карпа Лекция Н. Вяххи в CS Club Презентации Михаила Левина ( Хеширование строк , п.4 , алгоритм Рабина-Карпа ) Точный поиск набора образцов . Алгоритм Ахо-Корасик Лекция Павла Маврина Лекция М.Дворкина в CS-центре Оригинальная статья `` Alfred V. Aho , Margaret J. Corasick . Efficient string matching : Anaid to bibliographic search '' Статьи на хабре : Алгоритм Ахо-Корасик Неверная интерпретация алгоритма Ахо-Корасик Алгоритм на e-maxx.ru Суффиксные массивы CSCenter : Суффиксные массивы , Михаил Дворкин Презентация построение суффиксного массива , Михаил Левин courses/algorithms_building_and_analysis/materials/start.txt · ",
                "Конкурсы  Курсы » Построение и анализ алгоритмов » Конкурсы courses : algorithms_building_and_analysis : competitions Конкурсы Занятие призового места в одном из перечисленных конкурсов приводит к автомату за курс как в теоретической , так и в практической части BioHack Конкурс Тьюринга Яндекс алгоритм Хакатон с алгоритмическим уклоном courses/algorithms_building_and_analysis/competitions.txt · ",
                "✎ Построение и анализ алгоритмов  Курсы » Построение и анализ алгоритмов courses : algorithms_building_and_analysis : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Построение и анализ алгоритмов ====== ===== Материалы ===== * [ [ lectures ] ] * [ [ .materials : start ] ] ===== Курс на виртуальном образовательном кластере `` ЛЭТИ '' ( moodle ) ===== * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=301| 2020 ] ] * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=5215| 2021 ] ] * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=8071| 2022 ] ] * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=11751| 2023 ] ] ===== Результаты ===== * [ [ https : //docs.google.com/spreadsheets/d/1nLEuhsTDidOpqYl8Y5bCmzBZcEt6Gh3WHypd8l29yO8|2017 ] ] * [ [ https : //docs.google.com/spreadsheets/d/16I1mG_kMugBpnh_K23V_GTOWuN5hAEQG6OfOhIOlprA|2018 ] ] * [ [ https : //docs.google.com/spreadsheets/d/142Jxyk8ek8TRhUJ6PmzL9lLXx2KI23He4SrpY13go9A|2019 ] ] * [ [ https : //docs.google.com/spreadsheets/d/1IJevMoZrkmJgP7z6FtyA-JaXqfwmgIuPGhuRKxenhWY|2020 ] ] * [ [ https : //docs.google.com/spreadsheets/d/1AkjuQTEJj-IdJeyGkM20wQ0wj9AgkqSrNoeoWRsjh8A|2021 ] ] * [ [ https : //docs.google.com/spreadsheets/d/1hNyL2VF1-PKcc-pjuhmIIez9JsOwOrvyAYpX1wsz8lY|2022 ] ] * [ [ https : //docs.google.com/spreadsheets/d/1a0AbyAr8W_v9QMqMHN0nRc_Y1eID1rrlhRxsJpWtnUY|2023 ] ] ===== Разное ===== * [ [ competitions ] ] courses/algorithms_building_and_analysis/start.txt · ",
                "Построение и анализ алгоритмов - Old revisions  Курсы » Построение и анализ алгоритмов courses : algorithms_building_and_analysis : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/06/07 19:45 Построение и анализ алгоритмов kalishenko +162 B ( current ) 2022/12/10 09:08 Построение и анализ алгоритмов – external edit 127.0.0.1 ±0 B 2022/08/29 13:54 Построение и анализ алгоритмов kalishenko +97 B 2022/02/13 10:47 Построение и анализ алгоритмов kalishenko +310 B 2021/06/11 10:48 Построение и анализ алгоритмов kalishenko +97 B 2020/08/27 09:51 Построение и анализ алгоритмов – external edit 127.0.0.1 ±0 B 2020/06/27 13:58 Построение и анализ алгоритмов – ↷ Links adapted because of a move operation aoblizanov +7 B 2020/06/27 12:50 Построение и анализ алгоритмов – [ Материалы ] aoblizanov -17 B 2020/06/27 12:46 Построение и анализ алгоритмов – [ Материалы ] aoblizanov +17 B 2020/06/23 20:42 Построение и анализ алгоритмов kalishenko +46 B 2019/06/08 09:32 Построение и анализ алгоритмов – 2019 vnikolenko +114 B 2018/06/03 11:59 Построение и анализ алгоритмов kalishenko +262 B 2018/04/16 07:27 Построение и анализ алгоритмов – external edit 127.0.0.1 ±0 B 2017/02/23 10:46 Построение и анализ алгоритмов kalishenko +45 B 2017/02/15 23:14 Построение и анализ алгоритмов kalishenko +34 B 2017/02/15 23:12 Построение и анализ алгоритмов kalishenko +35 B 2017/02/15 23:11 Построение и анализ алгоритмов – ↷ Page moved and renamed from courses : algorithms_building_and_analysis to courses : algorithms_building_and_analysis : start kalishenko +71 B 2017/02/15 22:55 Построение и анализ алгоритмов – created kalishenko +71 B Show differences between selected revisions courses/algorithms_building_and_analysis/start.txt · ",
                "Построение и анализ алгоритмов - "
            ]
        }
    ],
    "3 курс": [
        {
            "name": "Базы данных",
            "url": "/doku.php/courses:databases",
            "date": "\"2023/09/15 10:30\"",
            "data": [
                "Базы данных  Курсы » Базы данных courses : databases Table of Contents Базы данных Коммуникация Материалы Базы данных Коммуникация Discord-сервер ( анонсы и вопросы ) Класс для прохождения курса на степике ( перейдите по ссылке , пожалуйста ) Форма для сбора данных об участниках ( заполните ее , пожалуйста ) Таблица успехов ( прогнозируемые оценки , посещаемость ) Материалы Как и за что формируется ваша оценка Презентации лекций План занятий Видеозаписи лекций ( 2021 ) Онлайн-курс ( только бесплатные задачи , никаких денег никому платить не нужно ) Пример контрольной Как готовить задания по лабораторным Проведение КР в Moodle с прокторингом Список литературы courses/databases.txt · ",
                "Базы данных - ",
                "",
                "Как и за что формируется ваша оценка  Курсы » Базы данных » Как и за что формируется ваша оценка courses : databases : mark Table of Contents Как и за что формируется ваша оценка Из чего формируются баллы Прохождение онлайн-курса Посещение лекционных занятий Сдача лабораторных работ Контрольные работы Как баллы переводятся в оценку Когда формируется Когда оценка отправляется в деканат Дополнительная сессия и дни качества Как и за что формируется ваша оценка Из чего формируются баллы Прохождение онлайн-курса Вам необходимо полностью пройти онлайн-курс https : //stepik.org/course/63054/syllabus Только бесплатные задачи , никаких денег никому платить не нужно . Задачи , оцениваемые в 0 баллов решать не обязательно , однако рекомендуется . Прохождение курса оценивается пропорционально , максимальная оценка 54 баллов . Посещение лекционных занятий Учитывается с помощью ИС Посещения . Баллы за посещаемость начисляются пропорционально общему количеству занятий , максимальный балл - 7 баллов . Сдача лабораторных работ Каждая из пяти лабораторных работ оценивается в диапазоне 0-5 баллов , итого , за все лабораторные можно максимально получить 25 баллов . Обратите внимание , что все лабораторные имеют срок сдачи PR - позже этого срока материалы лабораторной не принимаются и , как следствие , баллы за нее получить не получится . Подробнее о лабораторных Как готовить задания по лабораторным Контрольные работы Вам предстоит написание двух контрольных работ , каждая из которых оценивается в 7 баллов . За все контрольные можно получить максимум 14 балла . Для написания контрольных будет два специально оговоренных дня . Написать контрольные в другое время будет нельзя : ( Даты контрольных работ : Контрольная работа №1 - 07.11.2023 ( на паре с лабораторной ) Контрольная работа №2 - 05.12.2023 ( на паре с лабораторной ) Как баллы переводятся в оценку Удовлетворительно - не менее 54 баллов Хорошо - не менее 81 баллов Отлично - не менее 91 баллов Когда формируется 20.12.2023 23:59 - последний срок подачи PR по ЛР5 24.12.2023 23:59 - последний срок прохождения stepik 27.12.2023 23:59 - последний срок решения спорных вопросов , доп . заданий и иной активности , после этого времени данные в таблице успехов не будут обновляться ! ! Когда оценка отправляется в деканат Оценку выставляем по сумме баллов на момент 12:00 28.12.2023 в ведомость . Все , что прислано позже , учитывается на доп.сессии при наличии направления . Дополнительная сессия и дни качества В случае , если вы не согласны с оценкой , можно её повысить на дне качества ( 29.01.2024 ) / дополнительной сессии ( позже ) . Для обоих событий надо получить направление в деканате ( берите электронные направления через ЛК ) . Чтобы нам не искать в последний момент , просьба предупредить о желании пересдавать до 12:00 28.01.2024 . Регламент оценивания следующий : Баллы , набранные в семестре , сохраняются Прохождение онлайн-курса ( если не прошли в семестре ) - до 55 баллов Дальнейший набор баллов - решение задач на SQL-инъекции ( аналогичные задачам на лекции ) , 1 задача = 2 балла Онлайн-курс нужно пройти до пересдачи , в день пересдачи вы решаете задачи . Лабораторные и контрольные работы не принимаются . Шкала оценивания такая же , как в основном семестре . courses/databases/mark.txt · ",
                "Как готовить задания по лабораторным  Курсы » Базы данных » Как готовить задания по лабораторным courses : databases : labs Table of Contents Как готовить задания по лабораторным Варианты заданий лабораторных работ Подготовка Процесс защиты Сроки отправки PR лабораторных Как готовить задания по лабораторным Задания и примеры лабораторных работ по курсу БД : https : //github.com/moevm/db_sql_lab_examples Описание лабораторных работ представлено в соответствующих папках репозитория . Варианты заданий лабораторных работ Описаны в репозитории https : //github.com/moevm/db_sql_lab_examples/blob/main/lab-1/variants.md Подготовка Лабораторные задания выполняюте заранее и создается PR . Пулл-реквест должен быть создан не позже дедлайна ( см . ниже ) ! PR должен быть создан с полностью выполненной ЛР . Если на момент дедлайна в PR нет каких-то заданий - они не засчитываются . Для всех работ нужно создавать отдельную ветку . Для каждой работы сначала должна пройти автоматическая проверка через CI . Потом работу смотрит преподаватель . Все файлы по ЛР N должны находиться в папке < Номер группы > _ < фамилия ( транслит ) > /lab < N > / Для лаб . работ название PR должно иметь следующий вид < Номер группы > _ < фамилия > _lab < Номер работы > . В PR должны быть отчет в формате pdf и в редактируемом формате ( latex , docx или иной ) . Положить в папку report лаборатоной работы с названиями lab < Номер работы > .pdf и lab < Номер работы > .docx . Файлы необходимые для сдачи также положить в репозиторий в папку лабораторной работы ( смотри описание лаб . работ ) . Все лабораторные работы надо загружать в репозиторий своей группы : https : //github.com/moevm/sql-2023-1384 https : //github.com/moevm/sql-2023-1383 https : //github.com/moevm/sql-2023-1381 https : //github.com/moevm/sql-2023-1303 https : //github.com/moevm/sql-2023-1304 Приглашение в репозитории высылают преподаватели после того , как вы заполнили форму . Обратите внимание , приглашение живет только неделю , после чего становится недействительным : ( Процесс защиты Для начала защиты необходимо , чтобы бот в репозитории проверил ваш PR и поставил ему метку OK. Защита лабораторных работ будет проходит в Discord на выделенных для защиты парах . Очередь на сдачу формируется на основании создания PR . Во время сдачи необходимо будет транслировать экран . На защите лабораторных работ могут задаваться вопросы в общем по теории , по процессу выполнения лаб . работы и по написанному коду . Сроки отправки PR лабораторных Для каждой из лабораторных работ есть дедлайн отправки PR . PR , отправленные после наступления срока , принимаются к защите с 0 баллов Лабораторная работа 1 - 04.10.2023 23:59 Лабораторная работа 2 - 25.10.2023 23:59 Лабораторная работа 3 - 15.11.2023 23:59 Лабораторная работа 4 - 29.11.2023 23:59 Лабораторная работа 5 - 20.12.2023 23:59 Частично сделанные ЛР , оформленные в PR в срок , будут расцениваться как невыполненные ЛР при наступлении дедлайна . courses/databases/labs.txt · ",
                "Проведение КР в Moodle с прокторингом  Курсы » Базы данных » Проведение КР в Moodle с прокторингом courses : databases : controls Table of Contents Проведение КР в Moodle с прокторингом КР1 КР2 Прокторинг Скринкасты Инструкция по скринкасту Проведение КР в Moodle с прокторингом По данной дисциплине у вас предусмотрено 2 контрольные точки . Написать контрольные в другое время будет нельзя : ( Даты контрольных работ : Контрольная работа №1 - 07.11.2022 или 10.11.2022 ( на паре с лабораторной ) Контрольная работа №2 - 05.12.2022 или 08.11.2022 ( на паре с лабораторной ) Вам предстоит написание двух контрольных работ , каждая из которых оценивается в 10 баллов . За все контрольные можно получить максимум 20 балла . Контрольные работы находятся здесь : http : //e.moevm.info/course/view.php ? id=43 Демонстрационные задачи на SQL и тесты представлены здесь : http : //e.moevm.info/mod/quiz/view.php ? id=1433 КР1 Контрольная работа состоит из 12 заданий - 10 практических на написание SQL-кода , 2 теоретических на знание материалов лекций . Максимальный балл за КР - 12/12 . Данные баллы конвертируются в 10-бальную систему и выставляются в таблицу успехов . На задания с написанием кода у вас неограниченное число попыток . В случае возникновения ошибок , у вас не будут проходить тесты , выводится сообщение об ошибке , задача не будет зачтена . В задачах используется язык SQLite , предоставляемый CodeRunner Moodle . Задачи сделаны так , чтобы диалект языка не влиял на решение . Используется общий синтаксис SQL . На задания с теорией у вас 1 попытка . Думайте с умом прежде чем проверять решение . Для задач с множественным вариантом ответа будет засчитана только часть баллов в случае выбора частичного ответа . Например , при наличии 4 правильных вариантов вы выбрали 3 , то получаете 0.75/1 за задачу . За выбор неправильного ответа баллы вычитаются . На прохождение КР у вас будет выделена только 1 попытка . Ограничение по времени - 30 мин . После завершения КР обязательно нажмите кнопку завершения теста КР2 Контрольная работа состоит из 12 заданий - 10 практических на написание SQL-кода , 2 теоретических на знание материалов лекций . Максимальный балл за КР - 12/12 . Данные баллы конвертируются в 10-бальную систему и выставляются в таблицу успехов . На задания с написанием кода у вас неограниченное число попыток . В случае возникновения ошибок , у вас не будут проходить тесты , выводится сообщение об ошибке , задача не будет зачтена . В задачах используется язык SQLite , предоставляемый CodeRunner Moodle . Задачи сделаны так , чтобы диалект языка не влиял на решение . Используется общий синтаксис SQL . На задания с теорией у вас 1 попытка . Думайте с умом прежде чем проверять решение . Для задач с множественным вариантом ответа будет засчитана только часть баллов в случае выбора частичного ответа . Например , при наличии 4 правильных вариантов вы выбрали 3 , то получаете 0.75/1 за задачу . За выбор неправильного ответа баллы вычитаются . На прохождение КР у вас будет выделена только 1 попытка . Ограничение по времени - 50 мин . После завершения КР обязательно нажмите кнопку завершения теста Прокторинг Выполнение данных КР будет происходит с прокторингом . Сайт прокторинга : https : //proctoring.cub-it.org/ Всем желающим будет доступна проверка функционирования прокторинга до проведения КР . Обо всех обнаруженных проблемах с прокторингом просьба уведомить преподавателей заранее . Обязательно необходимо включить запись до начала теста в Moodle . Напоминаю обязательные правила : Наличие вебкамеры , микрофона Использование браузеров Chromium ( Chrome , Yandex ) Студент должен присутствовать в кадре , смотреть в монитор Запрещено любое использование мессенджеров , чатов ( slack , vk , telegram , facebook , whatsapp ) или иных коммуникаций с другими людьми ( в том число личное ) Поиск в интернете части вопросов заданий или самих заданий , поиск ответов ( скопировал вопрос и вставил в Google , особенно для задач с теорией ) будут расцениваться как несоблюдение правил . Разрешено пользоваться материалами лекций , видеозаписями , документацией к языку SQL . Перед началом КР преподаватель высылает в Discord список ссылок входа в систему прокторинга по студентам . В случае несоблюдения правил и обнаружения их , студент получает 0/10 баллов за КР . КР , проведенная без прокторинга , засчитывается за 0/10 баллов . Случаи технических проблем с прокторингом и их влияние на оценку рассматриваются в индивидуальном порядке . Скринкасты В случае нерешаемых технических проблем с прокторингом , до проведения КР по согласованию с преподавателем можно заменить прокторинг на скринкаст . Требования к скринкасту : Скринкаст содержит момент начала , прохождения теста в Moodle и окончания , длительность скринкаста равна времени прохождения КР ( до 40 мин ) + время на фиксирование начала и окончания . В скринкасте содержится видео с вебкамеры , пример : https : //d1ka0itfguscri.cloudfront.net/aPF/2012/08/16/22/59/cljD3R7d2/preview.jpg . Как такое сделать будет описано ниже . Инструкция по скринкасту Инструкция как делать скринкаст : Как сделать скринкаст : Ubuntu , Windows , MacOS Как настроить вебкамеру : Ubuntu , Windows , MacOS Пример расположения видео с камеры courses/databases/controls.txt · ",
                "Список литературы  Курсы » Базы данных » Список литературы courses : databases : books Список литературы Molinaro A. SQL Cookbook : Query Solutions and Techniques for Database Developers . – “ O'Reilly Media , Inc. ” , 2005 . Гарсиа-Молина Г. , Ульман Д. Д. , Уидом Д. Системы баз данных : Полный курс . – Вильямс , 2003. https : //dev.mysql.com/doc/ courses/databases/books.txt · ",
                "✎ Базы данных  Курсы » Базы данных courses : databases This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Базы данных ====== ===== Коммуникация ===== * [ [ https : //discord.gg/vQtMXg7GX|Discord-сервер ( анонсы и вопросы ) ] ] * [ [ https : //stepik.org/join-class/afa8888fa9cf5d7fa21e479dfa3fd9c82cb94162|Класс для прохождения курса на степике ( перейдите по ссылке , пожалуйста ) ] ] * [ [ https : //forms.gle/rGGnApzcpAD4mMCW7|Форма для сбора данных об участниках ( заполните ее , пожалуйста ) ] ] * [ [ https : //docs.google.com/spreadsheets/d/1tcUwI0bTZ-BjIQYSFMk1qf2vZlYHnGt2_rzxF7dAC-I/edit ? usp=sharing|Таблица успехов ( прогнозируемые оценки , посещаемость ) ] ] ===== Материалы ===== * [ [ courses : databases : mark| ] ] * [ [ https : //drive.google.com/drive/folders/1JoDSp72cGlLO0i_ZKCozrZvfkZFiANyT ? usp=sharing|Презентации лекций ] ] * [ [ https : //docs.google.com/spreadsheets/d/1ch6t9VewWOpQpsBArP9D8RuioaxPrxANXVUUm9mE4B0/edit ? usp=sharing|План занятий ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyforl-YhGv7y5mXOO5KcPeLa4|Видеозаписи лекций ] ] ( 2021 ) * [ [ https : //stepik.org/course/63054/syllabus|Онлайн-курс ( только бесплатные задачи , никаких денег никому платить не нужно ) ] ] * [ [ http : //e.moevm.info/mod/quiz/view.php ? id=1433|Пример контрольной ] ] * [ [ courses : databases : labs| ] ] * [ [ courses : databases : controls| ] ] * [ [ courses : databases : books|Список литературы ] ] courses/databases.txt · ",
                "Базы данных - Old revisions  Курсы » Базы данных courses : databases Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/09/15 10:30 Базы данных – [ Материалы ] korytov.pavel +140 B ( current ) 2023/09/14 06:56 Базы данных – [ Коммуникация ] azarevich.artem ±0 B 2023/09/03 12:35 Базы данных korytov.pavel ±0 B 2023/09/02 15:18 Базы данных – [ Материалы ] azarevich.artem -1 B 2023/09/02 15:17 Базы данных – [ Материалы ] azarevich.artem +1 B 2023/09/02 14:59 Базы данных – [ Коммуникация ] azarevich.artem -1 B 2022/12/10 09:08 Базы данных – external edit 127.0.0.1 ±0 B 2022/09/05 07:15 Базы данных – [ Коммуникация ] azarevich.artem +2 B 2022/08/30 16:13 Базы данных – [ Коммуникация ] dmitry.ivanov ±0 B 2022/08/30 07:59 Базы данных – [ Коммуникация ] dmitry.ivanov ±0 B 2022/08/30 07:42 Базы данных – [ Материалы ] korytov.pavel ±0 B 2022/08/30 07:26 Базы данных – [ Материалы ] korytov.pavel ±0 B 2022/08/28 15:02 Базы данных – [ Коммуникация ] dmitry.ivanov ±0 B 2022/08/26 12:31 Базы данных – [ Коммуникация ] azarevich.artem -2 B 2021/11/10 12:05 Базы данных kovinevmv +36 B 2021/09/21 06:45 Базы данных kovinevmv +27 B 2021/09/02 11:30 Базы данных – [ Материалы ] mark +120 B 2021/09/01 10:28 Базы данных kovinevmv +65 B 2021/08/31 13:52 Базы данных – [ Материалы ] mark +54 B 2021/08/31 11:08 Базы данных – [ Коммуникация ] mark +2 B 2021/08/31 09:32 Базы данных – [ Коммуникация ] mark +9 B Show differences between selected revisions less recent > > courses/databases.txt · ",
                "Базы данных - "
            ]
        },
        {
            "name": "Основы промышленной разработки ПО",
            "url": "/doku.php/courses:mse:start",
            "date": "\"2024/02/12 11:09\"",
            "data": [
                "Основы и Управление Промышленной Разработкой ПО  Курсы » Основы и Управление Промышленной Разработкой ПО courses : mse : start Основы и Управление Промышленной Разработкой ПО Основы промышленной разработки ПО - бакалавры , 3 курс Управление промышленной разработкой ПО - магистры , 1 курс Лекции Практика Роли участников и итерации ( что нужно делать ) Формирование оценок ( как баллы превращаются в оценки , что делать и чего делать не нужно ) OLD : Презентация окончания итерации Ресурсы для участников Архив прошлых запусков курса courses/mse/start.txt · ",
                "Основы и Управление Промышленной Разработкой ПО - ",
                "",
                "Роли участников и итерации ( что нужно делать )  Курсы » Основы и Управление Промышленной Разработкой ПО » Роли участников и итерации ( что нужно делать ) courses : mse : idea_and_assignments Table of Contents Роли участников и итерации ( что нужно делать ) Идея курсов Роли участников Бакалавры ( 3 курс ) Магистранты ( 5 курс ) Эскалация ( эскалирование ) проблем Заказчики Преподаватели курса Проекты и команды Fast track проект Итерации Итерация 1 Итерация 2 Итерация 3 Итерация 4 Пояснение про сценарии использования и макеты UI Роли участников и итерации ( что нужно делать ) Идея курсов Цель обоих курсов - погрузить участников в максимально приближенный ( где-то даже через чур ) к реальности процесс проектной разработки ПО с реальными коллегами / задачами / проектами / заказчиками и таким образом приобрести целостное и полное представаление о всем цикле разработки ПО . В больших корпорациях за счет накопленных ресурсов многие сложности и острые углы проектов / особенности жизненного цикла ПО могут годами оставатся для вас тайной . Поэтому вам важно оказатся в среде , где все мрачно , чтобы испытать себя и наглядно ощутить как ( по вам ) проходит процесс разработки ПО . Задачи Познакомиться с разными ролями в рамках разработки ПО Ощутить на себе этапы жизненного цикла разработки ПО Столкнутся с коммуникативными и организационными сложностями Освоить базовые приемы / понятия проектной работы Роли участников Прежде чем излагать разделение студентов на роли , важно отметить , что главная цель всех студентов данного курса - успешная разработка выбранного проекта : Заказчик доволен ( == он получил то , что хотел согласно заданию ) , Стабильная работа ( == отстутсвие сбоев ) , Отчуждаемость и осязаемость ( == посторонний человек сможет самостоятельно по материалам работы развернуть и использовать ваш продукт ) . Поэтому Помните , что мяч во взаимодействии с заказчиком перманентно на вашей стороне . Вы бегаете / тормошите / пишете заказчику , наоборот не сработает . Стоит накладывать описания ролей ниже на данную цель и рассматривать ваши обязанности через эту оптику , Бакалавры ( 3 курс ) Выполняют роль разработчиков / тестировщиков / инженеров проекта . Их основные задачи - подготовка кода , тестов , документации и других содержательных материалов , презентация материалов , предоставление обратной связи по коллегам преподавателям , эскалирование проблем магистру или преподавателям . Магистранты ( 5 курс ) Выполняют роль тимлида + проджект-менеджера . Поскольку разные люди вкладывают в эти понятия разные вещи , то определим свои требования к данной роли . Магистрант : лично отвечает за свою команду и успех своего проекта , организует общение с заказчиком ( установочный созвон + согласование плана на итерацию - фиксируйте эти согласования каким-то образом ) , формализует обратную связь / пожелания / требования заказчика в задачи для команды , организует общение с командой ( регулярные созвоны для обсуждения прогресса ) , планирует работу ( и по сути , и по времени ) , создает задачи и следит за порядком в репо , проверяет результаты бакалавров и контролирует достижение результата , выполнять часть обязанностей разработчиков ( см . Бакалавры выше ) , презентация результатов , предоставление обратной связи о коллегах для преподавателей , эскалирует проблемы преподавателям / заказчикам . Что означает личная ответственость за команду и проект ? Это означает что общий успех проекта и действия бакалавров напрямую влияют на баллы магистра за дисциплину ( подробнее в документе “ Формирование оценки ” ) : Команда : Магистр должен не просто отправлять задания / доносить информацию до бакалавров , но также и следить что все всё поняли / сделали надлежащим образом . Если по итогам итерации , кто то из бакалавров не выполнил обязательные условия / простаивал и магистр не принял мер , то это его управленческое упущение . Проект : успешность руководителя = успешность проекта . Поэтому , если проект идет с негативной динамикой ( при отсутствии попыток магистра как-то выправить курс ) , то это отражается на баллах магистра . Эскалация ( эскалирование ) проблем В проектной работе возможны и неизбежны ситуации , когда участник сталкивается с затруднением / проблемой , которую он не может решить в силу органичений собственной должности / недостатка знаний или навыков или других причин . Конструктивное решение в данном случае это эскалация проблемы - передача информации о проблеме на уровень выше ( вашему непосредственному начальнику / начальнику выше и тд ) . В случае нашего курса цепочки эскалации такие Магистры - Заказчики - Преподаватели ( если есть проблемы с пониманием постановки задачи , сугубо техническими сложностями ) Магистры - Преподаватели ( Если проблемы с курсом , с магистром , с бакалаврами , с заказчиками ) ! ! Для эскалации преподвателям используйте раздел эскалация на дискорд сервере . ! ! Предостережение - эскалация проблемы это крайняя мера . В проектной работе ценятся люди , которые обращаются к вышестоящим в редких случаях ( сами не справились и есть острая необходимость в помощи ) . Поэтому , перед эскалацией проблемы проверьте себя : Я сформулировать проблему в письменной форме , сформулировал как ее воспроизвести ( так что это поймет и другой человек ) и обозначил , в чем основная загвоздка Я попытался самостоятельно решить проблему несколькими способами Я учел рекомендации к тому , как строить коммуникацию ( см “ Советы по коммуникации ” ) Эскалируя проблему , обозначайте в чем ее важность ( Чем она мешает и как негативно влияет на процесс ) и срочность ( как быстро ее нужно решать ) . Заказчики Задачи заказчика Сформулировать интересующий проект Подготовить набор ссылок по технологиям проекта Отвечать на вопросы студентов по проекту Оценивание промежуточного и финального результата Преподаватели курса Преподаватели представляют собой финальную инстанцию в иерархии ролей . К ним можно обратится по любому вопросу , но не каждый из вопросов целесообразно задавать сразу им ( см . Эскалация выше ) . Проекты и команды В курсе будет дан набор проектов для выполнения . Студентам будет необходимо в ограниченный срок выбрать проект ( путем заполнения формы ) . Части студентов будет предложено пройти курс в рамках проекта Fast track . Будьте внимательны - поменять выбор нельзя : ( По итогам выбора будут организованы проектные команды : 4-5 бакалавров + 1-2 магистра . Команды получают доступ в проектный репо и канал проекта на дискорд-сервере . Репо или созданный преподавателем , или предоставленный заказчиком . Как работать в репо : Главная ветка - main / master ( если заказчик явно не попросил обратного ) Нельзя делать прямые коммиты в главную ветку Одна задача == одна ветка ( название должно отражать номер и название задачи ) == один PR PR мержат и ревьювят магистры Организация работы с задачами и фичами : Фиксируйте все задачи и фичи как issue в репо Создавайте метки для категорий и milestone для обозначения итераций Организуйте работу с задачами в виде проекта github ( тип Board ) - он должен отображатся на странице projects вашего репо Fast track проект Данный проект призван учить проектной работе в немного иной парадигме - погружаясь в проработанну . область автоматизации образования вы одновременно обучаетесь ролям QA и быстрее примеряете на себя перспективу пользователя . Вам предстоит разобраться со сложившейся структурой и адаптироватся к специфичным требованиям пользователей ( студентов и преподавателей ) . Поэтому роли и итерации здесь трактуются слегка иначе . Цель проекта - подготовка , интеграция и проверка качества средств автоматизации . Проект подразумевает разработку инструментов автоматизации , которые должны следовать существующей практике и итнергрироваться в существующую учебную систему . Сами инструменты разрабатваются на языке Python и включают такие компоненты ( Применительно к курсовым и лабораторным ) : Программы проверки студенческих решений Генераторы условий заданий Предметы и языки программирования , для которых вы будете вести разработку инструментов автоматизации : Программирование ( решения студентов на С ) Информатика и Алгоритмы и структуры данных ( решения студентов на Python ) Организация ЭВМ и систем ( решения студентов на ассемблере для RISC-V ) Особенности проекта : Необходимость общения с заказчиком и выяснения деталей / требований остается Все исполнители в данном проекте - магистры . Если кто-то из магистров берет на себя ( даже если временной и частично ) функции лидера проекта , то получает за это дополнительный бонус Задачи магистров в данном проекте : Выполнять свои задания по разработке Интегрировать получаемый результат в moodle Готовить эталонные решения / тесты для своих материалов План на итерацию для каждого магистра Подготовить четыре задачи ( == разработать четыре инструмента , например - сделать четыре программы для генерации и проверки четырех разных вариантов курсовой ) - правила подготовки материалов будут указаны в репо Критерии оценивания результата ( могут отличатся , это отправная точка ) полнота и ясность обратной связи для студентов надежность решения учет крайних случаев расширяемость и переносимость результата По итогам итерации не требуется готовить презентационные материалы / демо , НО результаты должны иметь интсртукцию / необходимые материалы чтобы их можно было проверить и развернуть в отрыве от автора Итерации Разработка проекта будет вестись в рамках адаптированной версии гибких методологий разработки . Процесс разработки будет организован как четыре последовательные итерации длительностью примерно месяц . Каждая итерация представляет собой концентрированную разработку очередной версии проекта . Обязательная часть в любой итерации ( Кроме первой итерации - там уточнение ) : Работа с issues в репозитории Требования к работе с репо выше Задачи созданы , назначены , поставлены отметки итераций ( на текущую ( для первой не супер критично ) и на следующую итерации ) Задачи в актуальных статусах Задачи имеют описания Сообразно итерации настроена автоматизация тестирования / сборки / защиты веток Подготовить презентационные материалы ( разместите и презентацию ( PDF ) , и видео в репозитории ) Презентация где указан : план на текущую итерацию , результаты , план на следующую Скринкаст с демонстрацией фич проекта ( не более 2 минут ) Итерация 1 Сроки : 13.02.2024 - 28.02.2024 ( включительно ) Задачи : Выбор проектов Получение доступа к репозиториям и чатам Правильно подписать себя ( указать в профиле github имя фамилию ( == сторонний человек должен глядя на ваш профиль по нику / указанным фамилии имени иметь возможность верно догадатся , кто вы ) + в дискорд сервере Имя.Фамилия.группа ) Провести установочную встречу с заказчиком Подготовлена вики-страница с подробной постановкой задачи , собранными и проанализированными требованиями , сценариями использования и макетами UI Работа с issues в репозитории ( см . выше ) - создать задачи и фичи ; указать теги , версии и описания Подготовить презентационные материалы ( см . выше ) - только презентация Если на первой итерации команда смогла сделать хотя бы минимальный прототип - это дает дополнительный бонус . Итерация 2 Сроки : 29.02.2024 - 27.03.2024 ( включительно ) Задачи : Подготовить версию 1 ( частично работоспособная версия ) Приложение корректно запускается ( без ошибок и сбоев ) Приложение реализует минимум один сценарий использования Есть инструкция по настройке / развертыванию или скрипты для этого или dockerfile | docker-compose Работа с issues в репозитории ( см . выше ) Подготовить презентационные материалы ( см . выше ) Итерация 3 Сроки : 28.03.2024 - 25.04.2024 ( включительно ) Задачи : Подготовить версию 2 ( почти работоспособная версия ) Требования версии 1 Приложение реализует половину от согласованных сценариев использования Реализованы базовые тесты ( интеграционные , функциональные ) Работа с issues в репозитории ( см . выше ) Подготовить презентационные материалы ( см . выше ) Итерация 4 Сроки : 26.04.2024 - 29.05.2024 ( включительно ) Задачи : Подготовить версию 3 ( максимально работоспособная версия ) Требования версии 2 Приложение реализует не менее 90 % от количества сценариев использования Финализированные тесты + автоматизация из запуска через Github Actions ( или иной способ ) Работа с issues в репозитории ( см . выше ) Подготовить презентационные материалы ( см . выше ) Пояснение про сценарии использования и макеты UI Теория - Презентация про то , как составлять макет и писать сценарии использования ( +типичные ошибки ) Вопросы : А если мое приложение не подразумевает интерфейс пользователя в явном виде ? Обсудите с заказчиком , можно ли сделать хотя бы какой-то отладочный интерфейс для пользователя ( CLI например ) и макетируйте его . Если такие интерфейсы придумать не удается , то возникает вопрос - а как вообще проверить ваши результаты ( обсудите с заказчиком ) . courses/mse/idea_and_assignments.txt · ",
                "Формирование оценок ( как баллы превращаются в оценки , что делать и чего делать не нужно )  Курсы » Основы и Управление Промышленной Разработкой ПО » Формирование оценок ( как баллы превращаются в оценки , что делать и чего делать не нужно ) courses : mse : mark Table of Contents Формирование оценок ( как баллы превращаются в оценки , что делать и чего делать не нужно ) Из чего складывается оценка Как оценивается выполнение итераций Освоение теоретических материалов Бонусы Штрафы Дедлайны проверок Оценки Формирование оценок ( как баллы превращаются в оценки , что делать и чего делать не нужно ) Из чего складывается оценка Всего в курсе можно заработать до 90 баллов . Если вы очень талантливый и внимательно читаете описание курса , то больше . ( командам ) Баллы за итерации - суммарно до 40 баллов за все итерации Освоение теоретических материалов - пропорционально степени освоения до 40 баллов Посещаемость лекций - пропорционально посещаемости от общего числа лекций ( первую лекцию не считаем ) - до 10 баллов . Лекция посещена , если вы были на ней более 75 % времени . Бонусы Штрафы Как оценивается выполнение итераций Каждая итерация оценивается максимально в 10 баллов . Как считается фактический балл за одну итерацию в обычных проектах : В оценке есть два компонента : Общие баллы проекта ( насколько с точки зрения проекта команда пришла к успеху за итерацию ) 4 балла и “ Баллы студента ” 6 баллов Если Общие баллы проекта за итерацию == 0 , то общая оценка всех участников проекта за нее - 0 . Если Баллы студента за итерацию ==0 , то Общие баллы проекта за нее он не получает . У бакалавров и магистров “ Баллы студента ” за итерацию считаются по-разному . Бакалавры - ( для итерации 1 ) - оцениваются магистром ( будет разослана форма ) пропорционально степени участия в процессе . Если магистр кого-то забыл оценить - это минус магистру . ( для итераций 2-4 ) получают баллы пропорционально степени своего наблюдаемого и отчуждаемого участия в итерации . 0 баллов - нет участия в репо 1 балл - кода нет , но есть успехи на вики 6 баллов - сделал одну или более фичу по итерации Магистры - получают баллы пропорционально “ порядку ” в проекте и степени своего наблюдаемого и отчуждаемого участия в разработке . Порядок и движение в проекте важнее , чем написание кода вами . Ниже ориентировочные примеры оценивания 0 баллов - два и более бакалавра не выполнили требований итерации и/или не показали результата ( магистр не эскалировал проблему ) 5 баллов - итерация закрыта полностью , все бакалавры показали нужный уровень участия , но магистр не принял участия в работе над проектом 6 баллов - уровень на 5 баллов + магистр сам принял участие в работе над проектом Если магистров в проекте двое , то каждый из них оценивается по алгоритму выше , но с оговорками требования к общим результатам проекта выше ( чем в случае с проектами , где магистр один ) - в проекте должно быть чуть больше успехов требования к личному вкладу ( написание кода / вики … . ) тоже выше - раз магистров двое , то у них больше времени остается на непосредственно разработку ответственность за результат не делится ( если в плане организации все плохо , то ответсвенны оба магистра ) - раз их двое , то вдвоем магистры имеют приемущество в контроле над ситуацией Как считается балл за итерацию в Fast Track : Пропорционально степени выполнения плана ( 0-10 баллов за итерацию ) + наличие и степень порядка в вашем взаимодействии с репо ( ведение задач , коммиты и тд ) Если задачи итерации выполнены с опозданием от срока , то оценка умножается на 0.5 Конкретные критерии проверки и требования - в репозитории Если у команды есть небольшое отставание по текущей итерации ( именно в плане продукта ) , то магистр может ( по согласованию с преподавателем ) в небольшой срок это отставание устранить . Наблюдаемое и отчуждаемое участие в разработке это ваши действия в репо , которые видно невооруженным взглядом и которые приносят проекту пользу . Пример : коммиты ( мелкие и частые коммиты лучше чем большие и крупные ) работа с вики работа с задачами Обратите внимание , что эти действия идут в зачет тому , кто значится их автором на гитхабе . Поэтому - настройте , пожалуйста , себе гит / гитхаб . Любые возражения на этот счет ( например , я не смог настроить github desktop / друг за меня пушит / мы работаем всей комадной с одной машины и прочее ) не принимаются . Освоение теоретических материалов Всем участникам курса нужно освоить все материалы из обоих курсов . Курс молодого бойца https : //e.moevm.info/course/view.php ? id=2 Основы и управление промышленной разработкой ПО https : //e.moevm.info/course/view.php ? id=85 , будет включать материалы лекций ( В разработке ) Введение в программную инженерию . Лекция 1 https : //www.youtube.com/watch ? v=_kb2UgteIk0 Руководство в IT проектах для начинающих https : //www.youtube.com/watch ? v=ryUReI0G0yI Бонусы Все ( 10 баллов ) Знаток предмета - топ-10 / топ-5 ( бакалавры / магистры ) человек , активно помогавших коллегам с ответами на вопросы по предмету в дискорд-сервере . ( 10 баллов ) Знатоки тестирования - бонус для топ-3 команд , у которых самая полная автоматизация тестирования в репо ( получает вся команда , не применимо для Fast Track ) . ( 5 баллов ) Исполнитель отвалился - если один из бакалавров отвалился , то оставшаяся команда получает бонус ( не применимо для Fast Track ) . Бакалавры : ( 7 баллов ) Команда без руководителя - если магистр отвалилися , то оставшаяся команда получает бонус ( не применимо для Fast Track ) . Магистры : ( 7 баллов максимум ) Протоколист - за каждый сохраненный вовремя ( к сожалению , задним числом разместить нельзя ) протокол / запись созвона с командой . Размещайте ссылки / записи на вики репозитория . Считается пропорционально количеству синхронизаций , считаем что максимум может быть 7 синхронизаций ( 1 за первую итерацию , и по два созвона за каждую следующую ) . Штрафы Все ( -10 баллов ) Токсичное поведение / буллинг ( -10 баллов ) Жульничество ( -20 баллов ) Я не знал , что нужно получить доступ в репо - доступ в репо не получен до наступления марта ( -20 баллов ) Я не знал , что нужно быть на дискорд сервере - доступ на дискорд сервер не получен / вы не указали себе корректный ник до наступления марта ( -30 баллов ) Я не знал , что нужно прям комитить - нет коммитов до начала апреля Дедлайны проверок ( даты пофиксим ) Все время - Московское . Мягкий дедлайн - 30.05.2024 23:59 Жесткий дедлайн - 31.05.2024 14:00 Срок окончательной проверки 04.06.2024 14:00 Как работают дедлайны : Все присланное до мягкого дедлайна будет проверено до наступления жесткого дедлайна Все присланное до жесткого дедлайна будет проверено до срока окончательной проверки Все присланное после жесткого дедлайна будет проигнонировано . Оценки Учитывая , что курс экспериментальный , то баллы ниже задают рекомендованные оценки . Эти оценки могут быть скорректированы в большую или меньшую сторону в зависимости от обратной связи участников / впечатления / коммуникации . Бакалавры Удовлетворительно - > = 60 Хорошо - > = 75 Отлично - > = 85 Магистры Удовлетворительно - > = 61 Хорошо - > = 76 Отлично - > = 86 courses/mse/mark.txt · ",
                "Презентация окончания итерации  Курсы » Основы и Управление Промышленной Разработкой ПО » Презентация окончания итерации courses : mse : course_results Table of Contents Презентация окончания итерации Требования к презентации результатов Организационные вопросы Временной регламент Презентация окончания итерации Требования к презентации результатов Обязательные слайды Постановка задачи : какие фичи ( крупные задачи ) были запланированы на данную итерацию Методы решения , технологии Результат : что было выполнено , что не было выполнено Планы : какие фичи ( крупные задачи ) будут выполнены за следующую итерацию Демо Демонстрация нескольких сценариев использования приложения Материалы Рабочий исходный код должен быть доступен В репозитории должна находиться вся необходимая документация по приложению Презентации должны быть высланы за день до доклада в формате pdf ( ссылка на гугл диск в письме преподавателя ) Содержание документации Установка необходимых зависимостей , деплой приложения Как использовать ваше приложение Примеры использования Краткая информация по приложению Запуск тестов Организационные вопросы Студенты могут улучшить оценку , задавая вопросы по теме презентации коллегам из других групп Очередность определяется номером проекта в таблице проектов Временной регламент Длительность доклада 5-7 минут Ответы на вопросы 3-5 минут courses/mse/course_results.txt · ",
                "Ресурсы для участников  Курсы » Основы и Управление Промышленной Разработкой ПО » Ресурсы для участников courses : mse : resources Ресурсы для участников Как делать задачи для Stepik http : //se.moevm.info/doku.php/staff : stepik Онлайн-курсы Approved : Введение в Linux Applied Computer Science . Git Программирование на Python Python PyPI package publication Веб-технологии Не тестировалось : Курс `` Управление вычислениями '' ( модуль посвященный Docker ) Learn Docker & Containers using Interactive Browser-Based Scenarios Useful links Работа с задачами в github courses/mse/resources.txt · ",
                "Архив прошлых запусков курса  Курсы » Основы и Управление Промышленной Разработкой ПО » Архив прошлых запусков курса courses : mse : archive Table of Contents Архив прошлых запусков курса 2016 2017 2018 2019 Архив прошлых запусков курса 2016 Список проектов Структуры проектов Проекты курса MSE 2H2016 Список фич Список фич , третий этап 2017 Список проектов Распределение студентов 2018 Список проектов 2019 Список проектов courses/mse/archive.txt · ",
                "✎ Основы и Управление Промышленной Разработкой ПО  Курсы » Основы и Управление Промышленной Разработкой ПО courses : mse : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Основы и Управление Промышленной Разработкой ПО ====== * Основы промышленной разработки ПО - бакалавры , 3 курс * Управление промышленной разработкой ПО - магистры , 1 курс * [ [ https : //drive.google.com/drive/folders/1v9wRyJH3rSNgILuuWCuppkwUnCXWLdDc|Лекции ] ] ===== Практика ===== * [ [ . : idea_and_assignments ] ] * [ [ . : mark ] ] OLD : * [ [ . : course_results ] ] * [ [ . : resources ] ] * [ [ . : archive ] ] courses/mse/start.txt · ",
                "Основы и Управление Промышленной Разработкой ПО - Old revisions  Курсы » Основы и Управление Промышленной Разработкой ПО courses : mse : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/12 11:09 Основы и Управление Промышленной Разработкой ПО – [ Практика ] mark -196 B ( current ) 2024/01/31 14:44 Основы и Управление Промышленной Разработкой ПО mark +93 B 2024/01/15 14:36 Основы и Управление Промышленной Разработкой ПО – [ Практика ] mark +7 B 2024/01/15 13:23 Основы и Управление Промышленной Разработкой ПО mark +46 B 2024/01/11 10:01 Основы и Управление Промышленной Разработкой ПО mark +216 B 2022/12/10 09:08 Основы и Управление Промышленной Разработкой ПО – external edit 127.0.0.1 ±0 B 2022/02/16 13:58 Основы и Управление Промышленной Разработкой ПО tatyana.berlenko +26 B 2022/02/16 13:52 Основы и Управление Промышленной Разработкой ПО – [ Материалы ] tatyana.berlenko -50 B 2022/02/16 13:52 Основы и Управление Промышленной Разработкой ПО tatyana.berlenko +107 B 2022/01/17 09:55 Основы и Управление Промышленной Разработкой ПО tatyana.berlenko ±0 B 2020/09/17 08:16 Основы и Управление Промышленной Разработкой ПО tatyana.berlenko +44 B 2020/09/04 07:20 Основы и Управление Промышленной Разработкой ПО tatyana.berlenko -23 B 2020/08/27 09:51 Основы и Управление Промышленной Разработкой ПО – external edit 127.0.0.1 ±0 B 2019/11/09 13:58 Основы и Управление Промышленной Разработкой ПО kalishenko +83 B 2019/11/09 13:56 Основы и Управление Промышленной Разработкой ПО kalishenko -198 B 2019/11/09 13:55 Основы и Управление Промышленной Разработкой ПО – ↷ Links adapted because of a move operation kalishenko +2 B 2019/11/09 13:54 Основы и Управление Промышленной Разработкой ПО – ↷ Links adapted because of a move operation kalishenko +7 B 2019/11/09 13:54 Основы и Управление Промышленной Разработкой ПО kalishenko -30 B 2019/11/09 13:51 Основы и Управление Промышленной Разработкой ПО – ↷ Links adapted because of a move operation kalishenko +6 B 2019/11/09 13:51 Основы и Управление Промышленной Разработкой ПО – ↷ Page moved from start : mse : start to courses : mse : start kalishenko +427 B 2019/11/09 13:51 Основы и Управление Промышленной Разработкой ПО – ↷ Page moved and renamed from start : mse to start : mse : start kalishenko +427 B Show differences between selected revisions less recent > > courses/mse/start.txt · ",
                "Основы и Управление Промышленной Разработкой ПО - "
            ]
        },
        {
            "name": "Тестирование",
            "url": "/doku.php/courses:testing:start",
            "date": "\"2023/07/08 10:43\"",
            "data": [
                "Тестирование  Курсы » Тестирование courses : testing : start Table of Contents Тестирование Материалы Лабораторные Курс на виртуальном образовательном кластере `` ЛЭТИ '' ( moodle ) Результаты Разное Тестирование Материалы Программа Материалы Лабораторные Создание Test Case Тестирование REST API Тестирование Web Курс на виртуальном образовательном кластере `` ЛЭТИ '' ( moodle ) 2021 2022 2023 Результаты 2021 2022 2023 Разное Ресурсы по работе над bug bounty courses/testing/start.txt · ",
                "Тестирование - ",
                "",
                "Программа  Курсы » Тестирование » Программа courses : testing : lectures Table of Contents Программа Введение Выбор вида тестирования Тестирование API . WSDL Теория Практика Планирование тестирования . Test case / Bugs Тестирование API . REST Теория Практика Тестирование интерфейса пользователя . Web Теория Практика Нагрузочное тестирование Теория Практика Тестирование интерфейса пользователя ( Desktop ) Теория Практика Fuzzing-тестирование Теория Практика Классификация методов test design Программа Введение Примеры наиболее дорогих ошибок Причины возникновения : Космические лучи : ) Ошибки в ПО Виды тестирования ( различные классификации ) По цели По свойствам По исполнителю По уровню По интерфейсу Политика версионирования при тестировании : Альфа-версии Бета-версии Выбор вида тестирования Пирамида тестирования : Приоритеты различных видов тестирования Соотношение видов тестов Принципы семантического версионирования Стандарт версионирования Пример на разделяемом протоколе взаимодействия Пример на библиотечных решениях Тестирование API . WSDL Теория Особенности тестирования протоколов RPC : WSDL/SOAP + REST/JSON Messaging XSD-схемы - основы и примеры описания типов WSDL-сервис - основы и пример описания методов Пример генерированного кода для сервера и клиента Практика Сетевой сниферинг SOAP с помощью wireshark SoapUI : Создание проекта на основе WSDL Посылка запросов и получение ответов Создание TestSuit Проверки на основе XPath Планирование тестирования . Test case / Bugs Структура и назначение Test-plan : Кто Что Как Когда Критерии Структура и назначение Test-case : Предусловия Шаги Фокусирование на функциональности Заведение ошибок : Workflow Основные поля и принципы их заполнения Поиск дубликатов по стекам Тестирование API . REST Теория Напоминание принципов протокола HTTP ( GET/POST/… ) JSON-schema/OpenAPI/Swagger - основы и примеры описания REST API Аналогия с XSD/WSDL Практика Postman : Импорт описания API Применение окружений Создание запросов Использование переменных и их переопределение Тесты на JS для проверки : Кода возврата Полей ответа Соответствия схеме Назначение и применение mock-серверов Тестирование интерфейса пользователя . Web Теория Архитектура Selenium : WebDriver API на Python , Java , … IDE как расширение браузеров Принципы идентификации элементов web-страниц Практика Selenuim : Создание виртуального окружения на Python Запуск WebDriver Поиск элементов на странице ( css , id , атрибуты ) Ввод текстовых данных Автоматизированная генерация сценария в IDE Нагрузочное тестирование Теория Фокусы нагрузочного тестирования : Производительность Стабильность Отказоустойчивость Масштабируемость Стресс-тестирование Профили нагрузки : SLA Пределы производительности Параметры : Время обработки Чатота запросов Размер данных Откуда брать профили нагрузки : БД Журналы Прогноз Инструменты : Web-консоль JMeter Gatling K6 Практика JMeter : Поддерживаемые протоколы Ручное создание HTTP-запросов Запись сценариев через Proxy Thread group и его параметры Вынесение общих параметров Просмотр результатов в графическом и табличном видах Тестирование интерфейса пользователя ( Desktop ) Теория Примеры технологий разработки интерфейса и соответствие инструментов тестирования со знанием идентификаторов элементов интерфейса : Qt : Squish JS : Selenium Применение компьютерного зрения : Sikuli Архитектура OpenCV Tesseract Jython Применение машинного обучения : Testolang Архитектура QEMU/KVM Нейронные сети Практика Sikuli : Подключение sikuli в Python Тест сложения в калькуляторе передачей нажатия клавиш Фиксация изображений для поиска Параметры поиска изображения Fuzzing-тестирование Теория Виды верификации : Статическая Динамическая ( … , fuzzing , … ) Sanitizers : asan ubsan Генерация данных : Начальная выборка Контроль трасс исполнения Эволюционные алгоритмы Критерии остановки тестирования Практика AFL fuzzer : Сборка clang с ключами asan и ubsan Создание тестовых данных для затравки Пример на дереве условных операторов Запуск afl-fuzz и разъяснение полей , выводимых в runtime Разбор результата поска падения приложения Классификация методов test design Black Box Классы эквивалентности Граничные значения Доменный анализ Диаграмма переходов состояний Попарное тестирование Тестирование вариантов использования White Box Потоки управления Потоки данных Experience based Checklists Исследовательское тестирование . Test strategy model : Function Claims Domain User Stress Risk Flow Automatic Scenario courses/testing/lectures.txt · ",
                "Материалы  Курсы » Тестирование » Материалы courses : testing : materials : start Table of Contents Материалы Введение Тестирование API . WSDL Test design / Планирование ... Тестирование API . REST Тестирование интерфейса пользователя ( Web ) Нагрузочное тестирование Test design / Классификация методов Fuzzing-тестирование Материалы Введение Презентация Тестирование на основе моделей ( вводная часть ) Тестирование API . WSDL SoapUI Официальные простые примеры использования SoapUI Ещё одна пошаговая простая инструкция по SoapUI Wireshark : Декодирование HTTP/WSDL Основные возможности Test design / Планирование ... Курс `` Black Box Software Testing '' . Часть `` Test Design '' Статья `` What is a good test case ? '' Тестирование API . REST Принципы семантического версионирования REST : Принципы разработки RESTful-сервисов Спецификация OpenAPI ( Swagger ) Postman : Официальная документация Примеры спецификаций OpenAPI Тестовый сервис Тестирование интерфейса пользователя ( Web ) Курс на Stepik Сравнение инструментов Интерактивная игра для оттачивания навыка поисков элементов Разработка тестовых сценариев : Методология Памятка Совсем пошаговое описание Нагрузочное тестирование Доклад на конференции `` Нагружаем банки '' Различные фокусы нагрузочного тестирования Пример работы JMeter и JDBC Test design / Классификация методов Rapid Software Testing Небольшой доклад с Heizenbug Fuzzing-тестирование Доклад на Heizenbug 2021 Введение в fuzzing libfuzzing `` Hello world '' OSS-Fuzz OSS-Fuzz документация Список проектов под OSS-Fuzz RESTler документация и репозиторий Schemathesis документация и репозиторий courses/testing/materials/start.txt · ",
                "Создание Test Case  Курсы » Тестирование » Создание Test Case courses : testing : test_case Создание Test Case Инструмент : Текстовый редактор Выбрать один сайт для тестирования и “ застолбить ” его в Google-таблице , имеющейся в Moodle курса : Сайт должен иметь повторяемость с точки зрения тестирования ( то есть не обфусцирован случайными методами , меняющимися от раза к разу , или подобным случайным интерфейсом ) Сценарии должны быть автоматизируемы ( например , сложно автоматизировать обязательную 2 факторную аутентификацию ) Склонировать репозиторий через github-classroom , имеющийся в Moodle курса Создать в репозитории ветку test-case и дальнейшую работу вести в ней . Ветку создавать от основной ветки ( если основной ветки нет - создать ) Написать 2 позитивных тестовых сценария и 1 негативный , характерных для выбранного ресурса ( например , авторизация - это общая функуциональность , характерная для большей части ресурсов , она не специфична ) , в ReadMe в синтаксисе MD . Из сценария должно быть видно : Какие функции и в какой последовательности проверяются Что проверяется в функциях ( например , при работе удаления проверяется , что количество элементов уменьшилось ) В качестве примера сценариев можно руководствоваться материалами курса По завершении тестов сделать Pull Request , назначив его на kel-testing-course Исправить все замечания по Pull Request Работа считается засчитанной при принятии Pull Request в основную ветку courses/testing/test_case.txt · ",
                "Тестирование REST API  Курсы » Тестирование » Тестирование REST API courses : testing : postman Тестирование REST API Инструмент : Postman Выбрать один сервис для тестирования и “ застолбить ” его в Google-таблице , имеющейся в Moodle курса . В качестве множества сервисов для выбора можно использовать репозиторий public-apis : Сервис должен требовать авторизацию/apiKey и т.п . Должно быть не менее 3 методов Создать workspace с именем , говорящим о вашем сервисе для тестирования Создать команду , которой дать права на ваш workspace Добавить в команду пользователя для проверки : kel.testing.course @ gmail.com Создать набор запросов , позволяющих : Авторизоваться Проверить корректность работы методов ( как минимум код возврата , соответствие формата получаемых даных и некоторая логика ) Передавать авторизационные данные после логина в остальные методы набора через переменные окружения Проверить ответ хотя бы одного метода на соответствие схеме ( в случае отсутствия существующего OpenAPI - написать схему самим , можно прямо в коде ) Создать mock-сервер , показывающий проваливание теста на соответствие ответа схеме ( адрес сервера таким образом также стоит задавать через переменные , чтобы можно было подменить на mock-сервер ) Склонировать репозиторий через github-classroom , имеющейся в Moodle курса Экспортировать набор запросов в корень репозитория и сделать Pull Request Выложить JSON-схему ( на основе которой основывалась проверка в п . 5 ) также в корень Исправить все замечания по Pull Request и комментариям к запросам в Postman Работа считается засчитанной при принятии Pull Request в основную ветку courses/testing/postman.txt · ",
                "Тестирование Web  Курсы » Тестирование » Тестирование Web courses : testing : selenium Тестирование Web Инструмент : Selenuim В задании по написанию test-case вы написали для тестировщика-автоматизатора 3 сценария , которые он должен запрограммировать . Тестировщик-автоматизатор - вы Склонировать репозиторий через github-classroom , имеющийся в Moodle курса ( репозиторий новый , так как по сравнению с прошлым налажен CI ) Создать новую ветку selenium от главной Требуется реализовать автоматизированное тестирования описанных сценариев на Python / Selenium : Средства непрерывной интеграции рассчитаны на наличие драйверов chrome и firefox Проверки должны выполняться средствами PyTest , базовый ( идеологически , на unittest ) пример можно посмотреть в этом репозитории . Атоматический запуск должен осуществляться стандартной командой “ pytest main.py ” Имя основного файла - main.py Желательно выделить 3 отдельных файла для тестовых сценариев и подключать их в основной С целью корректного формирования окружения , на которое вы рассчитываете , необходимо иметь файл с python-зависимости в стандартном виде requirements.txt Рекомендуется использовать такой подход , как Page Object Model при разработке тестов Выложить код тестов в репозиторий По завершении тестов сделать Pull Request , назначив его на kel-testing-course Исправить все замечания по Pull Request Работа считается засчитанной при принятии Pull Request в основную ветку courses/testing/selenium.txt · ",
                "Ресурсы по работе над bug bounty  Курсы » Тестирование » Ресурсы по работе над bug bounty courses : testing : bug_bounty Table of Contents Ресурсы по работе над bug bounty Список `` аккредитованных '' продуктов для тестирования Правила Ресурсы по работе над bug bounty Так как курс предполагает нахождение нетривиальных ошибок в различных сервисах , то в качестве “ автомата ” за курс можно засчитать найденную ошибку в каком-либо из известных общемировых продуктов/сервисов Список `` аккредитованных '' продуктов для тестирования Может быть расширен по предварительному согласованию со студентом hackerone netflix Правила Найденная ошибка прошла по правилам ресурса , где она найдена ( принята в bug tracker , подтверждена и т.п . ) Приоритет найденной ошибки средний и выше В случае , если за ошибку уже получен bug bounty > = 200 $ к моменту выставления зачёта - “ автомат ” применяется безусловно , в остальных случаях рассмотрение индивидуально courses/testing/bug_bounty.txt · ",
                "✎ Тестирование  Курсы » Тестирование courses : testing : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Тестирование ====== ===== Материалы ===== * [ [ lectures ] ] * [ [ .materials : start ] ] ===== Лабораторные ===== - [ [ test_case ] ] - [ [ postman ] ] - [ [ selenium ] ] ===== Курс на виртуальном образовательном кластере `` ЛЭТИ '' ( moodle ) ===== * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=7211| 2021 ] ] * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=8083| 2022 ] ] * [ [ https : //vec.etu.ru/moodle/course/view.php ? id=11754| 2023 ] ] ===== Результаты ===== * [ [ https : //docs.google.com/spreadsheets/d/13_hXtWe0-riM4iiUaGclHuOFmfI2EHYICKJW8lAP6M8/edit ? usp=sharing|2021 ] ] * [ [ https : //docs.google.com/spreadsheets/d/1-wKVt2QTOtYQOqr1tK7Jx25Wd5tPtTFH9NPzZYStTW0/edit ? usp=sharing|2022 ] ] * [ [ https : //docs.google.com/spreadsheets/d/1GD9SL3UuT-VLsFHXX_HA2PMybMiMwWNqIzoDUe_hytM/edit ? usp=sharing|2023 ] ] ===== Разное ===== * [ [ bug_bounty ] ] courses/testing/start.txt · ",
                "Тестирование - Old revisions  Курсы » Тестирование courses : testing : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/07/08 10:43 Тестирование kalishenko +114 B ( current ) 2023/05/05 12:16 Тестирование kalishenko +65 B 2022/12/10 09:08 Тестирование – external edit 127.0.0.1 ±0 B 2022/09/06 18:24 Тестирование kalishenko +228 B 2022/04/11 08:15 Тестирование kalishenko +18 B 2022/02/13 10:46 Тестирование kalishenko +244 B 2021/12/16 17:18 Тестирование kalishenko -68 B 2021/12/07 18:10 Тестирование kalishenko +45 B 2021/12/01 23:28 Тестирование kalishenko -29 B 2021/11/26 11:48 Тестирование kalishenko +5 B 2021/11/26 11:48 Тестирование kalishenko -14 B 2021/11/17 21:40 Тестирование kalishenko +16 B 2021/11/01 00:35 Тестирование kalishenko +50 B 2021/09/22 20:00 Тестирование kalishenko +113 B 2021/09/12 20:29 Тестирование kalishenko +59 B 2021/09/12 20:28 Тестирование – created kalishenko +87 B Show differences between selected revisions courses/testing/start.txt · ",
                "Тестирование - "
            ]
        },
        {
            "name": "Искусственные нейронные сети",
            "url": "/doku.php/courses:artificial_neural_networks",
            "date": "\"2024/02/07 15:31\"",
            "data": [
                "Искусственные нейронные сети  Курсы » Искусственные нейронные сети courses : artificial_neural_networks Table of Contents Искусственные нейронные сети Рейтинговая система Лекции Практические занятия Лабораторные работы Индивидуальные задания Рейтинг Список источников Искусственные нейронные сети Ссылка на Zoom для лекций Рейтинговая система Правила и описание рейтинговой системы Календарь занятий Лекции Посещение 8382 Посещение 8383 Лекция 1 Лекция 2 Лекция 3 Лекция 4 Лекция 5 Лекция 6 Лекция 7 Практические занятия Распределение вариантов Занятие №1 - Основы Python Занятие №2 - Создание простой нейронной сети с использованием библиотеки Keras Занятие №3 - Представление данных и библиотека NumPy Занятие №4 - Операции с тензорами в библиотеке Keras Занятие №5 - Оптимизация нейронных сетей в библиотеке Keras Занятие №6 - Процесс решения задач с применением нейронных сетей в библиотеке Keras Занятие №7 - Мониторинг моделей глубокого обучения средствами библиотеки Keras Занятие №8 - Ансамблирование моделей нейронных сетей с использованием библиотеки Keras Лабораторные работы Зависимости для лаб . работ Лабораторная работа №1 - Многоклассовая классификация цветов Лабораторная работа №2 - Бинарная классификация отраженных сигналов радара Лабораторная работа №3 - Регрессионная модель изменения цен на дома в Бостоне Лабораторная работа №4 - Распознавание рукописных символов Лабораторная работа №5 - Распознавание объектов на фотографиях Лабораторная работа №6 - Прогноз успеха фильмов по обзорам Лабораторная работа №7 - Классификация обзоров фильмов Лабораторная работа №8 - Генерация текста на основе “ Алисы в стране чудес ” Индивидуальные задания Задачи Рейтинг 8382 8383 Список источников Skansi Sandro Introduction to Deep Learning Rosebrock Adrian Deep Learning for Computer Vision with Python Гудфеллоу Ян Глубокое обучение Николенко Сергей Глубокое обучение Nielsen Michael Neural Networks and Deep Learning Molnar Christoph Interpretable Machine Learning Burkov Andriy The hundred-Page Machine Learning Book Trask Andrew Deep Learning Yaser Abu Mostafa Learning from Data Жерон Орельен Прикладное машинное обучение с помощью Scikit-Learn и TensorFlow Brownlee Jason Deep Learning With Python Chollet Francois Deep Learning with Python courses/artificial_neural_networks.txt · ",
                "Искусственные нейронные сети - ",
                "",
                "courses : artificial_neural_networks : pr1  Курсы » Искусственные нейронные сети » pr1 courses : artificial_neural_networks : pr1 Материалы занятия Задачи courses/artificial_neural_networks/pr1.txt · ",
                "courses : artificial_neural_networks : pr2  Курсы » Искусственные нейронные сети » pr2 courses : artificial_neural_networks : pr2 Материалы занятия Задачи courses/artificial_neural_networks/pr2.txt · ",
                "courses : artificial_neural_networks : pr3  Курсы » Искусственные нейронные сети » pr3 courses : artificial_neural_networks : pr3 Материалы занятия Задачи courses/artificial_neural_networks/pr3.txt · ",
                "courses : artificial_neural_networks : pr4  Курсы » Искусственные нейронные сети » pr4 courses : artificial_neural_networks : pr4 Материалы занятия Задачи courses/artificial_neural_networks/pr4.txt · ",
                "courses : artificial_neural_networks : pr5  Курсы » Искусственные нейронные сети » pr5 courses : artificial_neural_networks : pr5 Материалы занятия Задачи courses/artificial_neural_networks/pr5.txt · ",
                "courses : artificial_neural_networks : pr6  Курсы » Искусственные нейронные сети » pr6 courses : artificial_neural_networks : pr6 Материалы занятия Задачи courses/artificial_neural_networks/pr6.txt · ",
                "courses : artificial_neural_networks : pr7  Курсы » Искусственные нейронные сети » pr7 courses : artificial_neural_networks : pr7 Материалы занятия Задачи courses/artificial_neural_networks/pr7.txt · ",
                "courses : artificial_neural_networks : pr8  Курсы » Искусственные нейронные сети » pr8 courses : artificial_neural_networks : pr8 Материалы занятия Задачи courses/artificial_neural_networks/pr8.txt · ",
                "Необходимые зависимости для лаб . работ  Курсы » Искусственные нейронные сети » Необходимые зависимости для лаб . работ courses : artificial_neural_networks : dependency Необходимые зависимости для лаб . работ Установить не ниже Python 3.7 . Скачать можно по ссылке Используя терминал и утилиту pip установить библиотеки : pip install numpy pip install pandas pip install matplotlib pip install scikit-learn Установить библиотеку Keras : Установка Keras напрямую pip install Keras При установке будут скачаны все необходимые зависимости . Проверить , что также был установлен TensorFlow . Для этого необходимо ввести : pip list В выведенном списке необходимо найти строчку tensorflow 1.15 Если данная строка отсутствует , то необходимо ввести : pip install `` tensorflow==1.15 '' Для подключения библиотеки Keras в коде необходимо будет вводить : import keras # подключение библиотеки from keras import layers # подключение модуля Keras с слоями Установка Keras через TensorFlow Модуль Keras также поставляется в составе модуля TensorFlow Для установки , необходимо ввести : pip install tensorflow Для подключения библиотеки Keras в коде необходимо будет вводить : import tensorflow as tf import tf.keras as keras # подключение библиотеки from keras import layers # подключение модуля Keras с слоями или import tensorflow.keras # подключение библиотеки from tensorflow.keras import layers # подключение модуля Keras с слоями courses/artificial_neural_networks/dependency.txt · ",
                "✎ Искусственные нейронные сети  Курсы » Искусственные нейронные сети courses : artificial_neural_networks This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Искусственные нейронные сети ====== [ [ https : //zoom.us/j/99909419865 ? pwd=ZXFpWFVwUzlmbkxMWFU3RXE2ZEdqdz09|Ссылка на Zoom для лекций ] ] ===== Рейтинговая система ===== [ [ https : //docs.google.com/document/d/e/2PACX-1vRRXlCAOmAG6aWaZUVaF2N9LyGTsmNhxK_mOFDNH0HptIsO662DuSw8zndT4fpgDU4Lc841_HH99-7y/pub|Правила и описание рейтинговой системы ] ] [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vQI_nK3ImvwGN4Nu6pR7p5zCw5plyHBZu0nv6-cdeXWQPjWkUd3lRE48X_nE-mFP3gAkX0AG7QaGaEC/pubhtml|Календарь занятий ] ] ===== Лекции ===== [ [ https : //forms.gle/as5XcxvFYmtNFcg4A|Посещение 8382 ] ] [ [ https : //forms.gle/AVzh2aBvB9PWsuUA6|Посещение 8383 ] ] { { courses : artificial_neural_networks : :lecture_1.pdf|Лекция 1 } } { { courses : artificial_neural_networks : :lecture_2.pdf|Лекция 2 } } { { courses : artificial_neural_networks : :lecture_3.pdf|Лекция 3 } } { { courses : artificial_neural_networks : :lecture_4.pdf|Лекция 4 } } { { courses : artificial_neural_networks : :lecture_5.pdf|Лекция 5 } } { { courses : artificial_neural_networks : :lecture_6.pdf|Лекция 6 } } { { courses : artificial_neural_networks : :lecture_7.pdf|Лекция 7 } } ===== Практические занятия ===== [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vR0x9g-woSL1Vu5aa2loZauH9VLan8EuVJe8Ss5V15AY1BB3ggaF3-y8-OBWURo3Nome4GpwPYlUuXk/pubhtml|Распределение вариантов ] ] [ [ courses : artificial_neural_networks : pr1|Занятие №1 - Основы Python ] ] [ [ courses : artificial_neural_networks : pr2|Занятие №2 - Создание простой нейронной сети с использованием библиотеки Keras ] ] [ [ courses : artificial_neural_networks : pr3|Занятие №3 - Представление данных и библиотека NumPy ] ] [ [ courses : artificial_neural_networks : pr4|Занятие №4 - Операции с тензорами в библиотеке Keras ] ] [ [ courses : artificial_neural_networks : pr5|Занятие №5 - Оптимизация нейронных сетей в библиотеке Keras ] ] [ [ courses : artificial_neural_networks : pr6|Занятие №6 - Процесс решения задач с применением нейронных сетей в библиотеке Keras ] ] [ [ courses : artificial_neural_networks : pr7|Занятие №7 - Мониторинг моделей глубокого обучения средствами библиотеки Keras ] ] [ [ courses : artificial_neural_networks : pr8|Занятие №8 - Ансамблирование моделей нейронных сетей с использованием библиотеки Keras ] ] ===== Лабораторные работы ===== [ [ courses : artificial_neural_networks : dependency|Зависимости для лаб . работ ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vREMk4ojeBzQR_NuqT_zJkn-zjSwV-yuGOXlBaApqsBbcTYebg74Ms-wqMkhsMbwTYQ1uxqknI6xpq_/pub|Лабораторная работа №1 - Многоклассовая классификация цветов ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSZYJgAUu -- CTJ5pt0Esi2Wk9vVmBg1NL-rqixmcqgYPZz-5oluEJD70NMDPU5lDhv83s98Mm2ZtSQb/pub|Лабораторная работа №2 - Бинарная классификация отраженных сигналов радара ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vTOTGeUy9fZVR-cevkfWHZqkKbIOs8QnRkZRUaGABxUkE0wPVwTBLPoKUtujDyfSevvxuTsZjVGLdAV/pub|Лабораторная работа №3 - Регрессионная модель изменения цен на дома в Бостоне ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSUw9_xRrhJrH2BEafWobcdlyTq1WLmIVjucnnKTg6ohmZB8_dkSEQxiAgXEXUWwxqwoqXLanBs327q/pub|Лабораторная работа №4 - Распознавание рукописных символов ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vQfa8yw0p2GvgLD4kpCHfirSA2u7k96A7PiuvpKcWZjtA4yZuHBpUZPUi_HeKzA-DTk2k8IZSHY5j90/pub|Лабораторная работа №5 - Распознавание объектов на фотографиях ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSX7gKq1efcZ_AZa0h9cWj5RHb41WwXuBTVc5N3zUCJL3wwzTowfoUuu4c6bFJx_q6dvCanQ -- Uh00P/pub|Лабораторная работа №6 - Прогноз успеха фильмов по обзорам ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSDiIYN79NzUl2vylMHPL6xItoTqK_QrB8yZ7_lOj796uLaKR5m5q8rp-DlJztZnP98o_iF9qDxWtHk/pub|Лабораторная работа №7 - Классификация обзоров фильмов ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vQ1MGH8NRw0nX0Y1DbRvga90CvQ3WzNdHKgWGv_-X0Jv53d54dBZWeasDMf-gLtU9PMmadBM61AI7-O/pub|Лабораторная работа №8 - Генерация текста на основе “ Алисы в стране чудес ” ] ] ===== Индивидуальные задания ===== [ [ https : //docs.google.com/document/d/e/2PACX-1vReJ7-gL-Af1NOtbwTD3eYj0eOC4-wQGIpwaVJEfPIWdNx9hQqXgOMYwF0jHMVEWcjqQao0m5aIpbNs/pub| Задачи ] ] ===== Рейтинг ===== [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vQPMeX2RHdh_cz53MfSnLpwFku3RbOHFVhFMMKZ0T0bK6xqT-HJiL0qDWX9Ic23EXOC8yq014oxtWkW/pubhtml|8382 ] ] [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vRWr6PAxLyjcr_NHNqE_ccqIDQjfX9xu6yWPNOhfpXdWwvI9cjYJK1uVwaMrpajFX3hdSYThHe2SpLA/pubhtml|8383 ] ] ===== Список источников ===== * //Skansi Sandro// Introduction to Deep Learning * //Rosebrock Adrian// Deep Learning for Computer Vision with Python * //Гудфеллоу Ян// Глубокое обучение * //Николенко Сергей// Глубокое обучение * //Nielsen Michael// Neural Networks and Deep Learning * //Molnar Christoph// Interpretable Machine Learning * //Burkov Andriy// The hundred-Page Machine Learning Book * //Trask Andrew// Deep Learning * //Yaser Abu Mostafa// Learning from Data * //Жерон Орельен// Прикладное машинное обучение с помощью Scikit-Learn и TensorFlow * //Brownlee Jason// Deep Learning With Python * //Chollet Francois// Deep Learning with Python courses/artificial_neural_networks.txt · ",
                "Искусственные нейронные сети - Old revisions  Курсы » Искусственные нейронные сети courses : artificial_neural_networks Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/07 15:31 Искусственные нейронные сети – [ Искусственные нейронные сети 2024 ] alexey.subbotin -183 B ( current ) 2024/02/07 15:29 Искусственные нейронные сети – [ Искусственные нейронные сети ] alexey.subbotin +5 B 2024/02/07 15:29 Искусственные нейронные сети – [ Искусственные нейронные сети ] alexey.subbotin +178 B 2022/12/10 09:08 Искусственные нейронные сети – external edit 127.0.0.1 ±0 B 2021/03/15 09:14 Искусственные нейронные сети timur.zhangirov -8 B 2021/02/19 09:28 Искусственные нейронные сети timur.zhangirov -1 B 2021/02/12 08:10 Искусственные нейронные сети timur.zhangirov +187 B 2021/02/11 09:17 Искусственные нейронные сети timur.zhangirov +292 B 2021/02/11 09:09 Искусственные нейронные сети timur.zhangirov +1 B 2021/02/11 08:53 Искусственные нейронные сети timur.zhangirov +130 B 2021/02/09 12:24 Искусственные нейронные сети timur.zhangirov +2 B 2021/02/09 12:24 Искусственные нейронные сети timur.zhangirov +123 B 2021/02/09 12:19 Искусственные нейронные сети timur.zhangirov -436 B 2020/08/27 09:51 Искусственные нейронные сети – external edit 127.0.0.1 ±0 B 2020/04/20 19:57 Искусственные нейронные сети timur.zhangirov +206 B 2020/04/04 21:07 Искусственные нейронные сети timur.zhangirov +70 B 2020/04/04 09:50 Искусственные нейронные сети timur.zhangirov +70 B 2020/04/02 14:40 Искусственные нейронные сети timur.zhangirov +513 B 2020/04/02 13:31 Искусственные нейронные сети timur.zhangirov +139 B 2020/03/24 16:54 Искусственные нейронные сети timur.zhangirov +71 B 2020/03/24 09:44 Искусственные нейронные сети timur.zhangirov +174 B Show differences between selected revisions less recent > > courses/artificial_neural_networks.txt · ",
                "Искусственные нейронные сети - "
            ]
        },
        {
            "name": "Базы знаний и экспертные системы",
            "url": "/doku.php/courses:knowledge_base_and_expert_system:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Базы знаний и экспертные системы  Курсы » Базы знаний и экспертные системы courses : knowledge_base_and_expert_system : start Table of Contents Базы знаний и экспертные системы Материалы Лабораторные работы Списки групп Базы знаний и экспертные системы Материалы Учебные материалы Лабораторные работы Лабораторная работа №1 : Изучение системы программирования Visual Prolog . Создание Пролог-программы с графическим интерфейсом Лабораторная работа №2 : Разработка и отладка простой программы на языке Visual Prolog Лабораторная работа №3 : Рекурсивные структуры данных ( списки ) Лабораторная работа №4 : Рекурсивные структуры данных ( деревья ) Лабораторная работа №5 : Разработка простой экспертной системы на языке Visual Prolog Списки групп 2019 ( 6381 ) courses/knowledge_base_and_expert_system/start.txt · ",
                "Базы знаний и экспертные системы - ",
                "",
                "Учебные материалы  Курсы » Базы знаний и экспертные системы » Учебные материалы courses : knowledge_base_and_expert_system : materials Table of Contents Учебные материалы Список литературы Основная литература Дополнительная литература Лекции Для оформления лабораторных работ Программное обеспечение Учебные материалы Список литературы Основная литература Рассел С , Норвиг П. Искусственный интеллект : современный подход , 2-е изд. , М . « Вильямс » , 2007 . – 1408 с. Адаменко А.Н. , Кучуков А.М . Логическое программирование и VisualProlog . СПб . : БХВ-Петербург , 2003 . Пантелеев М.Г. , Родионов С.В . Модели и средства построения экспертных систем : Учеб . пособие . СПб . : Изд-во СПбГЭТУ « ЛЭТИ » , 2003.– 68с . Базы знаний интеллектуальных систем / Т. А. Гаврилова , В. Ф. Хорошевский . – СПб . : Питер , 2001 . – 384 с. Стерлинг Л. , Шапиро Э. Искусство программирования на языке Пролог . М. : Мир , 1990 . Дополнительная литература Джексон П. Введение в экспертные системы : Уч . пособие . – М. : Изд . дом « Вильямс » , 2001 . – 624 с. Советов , Б. Я. Представление знаний в информационных системах : учеб . для вузов по направл . подгот . « Информ . системы и технологии » / Б. Я. Советов , В. В. Цехановский , В. Д. Чертовской . – М. : Академия , 2011 . – 143 с. Ручкин , В. Н. Универсальный искусственный интеллект и экспертные системы / В. Н. Ручкин , В. А. Фулин . – СПб . : БХВ-Петербург , 2009 . – 240 с. Джарратано , Д. Экспертные системы . Принципы разработки и программирование / Д. Джарратано , Г. Райли . – М. : Вильямс , 2007 . – 1152 с. Лекции Материалы лекций Для оформления лабораторных работ Для корректного оформления отчётов в формате .ODT в LibreOffice необходимо установить шрифты Times New Roman и Courier New . Это можно сделать , прописав в консоли ( для Ubuntu ) следующую команду : sudo apt install ttf-mscorefonts-installer Требования к оформлению научно-технических отчётов ( Распоряжение от 09.11.2015 № 3003 ) Шаблон оформления лабораторных работ ( формат .DOCX ) Шаблон оформления лабораторных работ ( формат .ODT ) Программное обеспечение Visual Prolog v5.2 Visual Prolog courses/knowledge_base_and_expert_system/materials.txt · ",
                "Лабораторная работа №1 : Изучение системы программирования Visual Prolog . Создание Пролог-программы с графическим интерфейсом  Курсы » Базы знаний и экспертные системы » Лабораторная работа №1 : Изучение системы программирования Visual Prolog . Создание Пролог-программы с графическим интерфейсом courses : knowledge_base_and_expert_system : lab1 Table of Contents Лабораторная работа №1 : Изучение системы программирования Visual Prolog . Создание Пролог-программы с графическим интерфейсом Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Содержание отчёта Лабораторная работа №1 : Изучение системы программирования Visual Prolog . Создание Пролог-программы с графическим интерфейсом Цель работы Изучение системы программирования Visual Prolog с последующим созданием Пролог-программы с графическим интерфейсом . Основные теоретические положения Visual Prolog – объектно-ориентированное расширение языка программирования PDC Prolog , развивавшегося из Turbo Prolog ( Borland ) , семейства Prolog , а также система визуального программирования датской фирмы Prolog Development Center . Visual Prolog автоматизирует построение сложных процедур и освобождает программиста от выполнения тривиальных операций . С помощью Visual Prolog проектирование пользовательского интерфейса и связанных с ним окон , диалогов , меню , строки уведомлений о состояниях и т. д. производится в графической среде . С созданными объектами могут работать различные Кодовые Эксперты ( Code Experts ) , которые используются для генерации базового и расширенного кодов на языке Prolog , необходимых для обеспечения их функционирования . Среда разработки приложений системы Visual Prolog включает текстовый редактор , различные редакторы ресурсов , средства разработки справочных систем в гипертекстовом представлении , систему отслеживания изменений , которая обеспечивает перекомпиляцию и перегенерацию только измененных ресурсов и модулей , ряд экспертов Кода , оптимизирующий компилятор , набор средств просмотра различных типов информации о проекте и отладчик . Полная интеграция всех средств обеспечивает повышение скорости разработки приложений . Полученные приложения являются исполняемыми .EXE программами . В коммерческой версии Visual Prolog 7.x возможно создание .DLL-файлов , в персональной версии такая возможность существовала вплоть до версии 5.x . Первая из возможностей , которые предоставляет IDE , заключается в управлении проектами . Поскольку среда рассчитана на создание достаточно масштабных приложений , то и средства управления файлами в рамках проекта приложения в ней представлены в достаточном для этого объёме . В среде есть встроенный редактор диалогов , который позволит организовать взаимодействие пользователя с программой при помощи графического интерфейса . Постановка задачи Ознакомится с системой программирования Visual Prolog создав простейшую Пролог-программу с графическим интерфейсом . Порядок выполнения работы Для создания нового приложения используется эксперт приложений , который вызывается в окне Application Expert из меню Project/New Project . Выполните эту команду , в появившемся окне задайте имя проекта graf_int , установите курсор в текстовое поле ниже . Имя файла с расширением * .vpr появится автоматически . Перейдите на вкладку VPI Options , установите флажок Tree Package , нажмите кнопку Create . Появится окно нового проекта . Создадим для примера диалоговое окно « Hello , world ! » . Для этого создадим в меню команду , которая будет активизировать это окно . В окне проекта нажмите кнопку Menu на левой панели инструментов . Отобразится список зарегистрированных в текущем проекте меню , дважды щелкните строку Task Menu для запуска редактора меню . Щелкните строку & Edit и нажмите кнопку New . В поле Text окна Menu Item Attributes запишите & Test и нажмите кнопку ОК . Заметьте , что константу id_test для пункта меню вводить не надо – она присваивается автоматически . Символ { & } используется для определения « горячих » клавиш . После того , как создан пункт меню Test , создайте подменю Hello , world ! Для этого в окне Тask Menu маркируйте строку & Test и нажмите кнопку Submenu . Аналогичным образом создайте команду подменю Hello world , для возврата нажмите кнопку Back . Добавьте самостоятельно еще одну команду подменю New string . Для того , чтобы проверить новое меню , нажмите кнопку Test . В результате меню Visual Prolog примет вид ( см . рис . ниже ) . Воспользуемся редактором VPI для создания диалогового окна Hello , world ! . Для этого нажмите кнопку Window на левой панели инструментов окна проекта . Дважды щелкните строку Task window . В окне Window Attributes нажмите кнопку Code Expert . Появится окно Dialog and Window Expert . В списке Event Type выберите строку Мenu , в списке Event or Item – строку id_Test_hello_world . Затем нажмите кнопку Add Clause . Это нужно для генерации Пролог-кода для данного события . После генерации кода кнопка изменит свой вид на Edit clause . Нажмите эту кнопку . Появится окно редактора кодов . Просмотрите только что сгенерированный код . Найдите в разделе кода , озаглавленного % BEGIN Task Window , id_Test_hello_world второй знак { ! } – знак отсечения . Поставьте перед ним курсор , вызовите контекстное меню , в котором выберите команду Insert/Predicate Call/Window , Dialog or Toolbar . В появившемся окне Insert Call of … выберите позицию списка dlg_Note и ниже наберите сообщение « hello world » включая кавычки , нажмите кнопку ОК . Запустите приложение кнопкой R на панели инструментов или командой Run . Появится приложение с заголовком окна graf_int , в котором , при выборе команды меню Test/Hello world , появляется окно с надписью hello world . Закройте окно приложения . Добавим к проекту новое окно . Предположим , что новое окно My window должно иметь новый исходный код , независимый от остальной части проекта . В Visual Prolog можно обрабатывать множество окон и диалоговых окон в одном и том же исходном модуле . В нашем случае мы создадим отдельный новый модуль . Для этого нажмите кнопку Module , затем кнопку New в окне проекта . Введите имя файла нового модуля , например My window , и нажмите кнопку Открыть . В появившемся окне нажмите ОК для принятия всех настроек автоматически . Просмотрите только что сгенерированный код . Для добавления окна к проекту воспользуйтесь кнопками Window , затем New в окне проекта . Появится окно Window Attributes . Задайте имя окна My window и нажмите кнопку ОК . Появятся заготовка окна и редактор окон ( после нажатия кнопки Code Expert ) . Появившиеся панели инструментов предназначены для создания рабочих элементов окна . В окне редактора выберите в выпадающем списке Module модуль , соответствующий имени окна , затем нажмите кнопку Default Code . Нажмите на кнопку Edit Code для изучения кода . Теперь , когда окно создано , его нужно активизировать . Добавим команду my window в меню Тest нашего проекта . Для этого нужно воспользоваться кнопкой Submenu в окне Task Menu ( см . выше ) . Активизируйте эксперта для нового пункта меню с помощью кнопок Window ( Task Window ) и Code Expert . Придайте окну Dialog and Window Expert вид , показанный на рисунке . Нажмите кнопки Add Clause и затем Edit Clause . Появится окно редактора кодов . Просмотрите только что сгенерированный код . Найдите в тексте кода соответствующий знак { ! } – знак отсечения . Поставьте перед ним курсор , вызовите контекстное меню , в котором выберите команду Insert/Predicate Call/Window , Dialog or Toolbar . В появившемся окне Insert Call of … выберите позицию списка User Defined Window ( в выпадающем списке будет только одна позиция – имя нашего окна My window ) нажмите кнопку ОК . Затем запустите приложение . Убедитесь в появлении новой команды меню , убедитесь , что новая команда работает . Добавим в новое окно какой-либо элемент графики , например , диагонали окна . Для этого предварительно нужно нажать кнопку Window и щелкнуть строку My window . Далее нужно вызвать окно редактора кода для окна my window . Воспользуемся кнопками Code Expert и Edit Code { в окне проекта } . Добавим в конец Пролог-программы следующий код : win_my_window_eh ( _Win , e_Update ( _ ) ,0 ) : - ! , RCT=win_GetClientRect ( _Win ) , RCT=rct ( _ , _ , R , B ) , draw_Line ( _Win , pnt ( 0,0 ) , pnt ( R , B ) ) , draw_Line ( _Win , pnt ( 0 , B ) , pnt ( R,0 ) ) , ! . Запустите проект , убедитесь , что окно отображается в виде , показанном на рисунке . Добавим в окно my window какой-либо управляющий элемент . Для этого выделите в кодах этого окна раздел диагоналей как комментарий – / * ... * / . Вернитесь к редактированию окна . Для установки в окно рабочих элементов воспользуйтесь панелью инструментов Controls ( см.п.8 ) . Щелкните на панели Controls кнопку PushButton , растяните рамку по размерам будущей кнопки в заготовке окна . При отпускании кнопки мыши появится окно PushButton Attirutes . Задайте значения для кнопки : в поле Text – Start , в поле Constant – idc_startstop . Аналогично установите в окне объект CheckBox , задайте имя – Show Date , константу - idc_show_date . Вызовите окно редактора кода для окна , обратите внимание на то , что Пролог автоматически добавил строки для вызова 2-х новых элементов . Добавьте код для запуска/остановки таймера : facts - clock timer ( window , long TimerId ) predicates startTimer ( window ) stopTimer ( window ) clauses startTimer ( Win ) : -TimerId=timer_Set ( Win,1000 ) , assert ( timer ( Win , TimerId ) ) . stopTimer ( Win ) : -retract ( timer ( Win , TimerId ) ) , ! , timer_Kill ( TimerId ) . Добавьте код обработчика событий для кнопки : ( предикат win_GetText возвращает надпись на кнопке ; предикат win_SetText устанавливает новый текст для кнопки ) . win_my_window_eh ( _Win , e_Control ( idc_startstop , _CtrlType , _CtrlWin , _CtlInfo ) ,0 ) : - Title=win_GetText ( _CtrlWin ) , Title = `` Start '' , startTimer ( _Win ) , win_SetText ( _CtrlWin , '' Stop '' ) , ! . win_my_window_eh ( _Win , e_Control ( idc_startstop , _CtrlType , _CtrlWin , _CtlInfo ) ,0 ) : - ! , stopTimer ( _Win ) , win_SetText ( _CtrlWin , '' Start '' ) , ! . win_my_window_eh ( _Win , e_Update ( _ ) ,0 ) : - _CtrlWin =win_GetCtlHandle ( _Win , idc_show_date ) , _IsChecked = win_IsChecked ( _CtrlWin ) , _IsChecked = checkbox_on , ! , win_Clear ( _Win , color_White ) , RCT=win_GetClientRect ( _Win ) , time ( Hours , Minutes , Seconds , _ ) , date ( Year , Month , Day ) , format ( Str , '' % / % / % - % 02 : % 02 : % 02 '' , Year , Month , Day , Hours , Minutes , Seconds ) , draw_TextInRect ( _Win , RCT , Str , -1 , [ dtext_center , dtext_vcenter , dtext_singleline ] ) , ! . win_my_window_eh ( _Win , e_Update ( _ ) ,0 ) : - ! , win_Clear ( _Win , color_White ) , RCT=win_GetClientRect ( _Win ) , time ( Hours , Minutes , Seconds , _ ) , format ( Str , '' % 02 : % 02 : % 02 '' , Hours , Minutes , Seconds ) , draw_TextInRect ( _Win , RCT , Str , -1 , [ dtext_center , dtext_vcenter , dtext_singleline ] ) , ! . win_my_window_eh ( _Win , e_Timer ( _TimerId ) ,0 ) : - ! , win_Invalidate ( _Win ) , ! . win_my_window_eh ( _Win , e_Control ( idc_show_date , _CtrlType , _CtrlWin , _CtlInfo ) ,0 ) : - ! , win_Invalidate ( _Win ) , ! . Запустите проект , убедитесь в его работе . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Пошаговая реализация программы с необходимыми рисунками и комментариями . Общий вывод по проделанной работе . Код программы . courses/knowledge_base_and_expert_system/lab1.txt · ",
                "Лабораторная работа №2 : Разработка и отладка простой программы на языке Visual Prolog  Курсы » Базы знаний и экспертные системы » Лабораторная работа №2 : Разработка и отладка простой программы на языке Visual Prolog courses : knowledge_base_and_expert_system : lab2 Table of Contents Лабораторная работа №2 : Разработка и отладка простой программы на языке Visual Prolog Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Лабораторная работа №2 : Разработка и отладка простой программы на языке Visual Prolog Цель работы Получение необходимых навыков для разработки и отладки простейшей программы на языке Visual Prolog . Основные теоретические положения Пролог ( англ . Prolog ) – язык и система логического программирования , основанные на языке предикатов математической логики дизъюнктов Хорна , представляющей собой подмножество логики предикатов первого порядка . Prolog является декларативным языком программирования : логика программы выражается в терминах отношений , представленных в виде фактов и правил . Для того чтобы инициировать вычисления , выполняется специальный запрос к базе знаний , на которые система логического программирования генерирует ответы « истина » и « ложь » . Для обобщённых запросов с переменными в качестве аргументов созданная система Пролог выводит конкретные данные в подтверждение истинности обобщённых сведений и правил вывода . Иначе говоря , предикат можно определить как функцию , отображающую множество произвольной природы в множество булевых значений { ложно , истинно } . Задача пролог-программы заключается в том , чтобы доказать , является ли заданное целевое утверждение следствием из имеющихся фактов и правил . Язык программирования , реализованный в Visual ( а ранее в Turbo ) Prolog ' е отличается от классического пролога тем , что он основан на строгой статической типизации . В него также добавлены средства объектно-ориентированного программирования , анонимные предикаты ( лямбда-предикаты ) , факты-переменные и разрушающее присваивание для них , аргументы-домены ( Generic Interfaces and Classes ) и параметрический полиморфизм , мониторы ( Monitors with guards ) , императивные конструкции ( foreach , if ... then ... else ) , коллекторы списков ( [ ... || ... ] ) и пр . Постановка задачи Разработать программу на языке Visual Prolog , описывающие родственные связи между собаками , а также реализовать генеалогическое древо Вашей семьи . Порядок выполнения работы Загрузите систему программирования Visual Prolog . Установите в опциях среды шрифт с русской раскладкой Options/Global/Environment : На карточке Fonts поменяйте шрифт окна редактора Editor Windows на Courier с раскладкой Кириллица . Либо воспользуйтесь кнопкой F ( Font ) на панели инструментов . Выполните команду Project/New Project . Определите в качестве Project Name имя DOG и укажите главный каталог ( Base Directory ) в личной папке на диске . Нажмите кнопку Create . В созданном проекте удалите модуль Vpitools.pro . Откройте модуль DOG.PRO , удалите все содержимое и наберите текст программы : domains name=string predicates dog ( name ) parent ( name , name ) clauses dog ( X ) : - parent ( X , Y ) , dog ( Y ) . dog ( `` Rex '' ) . parent ( `` Jack '' , `` Rex '' ) . goal dog ( Who ) . Установите опции компилятора Options/Project/Compiler Options : на карточке Output установите Generate Debug Information и Disable Optimizations , на карточке Warnings установите Nondeterm , снимите Unused Variables и Unused Predicates . Запустите программу на выполнение , нажав кнопку Test Goal на панели инструментов . Объясните полученный результат . Выполните компиляцию ( Compile Module ) , построение ( Build ) и запустите отладчик Debug . В среде отладчика включите окна просмотра переменных ( Local Variables ) и стека вызовов ( Call Stack ) . Произведите пошаговую прокрутку программы , нажимая на кнопку Trace Into на панели инструментов . Запишите и проанализируйте трассу выполнения программы по содержимому окон Call Stack и Variables For Current Clause для одного решения . Напишите на языке Visual Prolog программу DOG1 , описывающую родственные связи собак в соответствии с вариантом задания . Программа должна использовать предикаты dog и parent из программы DOG.PRO и содержать не менее двух правил . Произведите отладку программы в системе Visual Prolog на следующих запросах : Кто является собакой ? Кто является родителем ? Кто является внуком ( внучкой ) ? Balto – собака ? Кто родитель собаки Balto ? Кому Balto является родителем ? Постройте трассу выполнения программы для каждого запроса . Задание для самостоятельной работы . Используя предикаты parent ( symbol , symbol ) , man ( symbol ) , woman ( symbol ) , married ( symbol , symbol ) , записать факты , описывающие Вашу семью . Написать на языке Visual Prolog программу FAMILY , содержащую не менее 8 правил вывода для любых родственных отношений в Вашей семье ( например : мать , отец , сестра , брат , племянница , племянник , тетя , дядя , внучка , внук , бабушка , дедушка , двоюродная сестра , двоюродный брат и т.д. ) . Отладить программу на 5-6 различных запросах . Варианты заданий Варианты к лабораторной работе №2 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Объяснение результатов выполнения программы DOG.PRO . Трасса выполнения программы DOG.PRO и пояснения к ней . Трассы выполнения запросов программы DOG1.PRO и объяснение результатов их выполнения . Описание родственных связей в семье ( в виде дерева ) . Результаты работы программы FAMILY.PRO для 5-6 разных запросов . Общий вывод по проделанной работе . Коды программ . courses/knowledge_base_and_expert_system/lab2.txt · ",
                "Лабораторная работа №3 : Рекурсивные структуры данных ( списки )  Курсы » Базы знаний и экспертные системы » Лабораторная работа №3 : Рекурсивные структуры данных ( списки ) courses : knowledge_base_and_expert_system : lab3 Table of Contents Лабораторная работа №3 : Рекурсивные структуры данных ( списки ) Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Лабораторная работа №3 : Рекурсивные структуры данных ( списки ) Цель работы Изучение и исследование рекурсивных структур данных в языке Visual Prolog на примере списков . Основные теоретические положения Пролог позволяет определить и использовать рекурсивные типы данных . Примерами рекурсивных типов данных служат списки и деревья . Список – это объект данных , содержащий конечное число других объектов ( элементов списка ) . Список , содержащий числа 1 , 2 и 3 , записывается следующим образом : [ 1 , 2 , 3 ] . Для объявления списка используется следующее описание домена : domains integerlist=integer * Список является рекурсивным составным объектом , он состоит из двух частей : головы списка – первого элемента списка ; хвоста списка – списка , включающего все последующие элементы . Пусть имеется список [ 1| [ 2 , 3 ] ] . Тогда головой списка будет элемент 1 , а хвостом [ 2 , 3 ] . Так как список имеет рекурсивную составную структуру , для работы со списками используется рекурсия . Пример 1 . Вывод элементов списка . domains integerlist=integer * predicates printlist ( integerlist ) clauses printlist ( [ ] ) : - ! . % Для пустого списка ничего не делать printlist ( [ H|T ] ) : - write ( H ) , nl , printlist ( T ) . % Для непустого списка % отделить голову , % вывести ее , % продолжить вывод для % хвоста списка Пример 2 . Необходимо преобразовать список , элементами которого являются целые числа , инвертируя знак элементов списка , то есть положительные числа преобразовать в отрицательные , отрицательные в положительные , для нулевых значений никаких действий не предпринимать . Придется рассмотреть два случая – для непустого и пустого списков . Преобразование пустого списка дать в результате также пустой список . Если же список не пуст , то следует рекурсивно выполнять отделение головы списка , ее обработку и рассматривать полученный результат как голову списка-результата . domains intlist=integer * predicates inverting ( intlist , intlist ) processing ( integer , integer ) clauses % обработка пустого списка дает , в результате , тоже пустой список inverting ( [ ] , [ ] ) : - ! . % если список непустой , отделить голову , обработать ее , % и добавить в качестве головы списка-результата inverting ( [ H | T ] , [ Inv_H | Inv_T ] ) : - processing ( H , Inv_H ) , inverting ( T , Inv_T ) . % предикат processing выполняет действия по обработке элемента списка в % зависимости от его знака , предикат имеет два предложения , % так как нужно рассмотреть два варианта : ненулевое и нулевое значения processing ( 0 , 0 ) : - ! . processing ( H , Inv_H ) : - Inv_H=-H. goal inverting ( [ -2 , -1 , 0 , 1 , 2 ] , Inv_List ) , write ( `` Inv_List= '' , Inv_List ) . Результат работы программы : Inv_List= [ 2 , 1 , 0 , -1 , -2 ] Постановка задачи Реализовать на языке Visual Prolog программу , выполняющую заданные операции над списками в соответствии с индивидуальным вариантом задания . Порядок выполнения работы Напишите на языке Visual Prolog программу , реализующую заданные операции над списками в соответствии с индивидуальным вариантом задания . Произведите отладку программы в системе Visual Prolog для запросов на решение прямой и обратной задачи и задачи на перебор вариантов . Постройте трассу программы при выполнении каждого запроса . Варианты заданий Варианты к лабораторной работе №3 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Трассы выполнения запросов и объяснение результатов их выполнения . Общий вывод по проделанной работе . Код программы . courses/knowledge_base_and_expert_system/lab3.txt · ",
                "Лабораторная работа №4 : Рекурсивные структуры данных ( деревья )  Курсы » Базы знаний и экспертные системы » Лабораторная работа №4 : Рекурсивные структуры данных ( деревья ) courses : knowledge_base_and_expert_system : lab4 Table of Contents Лабораторная работа №4 : Рекурсивные структуры данных ( деревья ) Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Лабораторная работа №4 : Рекурсивные структуры данных ( деревья ) Цель работы Изучение и исследование рекурсивных структур данных в языке Visual Prolog на примере деревьев . Основные теоретические положения Деревья , также как и списки , являются рекурсивным типом данных . Дерево – это структура данных , которая может быть разделена на корень дерева , левое и правое поддеревья . Так как левое и правое поддеревья в свою очередь являются деревьями , структура рекурсивна . Кроме того , дерево является еще и составным объектом данных . Дерево , которое имеет только два поддерева , называется двоичным или бинарным . В том случае , если для каждого корня дерева выполняется условие , при котором значение , находящееся в корне дерева меньше значения , находящегося в корне левого поддерева и больше значения , находящегося в корне правого поддерева , двоичное дерево называется упорядоченным . В Visual Prolog можно определить дерево следующим образом : DOMAINS treetype=tree ( integer , treetype , treetype ) ; empty ( ) Такое определение говорит о том , что дерево является составным объектом , состоящим из трех составных частей : корня , принадлежащего домену integer и двух поддеревьев , принадлежащих домену treetype , так как именно этот домен и описывает структуру данных типа дерево . Так как дерево является составным объектом , его составные части объединяет функтор tree . Кроме того , дерево может находиться в двух состояниях : быть непустым ( иметь хотя бы один корень ) или пустым ( не иметь ни одного корня ) . Пустое дерево описывается функтором empty без параметров . Если у функтора нет параметров , пустые скобки можно не указывать и записывать только имя функтора . Имена функторов tree и empty , домена treetype выбраны произвольно . Такое определение позволяет записать следующую структуру данных : tree ( 5 , tree ( 3 , tree ( 6 , empty , empty ) , tree ( 4 , empty , empty ) ) , tree ( 10 , tree ( 2 , empty , empty ) , tree ( 8 , empty , empty ) ) ) Одной из наиболее частых операций с деревом является обход узлов дерева и выполнение некоторых действий с ними . Например , вывод значений всех корней дерева . Способ решения этой задачи можно описать следующим образом : если дерево пустое , корня в дереве нет , нет и значения корня для вывода , не выполнять никаких действий ; если дерево непустое , то разделить дерево на корень , левое и правое поддеревья , выполнить вывод значения , находящегося в корне дерева , затем обработать левое и правое поддеревья . Каждое из условий в описании задачи соответствует предложению в программе Visual Prolog . DOMAINS treetype =tree ( integer , treetype , treetype ) ; empty ( ) PREDICATES print_tree ( treetype ) CLAUSES % дерево пусто , поэтому никакие действия не выполняются print_tree ( empty ) : - ! . % дерево непусто , поэтому дерево разбивается на три составные части , % сначала выводится корень , затем обрабатываются левое и правое % поддеревья print_tree ( tree ( Root , Left , Right ) ) : - write ( Root ) , nl , print_tree ( Left ) , print_tree ( Right ) . OAL print_tree ( tree ( 5 , tree ( 3 , tree ( 6 , empty , empty ) , tree ( 4 , empty , empty ) ) , tree ( 10 , tree ( 2 , empty , empty ) , tree ( 8 , empty , empty ) ) ) ) . Следует отметить , что в большинстве случает рекурсия , используемая при работе с деревьями , хвостовой не является , так приходится обрабатывать левое и правое поддеревья , что дает две рекурсивные цели в одном предложении и , соответственно , не выполняется первое правило хвостовой рекурсии - рекурсивный вызов должен быть последней целью в хвостовой части правила вывода . Постановка задачи Реализовать на языке Visual Prolog программу , выполняющую заданные операции над деревьями в соответствии с индивидуальным вариантом задания . Порядок выполнения работы Напишите на языке Visual Prolog программу , реализующую заданные операции над списками в соответствии с индивидуальным вариантом задания . Произведите отладку программы в системе Visual Prolog . Постройте трассу программы при выполнении каждого запроса . Варианты заданий Варианты к лабораторной работе №4 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Трассы выполнения запросов и объяснение результатов их выполнения . Общий вывод по проделанной работе . Код программы . courses/knowledge_base_and_expert_system/lab4.txt · ",
                "Лабораторная работа №5 : Разработка простой экспертной системы на языке Visual Prolog  Курсы » Базы знаний и экспертные системы » Лабораторная работа №5 : Разработка простой экспертной системы на языке Visual Prolog courses : knowledge_base_and_expert_system : lab5 Table of Contents Лабораторная работа №5 : Разработка простой экспертной системы на языке Visual Prolog Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Лабораторная работа №5 : Разработка простой экспертной системы на языке Visual Prolog Цель работы Реализация и отладка простой экспертной системы на языке Visual Prolog . Основные теоретические положения Экспертные системы ( ЭС ) – это системы искусственного интеллекта ( интеллектуальные системы ) , предназначенные для решения плохо формализованных и слабо структурированных задач в определенных проблемных областях на основе заложенных в них знаний специалистов-экспертов . В настоящее время ЭС внедряются в различные виды человеческой деятельности , где использование точных математических методов и моделей затруднительно или вообще невозможно . К ним относятся : медицина , обучение , поддержка принятия решений и управление в сложных ситуациях , различные деловые приложения и т.д . Основными компонентами ЭС являются рабочая память , называемая также базой данных ( БД ) , база знаний ( БЗ ) , блоки поиска решения , объяснения , извлечения и накопления знаний , обучения и организации взаимодействия с пользователем . Рабочая память , БЗ и блок поиска решений образуют ядро ЭС . База данных ( рабочая память ) предназначена для хранения исходных и промежуточных данных решаемой в текущий момент задачи . Этот термин совпадает по названию , но не по смыслу с термином , используемым в информационно-поисковых системах ( ИПС ) и системах управления базами данных ( СУБД ) для обозначения всех данных ( в первую очередь долгосрочных ) , хранимых в системе . База знаний в ЭС предназначена для хранения долгосрочных данных , описывающих рассматриваемую предметную область ( а не текущих данных ) , и правил , описывающих целесообразные преобразования данных этой области . Для конструирования ЭС используются различные инструментальные средства : универсальные языки программирования , языки искусственного интеллекта , инструментальные системы и среды и системы-оболочки . Системы-оболочки являются наиболее простым средством формализации ( автоформализации ) экспертных знаний , практически не требующие участия посредников в лице инженера по знаниям или программиста при их использовании . Инженер по знаниям только помогает эксперту выбрать наиболее подходящую для его проблемной области оболочку . Рассматриваемая в данной работе экспертная система функционирует следующим образом . Например , при работе с предметной областью « Бытовая техника » , определяется предикат technique_is ( string ) , позволяющий идентифицировать бытовую технику , которая более всего удовлетворяет указанным пользователем признакам . При этом БЗ экспертной системы задается перечислением свойств объектов , которые у них имеются или же отсутствуют : technique_is ( `` CD-плейер '' ) : - it_is ( `` аудио '' ) , positive ( `` работает с '' , `` CD-дисками '' ) , negative ( `` имеет '' , `` динамик '' ) . Предикаты positive и negative необходимы для того , чтобы запросить у пользователя ответ о наличии у объекта какого-то свойства и сохранить этот ответ в рабочей памяти : positive ( X , Y ) : - xpositive ( X , Y ) , ! . positive ( X , Y ) : - not ( xnegative ( X , Y ) ) , ask ( X , Y , Answer ) , remember ( X , Y , Answer ) , Answer = yes . negative ( X , Y ) : - xnegative ( X , Y ) , ! . negative ( X , Y ) : - not ( xpositive ( X , Y ) ) , ask ( X , Y , Answer ) , remember ( X , Y , Answer ) , Answer = no . ask ( X , Y , yes ) : - write ( X , '' `` , Y , '' ? `` ) , readln ( Reply ) , frontchar ( Reply , ' y ' , _ ) , ! . ask ( _ , _ , no ) . remember ( X , Y , yes ) : - assertz ( xpositive ( X , Y ) ) . remember ( X , Y , no ) : - assertz ( xnegative ( X , Y ) ) . Два встроенных предиката asserta и assertz позволяют добавлять новые утверждения в базу данных . Оба предиката действуют в точности одинаковым образом , за тем исключением , что asserta добавляет утверждение в начало базы данных , в то время как assertz ( или assert ) добавляет утверждение в ее конец . Постановка задачи Разработать в среде Visual Prolog простую ЭС в соответствии с вариантом задания либо предложив свою предметную область , предварительно согласовав её с преподавателем . Порядок выполнения работы Разработать простую ЭС в соответствии с вариантом задания либо согласовав предметную область с преподавателем . Произвести отладку ЭС в среде Visual Prolog для различных наборов ответов пользователя на задаваемые экспертной системой вопросы . Варианты заданий № варианта Описание 1 Экспертная система с обратной цепочкой рассуждений для определения заболевания пациента . Количество возможных видов заболеваний – 3 . Количество признаков заболеваний – 15 . Максимальная глубина дерева определения заболевания по соответствующим признакам – 4 . 2 Экспертная система с прямой цепочкой рассуждений для определения заболевания пациента . Количество возможных видов заболеваний – 15 . Количество признаков заболеваний – 7 . Максимальная глубина дерева определения заболевания по соответствующим признакам – 4 . 3 Экспертная система с обратной цепочкой рассуждений для определения причины неработоспособности компьютера . Количество возможных причин неработоспособности – 4 . Количество признаков неработоспособности – 15 . Максимальная глубина дерева определения причины неработоспособности по соответствующим признакам – 3 . 4 Экспертная система с прямой цепочкой рассуждений для определения причины неработоспособности компьютера . Количество возможных причин неработоспособности – 12 . Количество признаков неработоспособности – 6 . Максимальная глубина дерева определения причины неработоспособности по соответствующим признакам – 4 . 5 Экспертная система с обратной цепочкой рассуждений для определения причины , по которой не заводится автомобиль . Количество возможных причин – 4 . Количество признаков , позволяющих определить причину – 11 . Максимальная глубина дерева определения причины по соответствующим признакам – 3 . 6 Экспертная система с прямой цепочкой рассуждений для определения причины , по которой не заводится автомобиль . Количество возможных причин – 6 . Количество признаков , позволяющих определить причину – 7 . Максимальная глубина дерева определения причины по соответствующим признакам – 5 . 7 Экспертная система с обратной цепочкой рассуждений для выработки рекомендаций студенту по планированию его времени для успешной сдачи экзаменов . Количество возможных рекомендаций – 4 . Количество факторов , влияющих на выработку рекомендации – 11 . Максимальная глубина дерева определения причины по соответствующим факторам – 4 . 8 Экспертная система с прямой цепочкой рассуждений для выработки рекомендаций студенту по планированию его времени для успешной сдачи экзаменов . Количество возможных рекомендаций – 10 . Количество факторов , влияющих на выработку рекомендации – 4 . Максимальная глубина дерева определения причины по соответствующим факторам – 5 . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Результаты работы программы для различных исходных ситуаций ( скриншоты экрана с результатами работы программы ) . Объяснения результатов программы Общий вывод по проделанной работе . Код программы . courses/knowledge_base_and_expert_system/lab5.txt · ",
                "✎ Базы знаний и экспертные системы  Курсы » Базы знаний и экспертные системы courses : knowledge_base_and_expert_system : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Базы знаний и экспертные системы ====== ===== Материалы ===== * [ [ materials ] ] ===== Лабораторные работы ===== * [ [ lab1 ] ] * [ [ lab2 ] ] * [ [ lab3 ] ] * [ [ lab4 ] ] * [ [ lab5 ] ] ===== Списки групп ===== * [ [ https : //docs.google.com/spreadsheets/d/1sp5rgMLyLQUwq44hzPBUjB_TZ87Vd019mG9-AOSXyWk/edit ? usp=sharing|2019 ( 6381 ) ] ] courses/knowledge_base_and_expert_system/start.txt · ",
                "Базы знаний и экспертные системы - Old revisions  Курсы » Базы знаний и экспертные системы courses : knowledge_base_and_expert_system : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Базы знаний и экспертные системы ( external edit ) ( current ) 2020/08/27 09:51 Базы знаний и экспертные системы – external edit 127.0.0.1 ±0 B 2020/07/19 12:32 Базы знаний и экспертные системы andrey.suchkov ±0 B 2020/06/03 09:22 Базы знаний и экспертные системы – [ Списки групп ] andrey.suchkov +16 B 2019/09/26 17:14 Базы знаний и экспертные системы – ↷ Links adapted because of a move operation andrey.suchkov -204 B 2019/09/26 17:14 Базы знаний и экспертные системы – ↷ Page moved and renamed from courses : knowledge_base_and_expert_system to courses : knowledge_base_and_expert_system : start andrey.suchkov +600 B 2019/09/15 08:56 Базы знаний и экспертные системы – [ Описание лабораторных работ ] andrey.suchkov -63 B 2019/09/15 08:55 Базы знаний и экспертные системы – [ Сроки сдачи лабораторных работ ] andrey.suchkov -231 B 2019/09/05 15:49 Базы знаний и экспертные системы – [ Описания лабораторных работ ] andrey.suchkov ±0 B 2019/09/04 09:28 Базы знаний и экспертные системы – [ Лабораторные работы ] andrey.suchkov +63 B 2019/09/02 17:57 Базы знаний и экспертные системы – [ Лабораторные работы ] andrey.suchkov +232 B 2019/08/23 21:08 Базы знаний и экспертные системы – [ Лабораторные работы ] andrey.suchkov +188 B 2019/07/26 11:48 Базы знаний и экспертные системы andrey.suchkov +157 B 2019/07/20 19:46 Базы знаний и экспертные системы andrey.suchkov +179 B 2019/07/20 19:44 Базы знаний и экспертные системы – created andrey.suchkov +75 B Show differences between selected revisions courses/knowledge_base_and_expert_system/start.txt · ",
                "Базы знаний и экспертные системы - "
            ]
        },
        {
            "name": "Научно-исследовательская практика",
            "url": "/doku.php/start:research_practice_3rd_course",
            "date": "\"2024/03/05 13:46\"",
            "data": [
                "Научно-исследовательская практика  МОЭВМ Вики » Научно-исследовательская практика start : research_practice_3rd_course Научно-исследовательская практика В рамкой данной практики студенты в командах по три человека выполняют подробный обзор одной научной статьи , результатом обзора является отчет . В этой практике участвуют все студенты без исключения ( даже те , кто уже себе нашел проект для летней производственной практики ) . Основные ссылки Важные даты в рамках практики Описание заданий на практику Оценивание практики Таблица с результатами Список статей для обзора Форма выбора статей и распределения по командам - заполняет ОДИН участник команды Репозиторий практики start/research_practice_3rd_course.txt · ",
                "Научно-исследовательская практика - ",
                "",
                "Даты и сроки в рамках Научно-исследовательской практики  МОЭВМ Вики » Научно-исследовательская практика » Даты и сроки в рамках Научно-исследовательской практики start : research_practice_3rd_course : deadlines Даты и сроки в рамках Научно-исследовательской практики Основные даты практики указаны в таблице ниже Даты Событие Комментарий 05.03.2024 Рассылка статей для ознакомления 06.03.2024 - 07.03.2024 12:00 Открытие формы выбора / Закрытие формы выбора Заполнение формы 07.03.2024 17:00 Публикация распределения Начало работы 11.03.2024 Рассылка приглашений в репозиторий 18.03.2024 Дедлайн отправки 1го задания Отправка заданий 22.03.2024 Дедлайн исправлений 1го задания 08.04.2024 Дедлайн отправки 2го задания 12.04.2024 Дедлайн исправлений 2го задания 22.04.2024 Дедлайн отправки 3го задания 26.04.2024 Дедлайн исправлений 3го задания 13.05.2024 Дедлайн индивидуальных тренировок Закрытие доступа к инд . тренировкам , выгрузка результатов start/research_practice_3rd_course/deadlines.txt · ",
                "Задания в рамках Научно-исследовательской практики  МОЭВМ Вики » Научно-исследовательская практика » Задания в рамках Научно-исследовательской практики start : research_practice_3rd_course : tasks Table of Contents Задания в рамках Научно-исследовательской практики Правила работы с репозиторием Проверка и оценивание заданий Задание 1 Раздел `` Поставленная цель и задачи '' Раздел `` Тематика статьи '' Раздел `` Методы обоснования '' Оценивание задания 1 Задание 2 Раздел `` Характеристика используемых данных '' Раздел `` Характеристика выводов '' Оценивание задания 2 Задание 3 Отчёт Презентация Оценивание задания 3 Индивидуальная тренировка публичного выступления Задания в рамках Научно-исследовательской практики Все задания предоставляются в виде Pull Request в репозитории практики . Форматирование текста / формат файлов с выполненными заданиями - MarkDown Подробнее по используемому формату MD https : //guides.github.com/features/mastering-markdown/ Правила работы с репозиторием Каждая команда работает в отдельной ветке , название которой соответствует шаблону : < номер_статьи > _ < номер_группы > _ < фамилии_участников ( транслитом ) > Например : 1_0303_Ivanov_Ivanova_Ivanov , 21_0303_0381_Ivanov_Ivanova_Ivanov В ветке команды создайте каталог с названием , совпадающим с названием ветки , в нём же размещайте соответствующие файлы заданий Файлы заданий необходимо именовать по шаблону taskX.md , где X - номер задания , если в самом задании не сказано иного . Создание Pull Request подразумевает готовность заданий к проверке ( дальнейшие изменения и коммиты до проверки преподавателем не допускаются ) Шаблон именования Pull Request : < номер_статьи > _ < номер_группы > _ < фамилии_участников ( транслитом ) > _task < номер_задания > Например : 1_0303_Ivanov_Ivanova_Ivanov_task1 , 21_0303_0381_Ivanov_Ivanova_Ivanov_task3 Pull Request мержат только преподаватели Отслеживайте комментарии к вашим PR и оперативно их исправляйте После исправления комментариев ставьте метку “ check needed ” Проверка и оценивание заданий Каждое задание проверяется в три этапа ( в идеале за два ) : Автоматическая проверка ( “ грубая ” проверка содержания вашего задания ) Проверка форматирования файла задания Проверка наличия необходимых разделов Проверка на наличие запрещенных слов Примечание : проверка запускается при создании/редактировании файлов PR ; без прохождения данной проверки PR считается некорректным и не проходит на следующие этапы проверки . Проверка преподавателем Вводные : автоматическая проверка пройдена Проверка содержательной части задания . Параметры/критерии оценивания указаны в заданиях Повторная проверка преподавателем Вводные : Задание проверено преподавателем первый раз и отправлено на доработку Исправления присланы до дедлайна исправлений соответствующего задания , иначе - не проводится ( итоговые баллы за задание = баллы за первую проверку ) Результат : баллы после данной проверки = итоговые баллы за задание ( даже если они стали ниже , а такое вполне возможно ) Задание 1 Файл с результатом выполнения задания должен содержать разделы , описанные ниже и раскрывающие соответствующую составляющую обозреваемой статьи . В примечаниях к содержанию разделов указаны подсказки по выполнению и частые ошибки , допускаемые студентами при анализе научных статей . Раздел `` Поставленная цель и задачи '' Опишите в данном разделе : Цель исследования Приведите явную формулировку цели исследования Примечание : цель исследования - конечный результат работы ( один ) ; то чего хотели добиться авторы , когда начинали свою работу ( “ исследовать взаимосвязь … ” , “ увеличить точность … ” и т.д . ) , зачастую явно указывается авторами ( “ целью работы является … ” ) . Важно понимать , что цель исследования - конкретный результат , поэтому её формулировка должна полностью отражать замыслен авторов : например , для темы статьи “ Анализ возможности применения модели ИИ DobermannAI для обработки физиологических данных мопсов ” , целью может являться , например , “ проверка применимости модели ИИ DobermannAI для обработки физиологических данных мопсов ” / “ использование модели ИИ DobermannAI на физиологических данных мопсов ” , но никак не “ анализ физиологических данных мопсов ” / “ применимость модели ИИ для обработки физиологических данных ” и т.д . Кроме того , словосочетания , представляющие из себя перечисление задач авторов , не являются целью . Например , “ целью авторов данной работы был сбор данных , анализ и обработка результатов ” - не формулировка цели . Список задач исследования Приведите формулировки задач исследования и опишите , как и в каких разделах раскрывается каждая из задач - укажите не только номер и название раздела , но и краткое изложение того , что именно сделано в данном разделе ( и почему вы считаете , что это относится к данной задаче ) Примечание : задачи исследования - это план , которому следуют авторы для достижения поставленной цели ; список задач , описывающих , что конкретно будет делаться в работе ( как будут собираться данные , какие будут использоваться и т.д. ) . Помните , что задачи — это « большие разделы » работы , которые отражают общую структуру исследования . Раздел `` Тематика статьи '' Опишите в данном разделе : Области науки , в которой принадлежит статья ( в какой области проводятся исследования ) Приведите обоснование выбранной области ( цитата/раздел самой статьи , проводимые эксперименты , исследуемые данные и др . ) Примечание : тематика статьи ! = тема статьи Например , если ваша статья посвящена разработке ПО для анализа физиологических данных добермана , то тематика статьи может быть “ обработка физиологических данных породы собак ” , но никак не “ разработка ПО ” или “ доберман ” . Также стоит помнить о конкретике при описании области , например , область “ обработки изображений ” - стоит уточнить какая/для чего/где ( обработок изображений много , больше , чем вы можете себе представить ) . Раздел `` Методы обоснования '' Опишите в данном разделе : Методы , которые использовались авторами для обоснования достигнутых результатов и/или выводов , приведите цитаты/ссылки на разделы статьи , в которых эти методы применяются . Примечание : методы обоснования - это , то каким образом авторы доказали/подкрепили своё исследование/результаты - например , с помощью экспериментов ( натурный , симуляционный , пр . ) , наблюдений , анализа данных и др . Оценивание задания 1 Максимальное количество баллов за задание 1 - 10 баллов . В случае опоздания ( задание прислано после дедлайна ) , а также плагита/полного/частичного перевода статьи ( при неисправлении проблемных мест ) - полученные баллы за задание умножаются на 0.6 с округлением до меньшего целого . Баллы выставляются за каждый раздел в зависимости от полноты раскрытия его содержимого Раздел “ Поставленная цель и задачи ” - 0-6 баллов Приведена корректная формулировка цели - 2 балла Приведен корректный список задач - 2 балла Приведено описание раскрытия задач в разделах статьи - 2 балла Раздел “ Тематика статьи ” - 0-2 балла Приведена область науки - 1 балл Приведено подтверждение области - 1 балл Раздел “ Методы обоснования ” - 0-2 балла Приведены методы - 1 балл Приведено подтверждение методов - 1 балл Задание 2 Файл с результатом выполнения задания должен содержать разделы , описанные ниже и раскрывающие соответствующую составляющую обозреваемой статьи . В примечаниях к содержанию разделов указаны подсказки по выполнению и частые ошибки , допускаемые студентами при анализе научных статей Раздел `` Характеристика используемых данных '' Опишите в данном разделе : Методы исследования и обработки данных Приведите описание используемых данных и их характеристики , способы обработки измерений ( результатов эксперимента/ используемых данных ) , добавьте описание правомерности выводов по итогам исследования . Примечание : описание приведенных пунктов должно быть полным и исчерпывающим , чтобы читатель вашей работы мог чётко понимать с чем и как работали авторы статьи Например , если в работе использовались физиологические данные 100 доберманов - опишите конкретно , какие это данные , что они из себя представляют ( вплоть до конкретных показателей , типа данных и пр . ) , как/кем были собраны . Если используется какой-нибудь датасет - опишите его характеристики , приведите ссылки на него / его авторов . Раздел `` Характеристика выводов '' Опишите в данном разделе : Соответствие результата и цели/задачам статьи Укажите , приведя конкретные цитаты/формулировки из статьи : насколько по самой формулировке совпадает достигнутый результат и поставленные задачи / цель во введении и выводах насколько в выводах раскрыт результат по каждой из поставленных в начале задач / по цели исследования ( раскрыт ли он вообще в статье ) указаны ли направления для дальнейших исследований , и как они звучат Примечание : в выводах работы должны быть приведены результаты по каждой из поставленных задач , а также конечный результат всей работы , соотносящейся с целью работы . Достигнутый результат Охарактеризуйте полученные автором результаты по следующим критериям ( и объясните , почему вы так считаете ) : Чем именно является результат - моделью , методом , алгоритмом , программой … .. Результат является фундаментальным или прикладным Характеристики достигнутого результата Опишите границы применимости результата и степень его универсальности Технические ограничения полученного результата ( если применимо ) Какие недостатки полученного решения вы видите Какие вопросы касательно результата автору стоило бы раскрыть ( на ваш взгляд ) Оценивание задания 2 Максимальное количество баллов за задание 2 - 15 баллов . В случае опоздания ( задание прислано после дедлайна ) , а также плагита/полного/частичного перевода статьи ( при неисправлении проблемных мест ) - полученные баллы за задание умножаются на 0.6 с округлением до меньшего целого . Баллы выставляются за каждый раздел в зависимости от полноты раскрытия его содержимого Раздел “ Характеристика используемых данных ” - 0-5 баллов Приведено описание используемых данных и их характеристики - 2 балла Приведено описание способов обработки данных - 2 балла Приведено описание правомерности выводов - 1 балл Раздел “ Характеристика выводов ” - 0-10 баллов Приведено описание соответствия результата и цели/задачам статьи - 5 баллов Приведено описание достигнутого результата - 5 баллов Задание 3 Результатом выполнения является отчёт по практике и презентация для доклада по статье . Загрузите в репозиторий : отчёт в формате DOCX и PDF , используя следующий шаблон именования Отчёт . * презентацию в формате в формате PPTX и PDF , используя следующий шаблон именования Презентация . * Отчёт Используя материалы предыдущих заданий сформируйте отчёт по практике ( используйте приведенный шаблон для отчета ) На титульном листе - состав команды и название работы ( пример названия - Обзор статьи “ Тема статьи ” ) Содержание Содержимое разделов заданий 1 и 2 ( в том порядке , в которым они описывались в заданиях ) Обратите внимание , что отчёт должен представлять из себя цельный результат , а не бессвязные блоки из заданий - старайтесь соединять разделы с помощью соответствующих переходов . Кроме этого , дополните отчёт следующими разделами ( разместите их в конце отчёта ) : Раздел “ Качество иллюстративного материала ” Укажите , насколько уместны / читаемы таблицы / графики / схемы и тд . Раздел “ Качество списка литературы ” Укажите возраст , количество и качество работ / изданий / авторов , на которых ссылались авторы обозреваемой статьи Презентация По результатам проведенного обзора сформируйте презентацию с результатами практики/анализом статьи ( не более 20 слайдов ) . В содержимом презентации отразите ( фактически краткое содержание соответствующих разделов из предудущих заданий ) : Данные о статье ( название , авторов , год выпуска , журнал , количество цитирований и другую полезную информацию о “ лице ” статьи ) Цель и задачи статьи Достигнутый результат Соответствие результата и цели/задачам Дополнительно - то , что сочтёте полезным Оценивание задания 3 Максимальное количество баллов за задание 3 - 15 баллов . В случае опоздания ( задание прислано после дедлайна ) , а также плагита/полного/частичного перевода статьи ( при неисправлении проблемных мест ) - полученные баллы за задание умножаются на 0.6 с округлением до меньшего целого . Баллы выставляются за каждый критерий : В отчёте есть все разделы из заданий 1 и 2 - 2 балла В отчёте есть дополнительные разделы ( качество иллюстративного материала / списка литературы ) - 2 балла Отчёт представляет связный результат ( компоненты/раздела отчёта связаны и не “ висят в воздухе ” ) - 1 балл Презентация имеет все необходимые разделы - 1 балл Презентация позволяет понять содержимое статьи - 1 балл Выполнение доп . заданий от проверяющего - 8 баллов По результату проверки проверяющий адресует два комментария ( или подзадания ) на дополнение разных разделов , за выполнение каждого подзадания - 4 балла Индивидуальная тренировка публичного выступления Каждый студент проходит автоматическую тренировку публичных выступлений ( выступление с докладом и презентацией из задания 3 ) → набирает необходимое количество баллов за тренировку → получает 5 баллов к индвидидуальной оценке . В случае опоздания ( тренировка пройдена после дедлайна ) - полученные баллы за задание умножаются на 0.6 с округлением до меньшего целого . Прохождение инд . тренировки возможно только после проверки и сдачи задания 3 ( PR проверен , оценка устраивает / PR вмержен ) , поскольку в задании 3 вы формируете презентацию , а доклад делаете о результатах проведенного обзора . Индивидуальная тренировка является обязательным условием для получения оценки “ Отлично ” Для прохождения тренировок - онлайн-курс ( уже доступен ) start/research_practice_3rd_course/tasks.txt · ",
                "Оценивание практики  МОЭВМ Вики » Научно-исследовательская практика » Оценивание практики start : research_practice_3rd_course : scores Table of Contents Оценивание практики Составляющие оценки Пороги оценок Оценивание практики Составляющие оценки Оценка каждого студента складывается из следующих составляющих : командные баллы - формируются на основании баллов за задания 1-3 ( 0-40 баллов ) индивидуальная тренировка - формируется на основании тренировки публичного выступления ( см . раздел ) ( 0-5 баллов ) Прохождение инд . тренировки - обязательное условие для получения оценки “ Отлично ” Пороги оценок В порогах участвует суммарное количество баллов студента ( индивидуальные баллы = командные баллы + инд . тренировка ) [ 0 ; 25 ) баллов - Неудовлетворительно [ 25 ; 35 ) баллов - Удовлетворительно [ 35 ; 40 ) баллов - Хорошо [ 40 ; 45 ] баллов - Отлично start/research_practice_3rd_course/scores.txt · ",
                "✎ Научно-исследовательская практика  МОЭВМ Вики » Научно-исследовательская практика start : research_practice_3rd_course This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Научно-исследовательская практика ====== В рамкой данной практики студенты в командах по три человека выполняют подробный обзор одной научной статьи , результатом обзора является отчет . В этой практике участвуют все студенты без исключения ( даже те , кто уже себе нашел проект для летней производственной практики ) . ===== Основные ссылки ===== * [ [ start : research_practice_3rd_course : deadlines|Важные даты в рамках практики ] ] * [ [ start : research_practice_3rd_course : tasks|Описание заданий на практику ] ] * [ [ start : research_practice_3rd_course : scores|Оценивание практики ] ] * [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vRd41Njwjx91qPaGJhPl8GK8ygmOKe6i05o6RnFYYxxhGfwETNrWnTVyagIVa2zu_1KAksNnvK83hoP/pubhtml ? gid=1543608332 & single=true|Таблица с результатами ] ] * [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vRd41Njwjx91qPaGJhPl8GK8ygmOKe6i05o6RnFYYxxhGfwETNrWnTVyagIVa2zu_1KAksNnvK83hoP/pubhtml ? gid=0 & single=true|Список статей для обзора ] ] * [ [ https : //forms.gle/8PYjqngxuQh7Qtxu7|Форма выбора статей и распределения по командам ] ] - заполняет * * ОДИН * * участник команды * [ [ https : //github.com/moevm/research_practice2024|Репозиторий практики ] ] start/research_practice_3rd_course.txt · ",
                "Научно-исследовательская практика - Old revisions  МОЭВМ Вики » Научно-исследовательская практика start : research_practice_3rd_course Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/03/05 13:46 Научно-исследовательская практика – [ Основные ссылки ] dmitry.ivanov -37 B ( current ) 2024/03/05 13:46 Научно-исследовательская практика – [ Основные ссылки ] dmitry.ivanov -263 B 2024/03/05 13:45 Научно-исследовательская практика – [ Основные ссылки ] dmitry.ivanov +95 B 2024/03/04 12:38 Научно-исследовательская практика – [ Основные ссылки ] dmitry.ivanov +80 B 2024/03/03 16:10 Научно-исследовательская практика dmitry.ivanov +88 B 2024/03/03 12:35 Научно-исследовательская практика – Add main page dmitry.ivanov -16 KB 2023/05/23 14:42 Научно-исследовательская практика – [ Оценивание выступлений ] dmitry.ivanov +50 B 2023/05/23 14:22 Научно-исследовательская практика dmitry.ivanov +556 B 2023/04/05 10:31 Научно-исследовательская практика – [ Оценивание выступлений ] dmitry.ivanov +419 B 2023/03/25 19:11 Научно-исследовательская практика – [ Оценивание отчетов ] dmitry.ivanov -7 B 2023/02/27 10:51 Научно-исследовательская практика – [ Научно-исследовательская практика ( распределенная в семестре ) ] dmitry.ivanov +121 B 2023/02/20 15:40 Научно-исследовательская практика – [ Оценивание отчетов ] dmitry.ivanov +538 B 2023/02/20 15:34 Научно-исследовательская практика – Update dates dmitry.ivanov +616 B 2023/02/18 11:38 Научно-исследовательская практика – [ Научно-исследовательская практика ( распределенная в семестре ) ] dmitry.ivanov -3 B 2023/02/18 09:59 Научно-исследовательская практика dmitry.ivanov ±0 B 2023/02/18 09:58 Научно-исследовательская практика dmitry.ivanov +39 B 2023/02/18 09:47 Научно-исследовательская практика dmitry.ivanov +33 B 2023/02/17 22:03 Научно-исследовательская практика – [ Оценивание выступлений ] dmitry.ivanov -101 B 2023/02/17 21:55 Научно-исследовательская практика – [ Критерий выставления оценки ] dmitry.ivanov +181 B 2023/02/17 21:47 Научно-исследовательская практика – [ Работа в репозитории и исправления ] dmitry.ivanov -41 B 2023/02/17 21:46 Научно-исследовательская практика dmitry.ivanov +3.3 KB Show differences between selected revisions less recent > > start/research_practice_3rd_course.txt · ",
                "Научно-исследовательская практика - "
            ]
        },
        {
            "name": "Производственная практика на кафедре МО ЭВМ, 3 курс",
            "url": "/doku.php/start:industrial_practice_3rd_course",
            "date": "\"2024/02/26 09:47\"",
            "data": [
                "Производственная практика на кафедре МОЭВМ , 3 курс  МОЭВМ Вики » Производственная практика на кафедре МОЭВМ , 3 курс start : industrial_practice_3rd_course Table of Contents Производственная практика на кафедре МОЭВМ , 3 курс Производственная практика ( летняя ) Пояснение Уточнение для целевиков Введение Презентация Видео вводной консультации Задание и список тем Репозиторий Таблица успехов Материалы прошлых лет Как готовить и сдавать отчет ( пр . практика ) Как готовить отзыв руководителя Производственная практика на кафедре МОЭВМ , 3 курс Важное пояснение - в весеннем семестре третьего курса у студентов третьего курса предусмотрено две практики , по итогам которых будут выставлены две разные оценки . Научно-исследовательская практика - проходит в течении семестра Производственная практика - проходит в июле ( формально ) . Ниже описывается процедура и правила получения оценок по Производственной практике . Производственная практика ( летняя ) Пояснение Ниже описываются правила прохождения производственной практики на кафедре МОЭВМ , однако у вас есть опция пройти практику во внешней организации . Кафедра рекомендует искать темы и организации ( если у вас их еще нет ) по ссылке : https : //digital.etu.ru/partner-lk/main-page Уточнение для целевиков Если вы обучаетесь по целевому приему ( == целевик , целевое направление , ваше обучение оплачивает предприятие ) , то вы обязаны проходить практику на предприятии , с которым у вас договор . Связывайтесь с его представителями и уточняйте данный вопрос . После чего вносите информацию о прохождении практики в форму и готовьте отчет ( правила для вас не меняются ) . Введение Летняя производственная практика проходит в течении июня - июля ( формально 26.06 - 08.07 ) , может также быть зачтена за работу до этого срока . Данная практика представляет собой вашу работу над проектом по специальности в одном из следующих качеств : Во внешней организации С руководителем в ЛЭТИ С руководителем на кафедре МОЭВМ В проектах кафедры МОЭВМ Пункты 1-3 подразумевают , что на момент начала практики у вас уже есть договоренность с организацией или руководителем , а также понятная задача на практику по вашей специальности . Пункт 4 предназначен для всех , у кого такой договоренности на момент начала практики не будет . В рамках данной активности вам предлагается выбор ( ограниченный по времени и числу вариантов - выбор начнется ориентировочно в середине июня 2024 года ) из пулла проектов кафедры с оговоренными заранее критериями оценок ( примеры прошлого года - ниже ) . Тех , у кого нет ни договоренности , ни явного выбора в срок , кафедра добавить в проект без учета мнения студента : ( По итогам прохождения практики ( вне зависимости от формы 1-4 ) вам будет необходимо предоставить отчет и отзыв ( см . ниже ) . В случае прохождения практики по варианту 4 , закладывайте в сроки необходимость получить подпись руководителя и печать организации на вашем отчете ( это может быть долго в условиях лета ) . В случае прохождения практики по варианту 4 , вам будет необходимо предоставить код разработанного проекта / проделанного в ходе работы улучшения . Ниже , для примера , формы и таблицы ПРОШЛОГО ГОДА . ! ! ! ! Если вы УЖЕ проходите практику на предприятии или в ЛЭТИ , то внесите это в форму https : //forms.gle/PXzfdRDSHTZ2ioKRA ! ! ! ! ! Презентация https : //docs.google.com/presentation/d/1iPYijOfBLfORRY6vOtfRgEP6Xr_f-LD7_tfd_Zi5GPQ/edit # slide=id.p Видео вводной консультации Скоро будет Задание и список тем Для тех , кто не нашел практику в организации / лабораториях ЛЭТИ : Задание 2023 года ( В процессе наполнения ) https : //docs.google.com/document/d/1y9essq5hv4FCU7uZVhly1Kf46aUlrVOwEubhTcfuAYs/edit Репозиторий https : //github.com/moevm/industrial_practice2024 Таблица успехов https : //docs.google.com/spreadsheets/d/13yn_6etaAxas7U7 -- sWx6bTfpoAEFYn1FhRNc3qunEQ/edit ? resourcekey # gid=709324150 Материалы прошлых лет http : //se.moevm.info/doku.php/start : industrial_practice_3rd_course : old Как готовить и сдавать отчет ( пр . практика ) Форма для отчета https : //etu.ru/assets/files/3004_4_ShABLON-otcheta-po-praktike.doc Отчет обязателен для получения ЛЮБОЙ оценки за практику . Срок сдачи отчета - не позже 10:00 по Москве 08 июля 2024 ( если в задании не указана более раняя дата ) . Как сдавать отчет : https : //docs.google.com/document/d/1N-l1-y9igcx6y0oFD7N2c-29O9lZml60mOTyGB7SSkw/edit # heading=h.x9yhsw1hplz Разделы для отчета : Содержание Задание на практику Решение задачи / результат вашей работы Использованные технологии Если практика проходила во внешней организации - Скан отзыва руководителя с оценкой , подписью и печатью Если практика проходила в ЛЭТИ - Скан отзыва руководителя с оценкой и подписью Если практика проходила в кафедральных проектах ( которые вы выбирали в форме из списка выше ) - отзыв не нужен ( руководитель свою оценку передаст иным образом ) Список литературы ( если нужно ) Ответы на часто задаваемые вопросы Отзыв достаточно предоставить в электронном виде в качестве части отчета . Бумажную версию сдавать не нужно . Отзыв нельзя сдать позже крайнего срока сдачи отчета или отдельно - в таком случае у вас будет оценка “ Не аттестован ” и задолженность . Как готовить отзыв руководителя Отзыв должен содержать следующую информацию : Задание на практику Сроки прохождения практики Результат выполнения задания ( что получилось , что сделал практикант ) Характеристика личных качеств практиканта Характеристика успешности выполнения задания Оценка практиканта за пройденную практику - одно из значний Неудовлетворительно , Удовлетворительно , Хорошо , Отлично Подпись руководителя Печать организации ( или заверение подписи из отдела кадров ) - для руководителей НЕ ИЗ ЛЭТИ Шаблон отзыва ( прохождение практики не в ЛЭТИ ) https : //docs.google.com/document/d/16AOZb2KtQZt-012D5k7eO8ZgMyu2o1v5/edit ? usp=sharing & ouid=110155712590252196860 & rtpof=true & sd=true Шаблон отзыва ( прохождение практики в ЛЭТИ ) https : //docs.google.com/document/d/1scJMNZe7iZNy5AGGKlQCRNoIIzjz2jnK/edit ? usp=sharing & ouid=110155712590252196860 & rtpof=true & sd=true start/industrial_practice_3rd_course.txt · ",
                "Производственная практика на кафедре МОЭВМ , 3 курс - ",
                "",
                "✎ Производственная практика на кафедре МОЭВМ , 3 курс  МОЭВМ Вики » Производственная практика на кафедре МОЭВМ , 3 курс start : industrial_practice_3rd_course This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Производственная практика на кафедре МОЭВМ , 3 курс ====== Важное пояснение - в весеннем семестре третьего курса у студентов третьего курса предусмотрено две практики , по итогам которых будут выставлены две разные оценки . * [ [ start : research_practice_3rd_course|Научно-исследовательская практика ] ] - проходит в течении семестра * Производственная практика - проходит в июле ( формально ) . Ниже описывается процедура и правила получения оценок по Производственной практике . ===== Производственная практика ( летняя ) ===== ==== Пояснение ==== Ниже описываются правила прохождения производственной практики на кафедре МОЭВМ , однако у вас есть опция пройти практику во внешней организации . Кафедра рекомендует искать темы и организации ( если у вас их еще нет ) по ссылке : https : //digital.etu.ru/partner-lk/main-page ==== Уточнение для целевиков ==== Если вы обучаетесь по целевому приему ( == целевик , целевое направление , ваше обучение оплачивает предприятие ) , то вы обязаны проходить практику на предприятии , с которым у вас договор . Связывайтесь с его представителями и уточняйте данный вопрос . После чего вносите информацию о прохождении практики в форму и готовьте отчет ( правила для вас не меняются ) . ==== Введение ==== Летняя производственная практика проходит в течении июня - июля ( формально 26.06 - 08.07 ) , может также быть зачтена за работу до этого срока . Данная практика представляет собой вашу работу над проектом по специальности в одном из следующих качеств : - Во внешней организации - С руководителем в ЛЭТИ - С руководителем на кафедре МОЭВМ - В проектах кафедры МОЭВМ Пункты 1-3 подразумевают , что на момент начала практики у вас уже есть договоренность с организацией или руководителем , а также понятная задача на практику по вашей специальности . Пункт * * 4 * * предназначен для всех , у кого такой договоренности * * на момент начала практики не будет * * . В рамках данной активности вам предлагается выбор ( ограниченный по времени и числу вариантов - * * выбор начнется ориентировочно в середине июня 2024 года * * ) из пулла проектов кафедры с оговоренными заранее критериями оценок ( примеры прошлого года - ниже ) . Тех , у кого нет ни договоренности , ни явного выбора в срок , кафедра добавить в проект без учета мнения студента : ( По итогам прохождения практики ( вне зависимости от формы 1-4 ) вам будет необходимо предоставить отчет и отзыв ( см . ниже ) . В случае прохождения практики по варианту 4 , закладывайте в сроки необходимость получить подпись руководителя и печать организации на вашем отчете ( это может быть долго в условиях лета ) . В случае прохождения практики по варианту 4 , вам будет необходимо предоставить код разработанного проекта / проделанного в ходе работы улучшения . Ниже , для примера , формы и таблицы ПРОШЛОГО ГОДА . ! ! ! ! Если вы УЖЕ проходите практику на предприятии или в ЛЭТИ , то внесите это в форму https : //forms.gle/PXzfdRDSHTZ2ioKRA ! ! ! ! ! ==== Презентация ==== https : //docs.google.com/presentation/d/1iPYijOfBLfORRY6vOtfRgEP6Xr_f-LD7_tfd_Zi5GPQ/edit # slide=id.p ==== Видео вводной консультации ==== Скоро будет ==== Задание и список тем ==== Для тех , кто не нашел практику в организации / лабораториях ЛЭТИ : Задание 2023 года ( В процессе наполнения ) https : //docs.google.com/document/d/1y9essq5hv4FCU7uZVhly1Kf46aUlrVOwEubhTcfuAYs/edit ==== Репозиторий ==== https : //github.com/moevm/industrial_practice2024 ==== Таблица успехов ==== https : //docs.google.com/spreadsheets/d/13yn_6etaAxas7U7 -- sWx6bTfpoAEFYn1FhRNc3qunEQ/edit ? resourcekey # gid=709324150 ==== Материалы прошлых лет ==== http : //se.moevm.info/doku.php/start : industrial_practice_3rd_course : old ===== Как готовить и сдавать отчет ( пр . практика ) ===== Форма для отчета https : //etu.ru/assets/files/3004_4_ShABLON-otcheta-po-praktike.doc Отчет обязателен для получения ЛЮБОЙ оценки за практику . * * Срок сдачи отчета - не позже 10:00 по Москве 08 июля 2024 ( если в задании не указана более раняя дата ) . * * Как сдавать отчет : https : //docs.google.com/document/d/1N-l1-y9igcx6y0oFD7N2c-29O9lZml60mOTyGB7SSkw/edit # heading=h.x9yhsw1hplz Разделы для отчета : * Содержание * Задание на практику * Решение задачи / результат вашей работы * Использованные технологии * Если практика проходила во внешней организации - * * Скан отзыва руководителя с оценкой , подписью и печатью * * * Если практика проходила в ЛЭТИ - * * Скан отзыва руководителя с оценкой и подписью * * * * * Если практика проходила в кафедральных проектах ( которые вы выбирали в форме из списка выше ) - отзыв не нужен ( руководитель свою оценку передаст иным образом ) * * * Список литературы ( если нужно ) Ответы на часто задаваемые вопросы * Отзыв достаточно предоставить в электронном виде в качестве части отчета . Бумажную версию сдавать не нужно . * Отзыв нельзя сдать позже крайнего срока сдачи отчета или отдельно - в таком случае у вас будет оценка `` Не аттестован '' и задолженность . ===== Как готовить отзыв руководителя ===== Отзыв должен содержать следующую информацию : * Задание на практику * Сроки прохождения практики * Результат выполнения задания ( что получилось , что сделал практикант ) * Характеристика личных качеств практиканта * Характеристика успешности выполнения задания * * * Оценка практиканта за пройденную практику - одно из значний Неудовлетворительно , Удовлетворительно , Хорошо , Отлично * * * Подпись руководителя * Печать организации ( или заверение подписи из отдела кадров ) - для руководителей НЕ ИЗ ЛЭТИ Шаблон отзыва ( прохождение практики не в ЛЭТИ ) https : //docs.google.com/document/d/16AOZb2KtQZt-012D5k7eO8ZgMyu2o1v5/edit ? usp=sharing & ouid=110155712590252196860 & rtpof=true & sd=true Шаблон отзыва ( прохождение практики в ЛЭТИ ) https : //docs.google.com/document/d/1scJMNZe7iZNy5AGGKlQCRNoIIzjz2jnK/edit ? usp=sharing & ouid=110155712590252196860 & rtpof=true & sd=true start/industrial_practice_3rd_course.txt · ",
                "Производственная практика на кафедре МОЭВМ , 3 курс - Old revisions  МОЭВМ Вики » Производственная практика на кафедре МОЭВМ , 3 курс start : industrial_practice_3rd_course Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/26 09:47 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить и сдавать отчет ( пр . практика ) ] mark +30 B ( current ) 2024/02/26 09:46 Производственная практика на кафедре МОЭВМ , 3 курс – [ Пояснение ] mark +143 B 2024/02/26 09:46 Производственная практика на кафедре МОЭВМ , 3 курс – [ Репозиторий ] mark ±0 B 2024/02/26 09:45 Производственная практика на кафедре МОЭВМ , 3 курс mark +3 B 2024/02/26 09:44 Производственная практика на кафедре МОЭВМ , 3 курс – [ Введение ] mark ±0 B 2024/02/26 09:35 Производственная практика на кафедре МОЭВМ , 3 курс – [ Введение ] mark ±0 B 2024/02/26 09:31 Производственная практика на кафедре МОЭВМ , 3 курс – [ Пояснение ] mark -184 B 2024/02/26 09:27 Производственная практика на кафедре МОЭВМ , 3 курс – [ Задание и список тем ] mark +35 B 2024/02/26 09:27 Производственная практика на кафедре МОЭВМ , 3 курс – [ Задание и список тем ] mark +84 B 2023/07/10 08:32 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить отзыв руководителя ] mark +138 B 2023/07/03 08:36 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить отзыв руководителя ] mark +7 B 2023/06/26 07:03 Производственная практика на кафедре МОЭВМ , 3 курс mark +709 B 2023/06/13 11:55 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить и сдавать отчет ( пр . практика ) ] mark +17 B 2023/06/13 07:50 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить и сдавать отчет ( пр . практика ) ] mark +933 B 2023/06/06 11:47 Производственная практика на кафедре МОЭВМ , 3 курс – [ Таблица успехов ] mark -2 B 2023/06/06 08:04 Производственная практика на кафедре МОЭВМ , 3 курс – [ Введение ] mark +7 B 2023/06/06 08:03 Производственная практика на кафедре МОЭВМ , 3 курс – [ Репозиторий ] mark ±0 B 2023/06/01 11:29 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить и сдавать отчет ( пр . практика ) ] mark -461 B 2023/06/01 11:29 Производственная практика на кафедре МОЭВМ , 3 курс – [ Задание и список тем ] mark -137 B 2023/05/26 12:52 Производственная практика на кафедре МОЭВМ , 3 курс – [ Как готовить и сдавать отчет ( пр . практика ) ] mark ±0 B 2023/05/11 08:48 Производственная практика на кафедре МОЭВМ , 3 курс – [ Пояснение ] mark +39 B Show differences between selected revisions less recent > > start/industrial_practice_3rd_course.txt · ",
                "Производственная практика на кафедре МОЭВМ , 3 курс - "
            ]
        }
    ],
    "4 курс": [
        {
            "name": "Введение в нереляционные базы данных",
            "url": "/doku.php/staff:courses:no_sql_introduction",
            "date": "\"2024/01/31 08:11\"",
            "data": [
                "Введение в нереляционные базы данных  Сотрудникам » courses » Введение в нереляционные базы данных staff : courses : no_sql_introduction Table of Contents Введение в нереляционные базы данных Что нужно сделать в первую очередь ИДЗ , оценка , текущий контроль Взаимодействие Рекомендованные источники информации Введение в нереляционные базы данных Что нужно сделать в первую очередь Добавить свое имя и фамилю в ваши аккаунты на Github.com и http : //e.moevm.info . Выбрать из списка тем для ИДЗ . Решить , с кем вы хотите работать совместно в проекте ( 3 человека ) Зарегистрироваться в форме ( пока закрыто , откроется во время первой пары ; если не понимаете , какой проект и с кем хотите - не страшно , можно будет отредактировать заполнение формы потом ) Вступить в онлайн-курс по ссылке и начать решать . Если есть вопросы , то ознакомтесь с Вводной презентацией . ИДЗ , оценка , текущий контроль Критерии выставления оценки по итогам курса . ИДЗ - состав , порядок работы . Список тем для ИДЗ * * ТАБЛИЦА УСПЕХОВ * * ( привязка к проектам , текущий контроль , статистика репозиториев ( beta ) ) Лекции ( слайды ) Записи лекций 2021 Записи лекций 2020 Репозиторий с примерами ( work in progress ) . Презентация про то , как составлять макет и писать сценарии использования ( +типичные ошибки ) Взаимодействие 1 . Добавляйте [ NoSQL ] в тему своего письма ( да , квадратные скобки тоже нужно добавить ) , иначе оно будет отфильтровано в неправильное место и вы не получите ответ во время . 2 . Не создавайте новые ветки обсуждений , старайтесь вести переписку в рамках одной ветки . 3 . Проверка начинается только после того , как вы напишите преподавателю письмо о готовности задания . Рекомендованные источники информации Теория ( основные материалы ) Сэкономит время при подготовке ИДЗ : Импорт данных из внеших источников Как составить UseCase ( сценарий использования ) и макет пользовательского интерфейса Вычисление объема модели данных Совместное использование нескольких СУБД ( Polyglot persistence ) и миграция данных ( пригодится тем , у кого в задании несколько СУБД ) : Neo4j Doc Manager - инструмент для интеграции mongodb и neo4j Migration from SQL to MongoDB - A Case Study at TheKnot.com Mongify - Move data from SQL to MongoDB with ease Convert MySQL Queries to MongoDB Syntax Рейтинги СУБД ( NoSql VS SQL ) MongoDB - Как делать запрос через несколько уровней вложенности staff/courses/no_sql_introduction.txt · ",
                "Введение в нереляционные базы данных - ",
                "",
                "staff : courses : start  Сотрудникам » courses staff : courses : start Permission Denied Sorry , you do n't have enough rights to continue . Login You are currently not logged in ! Enter your authentication credentials below to log in . You need to have cookies enabled to log in . Log In Username Password Remember me Log In Forgotten your password ? Get a new one : Set new password Page Tools Show pageOld revisionsBacklinksExport to PDFRename PageODT exportBack to top Except where otherwise noted , content on this wiki is licensed under the following license : CC Attribution-Share Alike 4.0 International",
                "Темы для ИДЗ  Сотрудникам » courses » Введение в нереляционные базы данных » ИДЗ - состав , порядок работы » Темы для ИДЗ staff : courses : no_sql_introduction : course_work : topics Table of Contents Темы для ИДЗ Своя тема Источники данных Темы для ИДЗ Из чего складывается сложность : Доступность датасета Необходимость использовать несколько датасетов Необходимость использовать СУБД не совсем по назначению Алгоритмы Темы в порядке возрастания субъективной сложности . Поле “ Комментарий ” содержит отправную точку для формулировки окончательного задания . Помимо задания , для каждой ИДЗ требуется реализовать массовый импорт-экспорт данных . № Название Предлагаемая СУБД Набор данных/API Комментарий 01 Сервис поиска врачей частной практики MongoDB Синтетические данные Задача - подготовить веб-сервис , которые сводит пациентов и врачей , ведущих частную практику . Категории пользователей - врачи , пациенты , админы . Необходимые ( но не достаточные ) фичи - личные страницы врачей и пациентов , рейтинги и отзывы , статистика , страницы для финансовой стороны вопроса ( реальные платежи подключать не нужно ) - оплаты и статистика , карточки и анализы пациентов . 02 Умный склад на стройплощадке MongoDB Синтетические данные Задача - сделать сервис для учета , отпуска и поступления материалов , нужных для строительства дома . Пользователи - рабочие , прорабы , кладовщики . Необходимые ( но не достаточные фичи ) - аккаунты пользователей , страницы позиций , страница “ Склад ” , статистика , страница для формрования накладных , страница для анализа потребления и прогноза позиций . 03 Информационная система стоматологической клиники MongoDB Синтетические данные Задача - сделать сервис для управления стоматологической клиникой . Пользователи - администраторы ( те , которые сидят на reception ) , врачи , пациенты . Необходимые ( но не достаточные фичи ) - карты пациентов , статистика для бухгалтерии , статистика и динамика больных , хранение снимков , склад и обслуживание оборудования 04 Информационная система сети прачечных Neo4j Синтетические данные Задача - сделать систему для управления сетью максимально автоматизированных прачечных . Пользователи - администратор ( reception ) , директор филиала , владелец бизнеса . Необходимые ( но не достаточные ) фичи - график работы , страница филиала , склад , расчет ЗП , расчет прибыли по филиалам 05 Онлайн-магазин цветов и комнатных растений Neo4j Синтетические данные Задача - сделать сервис для продажи цветов и комнатных растений , который бы учитывал малый срок жизни цветов . Пользователи - продавцы , администраторы , покупатели . Необходимые ( но не достаточные фичи ) - аккаунты пользователей , страницы товаров , страница “ Склад ” , статистика 06 Каталог объявлений о продаже автомобилей Mongo Синтетические данные Задача - сервис , позволяющий размещать объявления о покупке или продаже автомобилей , связывать продавцов и покупателей . Необходимые ( но не достаточные фичи ) - аккаунты продавцов и покупателей , рейтинги и отзывы , страница подробных данных об автомобиле ( пробег , номера двигателя … , марка машины , год , фото …. ) . Пользователи - администраторы , клиенты . 07 Сервис хранения экспериментов инструмента Sumo Neo4j https : //sumo.dlr.de/docs/index.html Задача - сделать простое веб-приложение для импорта / хранения / поиска / визуализации результатов экспериментов в эмуляторе . Необходимые ( но не достаточные ) фичи - список и поиск экспериментов , страница отдельного эксперимента , визуализация , статистика . 08 Сервис хранения экспериментов инструмента pybulletdrones MongoDB https : //github.com/utiasDSL/gym-pybullet-drones Задача - сделать простое веб-приложение для импорта / хранения / поиска / визуализации результатов экспериментов в эмуляторе . Необходимые ( но не достаточные ) фичи - список и поиск экспериментов , страница отдельного эксперимента , визуализация , статистика . 09 Сервис хранения экспериментов инструмента ripes MongoDB https : //github.com/mortbopet/Ripes Задача - сделать простое веб-приложение для импорта / хранения / поиска / визуализации результатов экспериментов в эмуляторе Необходимые ( но не достаточные ) фичи - список и поиск экспериментов , страница отдельного эксперимента , визуализация , статистика . 10 Сервис транскрибции видео и аудио MongoDB Синтетические данные Задача - сделать сервис для организации транскрибции видео и аудиоматериалов с помощью некоторой распределенной инфраструктуры ( это означает , что ресурсы для транскрибции определяются динамически ( администраторами ) и система должна уметь планировать обработку входных данных исходя из текущих мощностей ) . Пользователи - администраторы , пользователи . Необходимые ( но не достаточные фичи ) - страница отдельного задания , профили пользователей , статистика ( для админов , по отдельным серверам транскрибции , по пользователям , по задачам ) , интерфейсы оплаты на заглушках . Саму транскрибцию делать не обязательно , но если очень хочется - можно использовать whisper.ai 11 Сервис климат-контроля InfluxDB Синтетические данные Задача - сделать сервис для сбора данных о климате в протяженном помещении , управлении климатической техникой , мониторинге ее состояния . Необходимые ( но не достаточные фичи ) - визуализация состояния помещений , страницы приборов , настройки стратегий работы приборов , уведомления о расходниках 12 Сервис составления генеалогических деревьев Neo4j Синтетические данные Задача - сервис , позволяющий различным пользователям вести свои родословные древа , анализировать их , находить похожие , предлагать мержи деревьев . Необходимые ( но не достаточные фичи ) - аккаунты пользователей , страница родословного древа , страница рекомендаций , предоставления доступа к древу , страница мержа 13 Хаб данных умной фермы InfluxDB + Mongo Синтетические данные Задача - сделать приложение для автоматизированного мониторинга тепличной фермы овощей . Пользователи - рабочие , бригадиры , владельцы бизнеса . Необходимые ( но не достаточные фичи ) - страницы пользователей , страница для работы с нарядами рабочих и бригадиров , склад ( собранная продукция , расходники ) , инциденты , график дежурств , инфраструктура 14 Телеграм-бот для вывода данных из таблиц MongoDB Синтетические данные Задача - сделать простого бота , который сможет решать задачу “ покажи мне строку по запросу А из таблицы Б ” . Для определенности можно считать , что такой бот нужен для курсов МОЭВМ , чтобы скрывать от студентов всю таблицу успеваемости и показывать студенту только его собственную строчку . Таблиц / студентов / преподов может быть много . Необходимые ( но не достаточные ) фичи - веб-интерфейс для администрирования и настройки , страница со списком подключенных таблиц , страница для настройки отдельной таблицы ( где расположен идентификатор студентов , какие колонки игнорировать ) , таблица админов , логи , статистика доступа 15 Телеграм-бот для напоминаний преподавателям о новых записях в таблице MongoDB Синтетические данные Задача - сделать простого бота , который сможет решать задачу “ пришли пользователю уведомление , если его _неким_ образом упомянули в таблице ” . Для определенности можно считать , что такой бот нужен для преподавателей МОЭВМ , которые ждут появления студенческих отправок в определенной таблице . Преподов и таблиц может быть много . Необходимые ( но не достаточные ) фичи - веб-интерфейс для администрирования и настройки , страница со списком подключенных таблиц , страница для настройки отдельной таблицы ( настройки текста уведомления , где расположен идентификатор препода , критерий для уведомления ) , таблица админов , логи , статистика доступа , статистика по уведомлениям ( когда кому отправлены , кто читал ) 16 Сервис хранения данных биржевой торговли forex MongoDB Синтетические данные Задача - веб приложение , которое будет хранить / обеспечивать поиск / анализ и визуализацию данных о рынке по указанным периодам / запросам / валютным парам . Необходимые ( но не достаточные ) фичи - списки валютных пар , страница архива , визуализация отдельного сигнала на графике для конкретной валютной пары , анализ для сигнала 17 Сервис сбора и визуализации логов Apache2 InfluxDB Синтетические данные Задача - создать приложение , которое аггрегирует логи Apache2 в influx . https : //github.com/influxdata/telegraf/blob/master/plugins/inputs/tail/README.md , https : //github.com/influxdata/telegraf/blob/master/plugins/parsers/grok/README.md . Необходимо поддержать одновременно все файлы логов apache - access.log , error.log , other_vhosts_access.log , а также время загрузки странци как один из элементов данных . Необходимые ( но не достаточные ) фичи - таблица поиска по всем логом с фильтром , страница отдельной записи в логе , кастомизируемая статистика ( по хостам , ip клиентов , кодам ошибок , времени загрузки страниц ) 18 Построение графа ссылок на веб-страницах Neo4j Синтетические данные Задача в рамках ИДЗ - сделать систему обхода всех веб-страниц и ссылок на сайте для составления графа и его анализа . Необходимые ( но не достаточные ) фичи - список обработанных сайтов , страница визуализации графа ссылок , анализ графа ( изолированные компоненты , длина пути от главной страницы ) . 19 Сервис для планирования кабельных сетей Neo4j Синтетические данные Задача в рамках ИДЗ - сделать систему для проектирования и анализа кабельной инфраструктуры зданий ( локальные сети ) . Необходимые ( но не достаточные ) фичи - список проектов , сводка по проекту , поэтажные планы , анализ проекта ( сколько нужно кабелей , оборудования , расходников для монтажа ) , визуализация проекта в виде графа . 20 Каталог учебных планов и программ Neo4j https : //etu.ru/sveden/education/eduop/ Задача - сделать сервис для управления и визуализацией ( в виде графа ) учебных программ и планов в рамках ВУЗа . Пользователи - преподаватели , студенты . Необходимые ( но не достаточные фичи ) - страница учебной программы , учебной дисциплины , анализ учебных планов ( общие дисциплины , отличия , сложность ) . 21 Сервис поддержки ЖКХ Neo4j OSM Задача - сделать сервис фиксации проблем с ЖКХ инфраструктурой ( стрижка газонов , неполадки в трубах , покраска … ) , планирования регулярных и внеплановых работ , формирования ответов на обращения собственников . Необходимые ( но не достаточные фичи ) - аккаунты собственников и ЖКХ-администраторов , визуализация на карте , подача и дискуссии по обращениям 22 Сервис оценки земельных участков Neo4j Avito + OSM Задача - подготовить веб-сервис , который реализует каталог участков , а также механику их оценки . Смысл сервиса - позволить добавлять в систему полные данные об участках координаты всех узловых точек и проводить на базе формы , окружающего ландшафта и соседей оценку , например : сколько соседских домов , как далеко водоем / остановка / магазин , насколько участок ниже / выше соседей . Необходимые ( но не достаточные ) фичи - личные страницы пользователей , рейтинги и отзывы пользователей и участков , визуализация и поиск на карте , страницы отдельных участков с подробными данными . 23 Составление маршрутов интересных пеших прогулок по СПБ Neo4j Wikimapia + OSM Задача - сделать сервис для составления пеших маршрутов по Санкт-Петербургу . Пользователи - администраторы , пользователи . Необходимые ( но не достаточные фичи ) - личные странциы , страницы маршрутов , страница генерации маршрута ( задаем настройки - интересы , протяженность - учитываем время года , ширину тротуаров ) 24 Сервис “ Crowd-редакция ” Neo4j Синтетические данные + wikibooks Задача - подготовить веб-сервис , который реализует вычитку и редактирование книг силами сообщества ( crowdsourcing ) . Одни и теже пользователи могут быть как авторами , так и редакторами . Необходимые ( но не достаточные ) фичи - личные страницы пользователей , рейтинги и отзывы пользователей , статистика рецензий , списки рецензий , страницы отдельных резцензий , страницы книг . 25 Сервис локального ( на базе нескольких репо ) антиплагиата для естественного языка MongoDB Синтетические данные Задача - веб приложение , которое будет выгружать , версионировать ( Используя данные гита ) данные из набора гитхаб-репо ( кастомизируются пользователями ) , хранит эти данные для удобства синтаксического анализа и формирует отчеты по возможному плагиату между пользователями репо . Необходимые ( но не достаточные ) фичи - настройки списка репозиториев ( откуда берем данные , по каким шаблонам ищем тексты ) , отчеты о проверках , статистика по пользователям репо / файлам 26 Визуализатор и анализатор электронной почты в виде графа Neo4j Синтетические данные Задача - сделать сервис , который позволяет визуализировать и анализировать электронную почту с помощью графов . Вершины - письма и авторы , ребра - хронология ( цепочки писем ) , связи между авторами ( работа ) . Необходимые ( но не достаточные ) фичи - визуализация в виде графа , настройки , аналитика ( самые длинные цепочки , корреспонденты , сроки ответов … ) , таблица поиска писем 27 Сервис редактирования и автоматического составления расписания в ВУЗе Mongo Расписание ЛЭТИ Задача - сервис , позволяющий принимать пожелания от преподавателей , принимать данные об аудиториях и их вместимости , данные учебных планов ( предметы / курсы / группы ) , данные о студентах ( сколько в какой группе человек , какие группы к каким направлениям относятся . Необходимые ( но не достаточные фичи ) - автоматическое составление расписания ( исходя из предоставленных ограничений ) , визуализация и редактирование расписания , логика согласования расписания ( препод выссказал пожелание , админ поправил , препод одобрил ) , анализ составленного расписания ( насколько равномерно используются аудитории , насколько студентам / преподам нужно между парами бегать в новую аудиторию ) . Пользователи - преподаватели , администраторы , студенты . 28 Построение маршрутов по рекам и каналам Neo4j OpenStreetMaps Задача - максимально смоделировать данные о реках / каналах СПБ , а также объектах инфраструктуры ( причалы , пирсы , знаки для водного транспорта , мосты ) , обеспечить построение маршрутов и вычисление статистики . Необходимые ( но не достаточные ) фичи - визуализация на карте и графом , поиск и составление маршрутов по карте , таблица для просмотра данных системы , анализ маршрутов , анализ карты ( “ медвежьи углы ” , потенциальные “ бутылочные горлышки ” ) 29 Юридические документы Neo4j Синтетические данные Смысл проекта - предоставить интерфейс для хранения , версионирования и анализа ( грубого ) юридических документов на русском языке . Варианты анализа : разбиение на предложения , абзацы , идентификация пунктов по ключевым словам , поиск формулировок-обязательств / требований ….Необходимые ( но не достаточные ) фичи - таблица с поиском по документам , страница документа , статистика по документу , общие термины документов 30 Карта транспортной доступности водоемов севера Ленинградской области Neo4j OSM Задача в рамках ИДЗ - сделать систему для построения и анализа графа транспортной доступности водоемов ( реки , озера , водохранилища ) севера ЛО . Необходимые ( но не достаточные ) фичи - список водоемов , страница визуализации графа , анализ графа ( сортировка по доступности , изолированные узлы ) . 31 ИС Справочник Музеев Memcached https : //opendata.mkrf.ru/opendata/7705851331-museums Тема аналогична “ ( Сложно ) ИС Справочник образовательных организаций Санкт-Петербурга ” 32 ИС Справочник образовательных организаций Санкт-Петербурга Memcached https : //petersburgedu.ru/institution/ Цель - создать каталог , хранящий максимум информации обо всех организациях . Задачи - хранение всех доступных полей , организация поиска , аггрегации , изменения данных каталога . Модель данных нужно построить так , чтобы на клиенте требовалась минимальная обработка ( скоррее всего , вам предстоит сделать очень много дублирования данных ) . Необходимые ( но не достаточные ) фичи - таблица с поиском , страница отдельной организации , статистика 33 Cервис для дизайна мозаек Neo4j Синтетические данные Идея - вам очень захотелось превратить любимую картинку в мозаику из керамической плитки у себя на даче , для этого вам необходимо как-то прикинуть из каких частей оно будет состоять , сколько и какой плитки вам нужно закупить ( по цвету и площади ) , как эту плитку раскроить и как ее наклеить ( в каком порядке ) . Задача в рамках ИДЗ - сделать систему для автоматического ( можно придумать свое , можно уже готовое https : //github.com/nuno-faria/tiler ) построения керамических мозаек из изображений , а также для генерации инструкций по сборке и расчета количества цветных плиток . Необходимые ( но не достаточные ) фичи - список готовых мозаик , загрузка и обработка нового изображения , визуализация в виде графа , анализ и сводка по мозаике ( сколько и каких плиток нужно , сколько метров реза вам нужно проделать ) , инструкция по нарезке , инструкция по сборке . 34 Построение маршрутов с учетом плохой парковки Neo4j Открытые данные OpenStreetMap Необходимо взять в качестве демо данных квадрат карты , где находится Петроградский район и для него создать приложение , которое позволит строить маршруты из точки А в точку Б так , чтобы 1 ) при подъезде к точке Б нужно вести водителя не наикратчайшим путем , а кругами вдоль перспективных для парковки мест 2 ) при всем этом поездка по маршруту не была супердолгой . Необходимые ( но не достаточные ) фичи - карта с возможностью задавать точки и выполнять построение маршрута , таблица для визуализации , страница подробной статиситики маршрута Своя тема Интересный , содержательный и нужный пользователям сценарий использования Должен быть понятный , достаточный и доступный источник данных - публичный датасет , публичное api доступа к хранилищу данных Должно присутствовать решение задач хранения/анализа/представления/агрегации/импорта и экспорта данных Дополнительный плюс , если есть связь с существующим проектом и/или бакалаврской работой Информация об аналогах Источники данных Помимо ранее упомянутых датасетов , можно также использовать для своей темы : Список SPARQL-endpoint https : //github.com/blog/2298-github-data-ready-for-you-to-explore http : //www.foodpedia.tk/about ? lang=ru http : //www.imdb.com/interfaces https : //www.wikidata.org/wiki/Wikidata : Main_Page Выгрузка данных OSM https : //www.openstreetmap.org/search ? query=saint-petersburg # map=10/59.9471/30.2495 Kaggle - каталог наборов данных Datahub - каталог наборов данных staff/courses/no_sql_introduction/course_work/topics.txt · ",
                "Критерии выставления оценки по итогам курса  Сотрудникам » courses » Введение в нереляционные базы данных » Критерии выставления оценки по итогам курса staff : courses : no_sql_introduction : mark Table of Contents Критерии выставления оценки по итогам курса Общая информация Минимальные условия получения любой оценки Оценка Сроки Критерии выставления оценки по итогам курса Общая информация В курсе балльно-рейтинговая система оценивания . Баллы ( 0-100 ) складываются из : ( индивидуально ) Прохождение онлайн-курса ( 0-40 баллов пропорционально степени прохождения ) ( группа ) Выполнение ИДЗ ( 0-60 баллов ) Как считаются баллы за ИДЗ : выполнение ИДЗ разбито на несколько отдельных , последовательных заданий ( их перечнь в таблице успехов ) , у каждого задания есть срок ( дата , указанная в таблице , на листе Проекты ) , когда его необходимо выполнить и сдать , за каждое сданное задание по ИДЗ ваша команда получает баллы , если задание сдано с опозданием от необходимого срока , то команда получает половину ( 50 % ) от баллов за задание . Минимальные условия получения любой оценки Онлайн-курс , прорешанный на указанное в таблице значение баллов . Сданное задание “ Пояснительная записка ” . Не менее 15 / 10 / 5 ( для Отлично / Хорошо / Удовлетворительно ) коммитов в абсолютном выражении в код проекта от общего числа в репозитории подготовлены студентом ( считается только ветка main ) . Пояснение , для тех мыслит нестандартно : коммиты в код проекта это буквально коммиты в том проектном репозитории , куда вам преподаватель дал доступ для работы над ИДЗ . В эти коммиты не входят коммиты в форки , подключение сабмодулей и коммиты в каких-то других репо , коммиты от лица и за других людей . Аргументы про то , что вы не смогли настроить гит или он у вас не работает не принимаются . Коммиты , где вы только исправляли / загружали картинки / отчет и прочее , что не относится к коду проекта , также не учитывается . Оценка Оценка выставляется только при соблюдении требований предыдущего раздела . “ Отлично ” > = 80 баллов “ Хорошо ” > = 71 балла “ Удовлетворительно ” > = 61 балла Сроки Общая рекомендация - не откладываете сдачу на последний момент . По опыту прошлых лет , если отложить сдачу работ на конец декабря , то можно неожиданно для себя узнать о том , что ваше понимание ИДЗ фундаментально неверено . Не бойтесь задавать вопросы и пытатся что-то сдать - в ваших интересах делать это заранее . По предмету диф.зачет - оценки формируются по итогам работы в семестре и выставляются в ведомость в этом году . Если вы не набрали баллов на оценку - ваша оценка “ Не аттестован ” и вы получаете академическую задолженность , далее - допса ( если дадут направление ) . Дедлайн для любых отправок и исправлений - до 23:59 25.12.23 по Москве , проверка всего присланного позже НЕ БУДЕТ ВЫПОЛНЕНА . Дата выставления текущей оценки из таблицы в ведомость - 10:00 27.12.23 по Москве . Выставление оценок в зачетные книжки - < будет уточнено позже > . Передать зачетку с коллегами - можно . staff/courses/no_sql_introduction/mark.txt · ",
                "ИДЗ - состав , порядок работы  Сотрудникам » courses » Введение в нереляционные базы данных » ИДЗ - состав , порядок работы staff : courses : no_sql_introduction : course_work Table of Contents ИДЗ - состав , порядок работы Порядок выполнения Как работать в репозиториях Как сдавать задания Что такое массовый импорт-экспорт Согласована и сформулирована тема курсовой Установка и настройка выбранной БД + ЯП Use case Модель данных Прототип * App is ready Пояснительная записка . Состав и оформление пояснительной записки Возможные вопросы в процессе сдачи Top secret ИДЗ - состав , порядок работы Порядок выполнения Для того , чтобы минимизировать риски неудачного создания пояснительной записки/приложения в последний момент , предлагается следующая последовательность шагов : Как работать в репозиториях Все требования по работе в репо перечислены в описаниях заданий ниже . Создавать специально для меня PR НЕ НУЖНО . Ждать моей проверки на ваших PR - бессмысленно : ( Я проверяю только содержимое ветки main - прошу к моменту сдачи заданий мержить наработки в main . Как сдавать задания На всякий случай , как оказалось , не все этот момент увидели в списке ниже - все задания по курсу сдаются путем написания письма преподавателю . Как и что писать - указано ниже . Команда внимательно читает требования ниже , убеждается , что их результат соответствует описанию . Команда внимательно смотрит в README своего репозитория и убеждается , что там напротив сдаваемого задания ( все кроме 0 ) стоит метка Passing зеленого цвета . Один участник команды ( кого команда уполномочила сдавать это задание ) пишет письмо преподвателю с темой “ [ NoSQL ] Название_задания - номер_И_название_проекта ” . Остальные участники указываются в копии письма . Переписка по одному заданию остается в рамках одной цепочки писем . Если вам необходимо указать на объект в репозитории , предоставьте полную ссылку на него ( такую , которая откроется по нажатию в браузере ) . Если вы отправляете скринкаст - присылайте ссылку на него ( прикладывать к письму не нужно ) . Желательно , чтобы все участники команды сдали примерно одинаковое количество заданий ИДЗ ( == этапов , описанных ниже ) . Что такое массовый импорт-экспорт В каждой из ИДЗ необходимо реализовать функциональность массового импорта-экспорта . Что она подразумевает : возможность импорта экспорта всех данных из системы в машино-читаемом формате ( json , xml , csv … . на ваш выбор ) пользовательские интерфейсы для импорта и экспорта Зачем это нужно : потренироваться в создании простого модуля бакапа посмотреть , какие возможности предоставляет ваша СУБД для работы с дампами БД Согласована и сформулирована тема курсовой Выбрать тему и согласовать ее с преподавателем . Вам нужно письмом : Предложить свое виденье того , как будет устроено приложение . Озвучить используемые инструменты ( язык программирования и БД ) , либо посоветоваться с преподавателем . Получить ( и проверить ) доступ в репозиторий Установка и настройка выбранной БД + ЯП Смысл данного задания - сделать минимально работоспособный пример ( скрипт для командной строки ) работы “ выбранной БД + ЯП ” на выбранном вами языке программирования , продемонстрировать его работоспособность в виде скринкаста и залить в репо . Для того , чтобы исключить на поздних этапах проекта проблемы совместимости . Скрипт может быть быть просто HelloWorld - не связанным с ИДЗ . Результат : На вашем компьютере можно создать и запустить пример ( см выше ) для выбранной вами пары “ Язык программирование ” - БД . Приложение должно подключится к БД , записать и прочитать данные из нее . Работа приложения из пункта выше демонстрируется в виде скринкаста ( скринкаст == короткая запись видео с вашего экрана ) . Не заливайте его в репо ( можно с гугл / яндекс диска ) Код приложения выше загружен в репозиторий , в ветку main , каталог hello_world . Делать для этого PR не нужно . Docker на данном этапе не нужен . Use case Презентация про то , как составлять макет и писать сценарии использования ( +типичные ошибки ) Результат размещен на вики в виде одной страницы “ Макет и сценарий использования ” : У вас есть формулировки основных сценариев использования приложения ( текст , размещенный на вики , а не ссылка на документ ) и макета его пользовательского интерфейса ( большое изображение ) , размещенные на вики вашего репозитория . Макет изображен в виде графа ( https : //hsto.org/files/026/cab/55a/026cab55a5ad4a1daab209c39715b947.png ) . Файл макета загружен в репозиторий под названием ui_mockup.png ( jpg , svg ) , макет вставлен как изображение на вики . Каждый экран на макете имеет или уникальное осмысленное название или номер , по которому его можно идентифицировать . Дублировать экран на макете не нужно - если есть какое-то поведение , которое вы хотите показать и для этого нужно дублирование экрана , лучше опишите его в сценарии использования . Все надписи и элементы на макете различимы и читаемы . Макет включает в себя элементы управления для массового импорта/экспорта данных и построения кастомизируемой статистики . Вы знаете какие из сценариев использования вы сможете продемонстрировать в рамках прототипа . На что стоит обратить внимание при составлении макета ( типовые ошибки ) : Если у вас в макете фигурирует какая-то сущность ( пользователь , поставщик , автомобиль , животное , здание … ) , которая фигурирует во множественном числе , у нее обязательно должна быть страница для просмотра одного элемента ( страница пользователя , поставщика … ) , если элемент подразумевает редакитрование , то надо на этой же странице добавить даты создания и редактирования элемента , почти всегда будет в кассу дополнять такую страницу полем “ Комментарий ” , где пользователи смогут хранить произвольную информацию , которая не укладывается в модель ( но это не приглашение использовать это поле в качестве мусорки ) , страница поиска элементов по всем полям ( поиск пользователей , поставщиков … ) и отображение результатов в виде таблицы . Если логика вашего приложения подразумевает какие-либо процессы ( например - трекинг задач у программистов , почтовые отправления , заказы в Интернет-магазине ) или хотя бы переменные статусы ( например - у сотрудника могут быть статусы Уволен , Уволился сам , В отпуске , Работает , Сокращен , ) , то важно в макете предсмотреть просмотр и поиск по истории изменения состояний статуса с привязкой ко времени . Как правило , в большинстве проектов нужны интерфейсы поиска сразу по нескольким сущностям ( коллекциям ) - например , все курьеры , на которых есть Н незакрытых заказов , Модель данных Подготовить страницу на вики репозитория под названием “ Модель данных ” . Результат ( на вики ) : На вики странице есть два раздела “ Нереляционная модель ” “ Реляционная модель ” “ Сравнение моделей ” , “ Вывод ” Нереляционная модель ( для вашей СУБД ) Графическое представление модели ( сущности и связи , типы данных , коллекции - можно использовать ER-диаграмму , можно json-схему , если она применима к вашему типу СУБД ) Описание назначений коллекций , типов данных и сущностей Оценка объема информации , хранимой в модели ( сколько потребуется памяти , чтобы сохранить объекты , как объем зависит от количества объектов - нужно выразить через переменную ( количество одного из видов объектов вашей БД ) ) . У вас должна получится формула - зависимость объема от одной переменной . Избыточность модели ( отношение между фактическим объемом модели и “ чистым ” объемом данных ) .. У вас должна получится формула - зависимость избыточности от одной переменной . Направление роста модели при увеличении количества объектов каждой сущности . Запросы к модели , с помощью которых реализуются сценарии использования Текст запросов Количество запросов для совершения юзкейсов в зависимости от числа объектов в БД и прочих параметров Количество задействованных коллекций ( если есть ) “ Реляционная модель ” - Аналог модели данных для SQL СУБД - характеризуется аналогично нереляционной ( см . подпункты выше ) “ Сравнение моделей ” Удельный объем информации ( сколько потребуется памяти , чтобы сохранить объекты , как объем зависит от количества объектов ) - где данные занимают больший объем при прочих равных ( http : //se.moevm.info/doku.php/staff : courses : no_sql_introduction : calculating_data_model_size ) Запросы по отдельным юзкейсам : Количество запросов для совершения юзкейсов в зависимости от числа объектов в БД и прочих параметров Количество задействованных коллекций ( если есть ) “ Вывод ” - что лучше , SQL или NoSQL модель Есть примеры хранения данных в БД . Прототип * Подготовить прототипы приложения ( “ Хранение и представление ” и “ Анализ ” ) . Результат : Приложение компилируется и реализует оговоренные сценарии использования через пользовательский интерфейс . Исходники и исполняемые файлы собранного приложения лежат в репозитории , там поставлен тег 0.5 ( 0.8 ) . Что такое тег - https : //git-scm.com/book/ru/v2/ % D0 % 9E % D1 % 81 % D0 % BD % D0 % BE % D0 % B2 % D1 % 8B-Git- % D0 % A0 % D0 % B0 % D0 % B1 % D0 % BE % D1 % 82 % D0 % B0- % D1 % 81- % D1 % 82 % D0 % B5 % D0 % B3 % D0 % B0 % D0 % BC % D0 % B8 Про пользовательский интерфейс , роли и пользователей : Пожалуйста , не создавайте несколько разных и несвязанных интерфейсов ( на разных контейнерах вашей системы ) - сделайте один интерфейс для всех ролей и пользователей . В первую очередь реализуйте авторизацию через логин и пароль , затем ( если у вас есть такое желание - не обязательно ) - иными способами . Что подразумевает прототип “ Хранение и представление ” - приложение запускается , позволяет просматривать содержимое БД с помощью таблиц / списков выполняет одну из следующих функций : или позволяет добавление новых элементов данных в БД , или предоставляет интерфейсы для поиска ( фильтрации ) данных , если в приложении есть авторизация , то в нем должны по умолчанию присутствовать по одному отладочному пользователю на каждую роль , сами пользователи и их данные указаны в README вы можете продемонстрировать выполнение всех пунктов выше скринкастом ( не более двух минут - сключите запись процесса компиляции / загрузки и тд ) или работоспособного процесса сборки из репо через docker-compose Что подразумевает прототип “ Анализ ” - выполненны требования “ Хранение и представление ” приложение разворачивается через docker-compose build –no-cache из репозитория на ubuntu 22.04+ , сервер вашей СУБД добавлен docker-compose.yml как отдельный контейнер ( == вы не используете БД извне ваших контейнеров , у вас есть контейнер db ) , типовые ошибки по данному пункту : не выставляйте порт БД наружу дополняйте маппинг портов указанием локального интерфейса везде , например '127.0.0.1:8081:8081' не монтируйте локальные каталоги , монтируйте volume ( если вам нужны исходники / файлы проекта , то лучше копируйте их на этапе сборки образа ) для контейнера СУБД ( за исключением memcached и других хранилищ в памяти ) обязательно должен использоватся volume , куда будет монитроватся директория с данным СУБД всегда указывайте конкретный тег ( версию ) для образов . тег latest указывать нельзя не выности мапинг портов в переменные среды - в этом нет необходимости , его можно захардкодить вполне добавлена недостающая часть ( либо добавление элементов , либо поиск ) , поиск элементов реализован следующим образом - для каждого поля сущности есть отдельное поле ( или поля ) ввода поискового запроса , что позволяет искать по сложным запросам , например “ найди всех сотрудников , у которых пол мужской , дата рождения до 15.01.2002 , имя - Олег ” . Ориентируйтесь на подробные фильтры в интернет-магазинах . поиск в любых текстовых полях обязательно регистронезависимый и по подстроке ( не по полному совпадению ) как нелья реализовывать поиск по нескольким атрибутам : в виде одного поля ввода ( input ) и выпадающего списка / radiobutton с выбором поля , для которого будет использоваться введенный текст подумайте , а что вам за ваш фильтр скажут на собеседовании / на текущей работе ? Если на ум приходят нецензурные слова , возможно стоит доработать механизм фильтрации . добавлен импорт и экспорт всех данных приложения в машиночитаемом формате ( XML , JSON , CSV … . ) одним действием ( одна кнопка Импорт импортирует данные сразу для всего приложения , одна кнопка Экспорт экспортирует сразу все данные всего приложения ) , отдельные кнопки для отдельных сущностей делать не нужно . в БД приложения содержится достаточный набор тестовых данных для демонстрации всех реализованных сценариев использования , App is ready Продемонстрировать работоспособность всех сценариев использования на окончательной версии приложения . Приложение компилируется и реализует все сценарии использования . В приложении к представлению данных в виде таблиц добавилась serverside пагинация . В приложение добавлено вычисление и отображение статистики / анализа данных / необходимых вычислений согласно заданию . Вы можете продемонстрировать это через docker-compose + дистанционно / с помощью скринкаста . Исходники и исполняемые файлы собранного приложения лежат в репозитории , там поставлен тег 1.0 . Пояснительная записка . Пояснительную записку можно писать из любого состояния проекта ( не обязательно доводить его до полностью готовой версии ) . Пример - вы сделали задания на Удовлетворительно , соответственно , пишите в записке о том , что у вас получилось . Предоставить пояснительную записку в электронном виде . Результат : Ваша пояснительная записка полностью соответствует требованиям к оформлению ( http : //eltech.ru/assets/files/3004_3_ShABLON-kursovika.doc ) и содержанию ( описание ) Записка выложена в репозиторий в редактируемом формате и pdf ( в корне репозитория созданы файлы report.pdf и report.odt / report.docx ) . Пример хорошей записки https : //github.com/moevm/nosql-2017-lib_card/blob/master/ % D0 % 9F % D0 % BE % D1 % 8F % D1 % 81 % D0 % BD % D0 % B8 % D1 % 82 % D0 % B5 % D0 % BB % D1 % 8C % D0 % BD % D0 % B0 % D1 % 8F % 20 % D0 % B7 % D0 % B0 % D0 % BF % D0 % B8 % D1 % 81 % D0 % BA % D0 % B0.pdf Состав и оформление пояснительной записки Создайте в корне репозитория два файла report.docx ( doc , odt ) и report.pdf . В отчет можно компилировать тексты из предыдущих заданий ( но , пожалуйста , следите за их оформлением : ) . Для оформления вам пригодятся следующие ссылки : Шаблон оформления пояснительной записки к ИДЗ ( отчета ) Сервис для конвертации markdown ( формат вики Github ) в docx Разделы ИДЗ : Введение Актуальность решаемой проблемы Постановка задачи Предлагаемое решение Качественные требования к решению Сценарии использования Макет UI Сценарии использования для задачи импорта данных : как пользователь загружает данные в программу массово ( импорт из файла или внешнего источника ) как пользователь загружает данные в программу вручную представления данных как данные отображаются для пользователя и что он должен сделать для их отображения ( поиск , визуализация в виде графиков и таблиц ) анализа данных какие действия должен сделать пользователь для проведения анализа данных ( подсчет средних , статистик и тд ) экспорта данных как пользователю получить копию хранимых в программе данных в машиночитаемом формате ( JSON , XML , CSV … . ) Вывод о том , какие операции ( чтение или запись ) будут преобладать для вашего решения . Модель данных Нереляционная модель данных ( для вашей СУБД ) Графическое представление Описание назначений коллекций , типов данных и сущностей Оценка удельного объема информации , хранимой в модели ( сколько потребуется памяти , чтобы сохранить объекты , как объем зависит от количества объектов ) Запросы к модели , с помощью которых реализуются сценарии использования Аналог модели данных для SQL СУБД - характеризуется аналогично нереляционной ( см . подпункты выше ) Сравнение моделей Удельный объем информации - где данные занимают больший объем при прочих равных ( http : //se.moevm.info/doku.php/staff : courses : no_sql_introduction : calculating_data_model_size ) Запросы по отдельным юзкейсам : Количество запросов для совершения юзкейсов в зависимости от числа объектов в БД и прочих параметров Количество задействованных коллекций ( если есть ) Сложность запроса Вывод - что лучше , SQL или NoSQL модель Разработанное приложение Краткое описание ( из каких модулей / контейнеров состоит , какую архитектуру вы использовали ) Использованные технологии Снимки экрана приложения Выводы Достигнутые результаты Недостатки и пути для улучшения полученного решения Будущее развитие решения Приложения Документация по сборке и развертыванию приложения Инструкция для пользователя Литература ( обязательно должна быть ссылка на ваш репо ) Возможные вопросы в процессе сдачи Термины из курса и их понимание Обоснования решений из ИДЗ Сравнение с SQL базами данных Top secret Mongo Neo4j Memcached ArangoDB Cassandra DGraph staff/courses/no_sql_introduction/course_work.txt · ",
                "Темы для ИДЗ  Сотрудникам » courses » Введение в нереляционные базы данных » ИДЗ - состав , порядок работы » Темы для ИДЗ staff : courses : no_sql_introduction : course_work : topics Table of Contents Темы для ИДЗ Своя тема Источники данных Темы для ИДЗ Из чего складывается сложность : Доступность датасета Необходимость использовать несколько датасетов Необходимость использовать СУБД не совсем по назначению Алгоритмы Темы в порядке возрастания субъективной сложности . Поле “ Комментарий ” содержит отправную точку для формулировки окончательного задания . Помимо задания , для каждой ИДЗ требуется реализовать массовый импорт-экспорт данных . № Название Предлагаемая СУБД Набор данных/API Комментарий 01 Сервис поиска врачей частной практики MongoDB Синтетические данные Задача - подготовить веб-сервис , которые сводит пациентов и врачей , ведущих частную практику . Категории пользователей - врачи , пациенты , админы . Необходимые ( но не достаточные ) фичи - личные страницы врачей и пациентов , рейтинги и отзывы , статистика , страницы для финансовой стороны вопроса ( реальные платежи подключать не нужно ) - оплаты и статистика , карточки и анализы пациентов . 02 Умный склад на стройплощадке MongoDB Синтетические данные Задача - сделать сервис для учета , отпуска и поступления материалов , нужных для строительства дома . Пользователи - рабочие , прорабы , кладовщики . Необходимые ( но не достаточные фичи ) - аккаунты пользователей , страницы позиций , страница “ Склад ” , статистика , страница для формрования накладных , страница для анализа потребления и прогноза позиций . 03 Информационная система стоматологической клиники MongoDB Синтетические данные Задача - сделать сервис для управления стоматологической клиникой . Пользователи - администраторы ( те , которые сидят на reception ) , врачи , пациенты . Необходимые ( но не достаточные фичи ) - карты пациентов , статистика для бухгалтерии , статистика и динамика больных , хранение снимков , склад и обслуживание оборудования 04 Информационная система сети прачечных Neo4j Синтетические данные Задача - сделать систему для управления сетью максимально автоматизированных прачечных . Пользователи - администратор ( reception ) , директор филиала , владелец бизнеса . Необходимые ( но не достаточные ) фичи - график работы , страница филиала , склад , расчет ЗП , расчет прибыли по филиалам 05 Онлайн-магазин цветов и комнатных растений Neo4j Синтетические данные Задача - сделать сервис для продажи цветов и комнатных растений , который бы учитывал малый срок жизни цветов . Пользователи - продавцы , администраторы , покупатели . Необходимые ( но не достаточные фичи ) - аккаунты пользователей , страницы товаров , страница “ Склад ” , статистика 06 Каталог объявлений о продаже автомобилей Mongo Синтетические данные Задача - сервис , позволяющий размещать объявления о покупке или продаже автомобилей , связывать продавцов и покупателей . Необходимые ( но не достаточные фичи ) - аккаунты продавцов и покупателей , рейтинги и отзывы , страница подробных данных об автомобиле ( пробег , номера двигателя … , марка машины , год , фото …. ) . Пользователи - администраторы , клиенты . 07 Сервис хранения экспериментов инструмента Sumo Neo4j https : //sumo.dlr.de/docs/index.html Задача - сделать простое веб-приложение для импорта / хранения / поиска / визуализации результатов экспериментов в эмуляторе . Необходимые ( но не достаточные ) фичи - список и поиск экспериментов , страница отдельного эксперимента , визуализация , статистика . 08 Сервис хранения экспериментов инструмента pybulletdrones MongoDB https : //github.com/utiasDSL/gym-pybullet-drones Задача - сделать простое веб-приложение для импорта / хранения / поиска / визуализации результатов экспериментов в эмуляторе . Необходимые ( но не достаточные ) фичи - список и поиск экспериментов , страница отдельного эксперимента , визуализация , статистика . 09 Сервис хранения экспериментов инструмента ripes MongoDB https : //github.com/mortbopet/Ripes Задача - сделать простое веб-приложение для импорта / хранения / поиска / визуализации результатов экспериментов в эмуляторе Необходимые ( но не достаточные ) фичи - список и поиск экспериментов , страница отдельного эксперимента , визуализация , статистика . 10 Сервис транскрибции видео и аудио MongoDB Синтетические данные Задача - сделать сервис для организации транскрибции видео и аудиоматериалов с помощью некоторой распределенной инфраструктуры ( это означает , что ресурсы для транскрибции определяются динамически ( администраторами ) и система должна уметь планировать обработку входных данных исходя из текущих мощностей ) . Пользователи - администраторы , пользователи . Необходимые ( но не достаточные фичи ) - страница отдельного задания , профили пользователей , статистика ( для админов , по отдельным серверам транскрибции , по пользователям , по задачам ) , интерфейсы оплаты на заглушках . Саму транскрибцию делать не обязательно , но если очень хочется - можно использовать whisper.ai 11 Сервис климат-контроля InfluxDB Синтетические данные Задача - сделать сервис для сбора данных о климате в протяженном помещении , управлении климатической техникой , мониторинге ее состояния . Необходимые ( но не достаточные фичи ) - визуализация состояния помещений , страницы приборов , настройки стратегий работы приборов , уведомления о расходниках 12 Сервис составления генеалогических деревьев Neo4j Синтетические данные Задача - сервис , позволяющий различным пользователям вести свои родословные древа , анализировать их , находить похожие , предлагать мержи деревьев . Необходимые ( но не достаточные фичи ) - аккаунты пользователей , страница родословного древа , страница рекомендаций , предоставления доступа к древу , страница мержа 13 Хаб данных умной фермы InfluxDB + Mongo Синтетические данные Задача - сделать приложение для автоматизированного мониторинга тепличной фермы овощей . Пользователи - рабочие , бригадиры , владельцы бизнеса . Необходимые ( но не достаточные фичи ) - страницы пользователей , страница для работы с нарядами рабочих и бригадиров , склад ( собранная продукция , расходники ) , инциденты , график дежурств , инфраструктура 14 Телеграм-бот для вывода данных из таблиц MongoDB Синтетические данные Задача - сделать простого бота , который сможет решать задачу “ покажи мне строку по запросу А из таблицы Б ” . Для определенности можно считать , что такой бот нужен для курсов МОЭВМ , чтобы скрывать от студентов всю таблицу успеваемости и показывать студенту только его собственную строчку . Таблиц / студентов / преподов может быть много . Необходимые ( но не достаточные ) фичи - веб-интерфейс для администрирования и настройки , страница со списком подключенных таблиц , страница для настройки отдельной таблицы ( где расположен идентификатор студентов , какие колонки игнорировать ) , таблица админов , логи , статистика доступа 15 Телеграм-бот для напоминаний преподавателям о новых записях в таблице MongoDB Синтетические данные Задача - сделать простого бота , который сможет решать задачу “ пришли пользователю уведомление , если его _неким_ образом упомянули в таблице ” . Для определенности можно считать , что такой бот нужен для преподавателей МОЭВМ , которые ждут появления студенческих отправок в определенной таблице . Преподов и таблиц может быть много . Необходимые ( но не достаточные ) фичи - веб-интерфейс для администрирования и настройки , страница со списком подключенных таблиц , страница для настройки отдельной таблицы ( настройки текста уведомления , где расположен идентификатор препода , критерий для уведомления ) , таблица админов , логи , статистика доступа , статистика по уведомлениям ( когда кому отправлены , кто читал ) 16 Сервис хранения данных биржевой торговли forex MongoDB Синтетические данные Задача - веб приложение , которое будет хранить / обеспечивать поиск / анализ и визуализацию данных о рынке по указанным периодам / запросам / валютным парам . Необходимые ( но не достаточные ) фичи - списки валютных пар , страница архива , визуализация отдельного сигнала на графике для конкретной валютной пары , анализ для сигнала 17 Сервис сбора и визуализации логов Apache2 InfluxDB Синтетические данные Задача - создать приложение , которое аггрегирует логи Apache2 в influx . https : //github.com/influxdata/telegraf/blob/master/plugins/inputs/tail/README.md , https : //github.com/influxdata/telegraf/blob/master/plugins/parsers/grok/README.md . Необходимо поддержать одновременно все файлы логов apache - access.log , error.log , other_vhosts_access.log , а также время загрузки странци как один из элементов данных . Необходимые ( но не достаточные ) фичи - таблица поиска по всем логом с фильтром , страница отдельной записи в логе , кастомизируемая статистика ( по хостам , ip клиентов , кодам ошибок , времени загрузки страниц ) 18 Построение графа ссылок на веб-страницах Neo4j Синтетические данные Задача в рамках ИДЗ - сделать систему обхода всех веб-страниц и ссылок на сайте для составления графа и его анализа . Необходимые ( но не достаточные ) фичи - список обработанных сайтов , страница визуализации графа ссылок , анализ графа ( изолированные компоненты , длина пути от главной страницы ) . 19 Сервис для планирования кабельных сетей Neo4j Синтетические данные Задача в рамках ИДЗ - сделать систему для проектирования и анализа кабельной инфраструктуры зданий ( локальные сети ) . Необходимые ( но не достаточные ) фичи - список проектов , сводка по проекту , поэтажные планы , анализ проекта ( сколько нужно кабелей , оборудования , расходников для монтажа ) , визуализация проекта в виде графа . 20 Каталог учебных планов и программ Neo4j https : //etu.ru/sveden/education/eduop/ Задача - сделать сервис для управления и визуализацией ( в виде графа ) учебных программ и планов в рамках ВУЗа . Пользователи - преподаватели , студенты . Необходимые ( но не достаточные фичи ) - страница учебной программы , учебной дисциплины , анализ учебных планов ( общие дисциплины , отличия , сложность ) . 21 Сервис поддержки ЖКХ Neo4j OSM Задача - сделать сервис фиксации проблем с ЖКХ инфраструктурой ( стрижка газонов , неполадки в трубах , покраска … ) , планирования регулярных и внеплановых работ , формирования ответов на обращения собственников . Необходимые ( но не достаточные фичи ) - аккаунты собственников и ЖКХ-администраторов , визуализация на карте , подача и дискуссии по обращениям 22 Сервис оценки земельных участков Neo4j Avito + OSM Задача - подготовить веб-сервис , который реализует каталог участков , а также механику их оценки . Смысл сервиса - позволить добавлять в систему полные данные об участках координаты всех узловых точек и проводить на базе формы , окружающего ландшафта и соседей оценку , например : сколько соседских домов , как далеко водоем / остановка / магазин , насколько участок ниже / выше соседей . Необходимые ( но не достаточные ) фичи - личные страницы пользователей , рейтинги и отзывы пользователей и участков , визуализация и поиск на карте , страницы отдельных участков с подробными данными . 23 Составление маршрутов интересных пеших прогулок по СПБ Neo4j Wikimapia + OSM Задача - сделать сервис для составления пеших маршрутов по Санкт-Петербургу . Пользователи - администраторы , пользователи . Необходимые ( но не достаточные фичи ) - личные странциы , страницы маршрутов , страница генерации маршрута ( задаем настройки - интересы , протяженность - учитываем время года , ширину тротуаров ) 24 Сервис “ Crowd-редакция ” Neo4j Синтетические данные + wikibooks Задача - подготовить веб-сервис , который реализует вычитку и редактирование книг силами сообщества ( crowdsourcing ) . Одни и теже пользователи могут быть как авторами , так и редакторами . Необходимые ( но не достаточные ) фичи - личные страницы пользователей , рейтинги и отзывы пользователей , статистика рецензий , списки рецензий , страницы отдельных резцензий , страницы книг . 25 Сервис локального ( на базе нескольких репо ) антиплагиата для естественного языка MongoDB Синтетические данные Задача - веб приложение , которое будет выгружать , версионировать ( Используя данные гита ) данные из набора гитхаб-репо ( кастомизируются пользователями ) , хранит эти данные для удобства синтаксического анализа и формирует отчеты по возможному плагиату между пользователями репо . Необходимые ( но не достаточные ) фичи - настройки списка репозиториев ( откуда берем данные , по каким шаблонам ищем тексты ) , отчеты о проверках , статистика по пользователям репо / файлам 26 Визуализатор и анализатор электронной почты в виде графа Neo4j Синтетические данные Задача - сделать сервис , который позволяет визуализировать и анализировать электронную почту с помощью графов . Вершины - письма и авторы , ребра - хронология ( цепочки писем ) , связи между авторами ( работа ) . Необходимые ( но не достаточные ) фичи - визуализация в виде графа , настройки , аналитика ( самые длинные цепочки , корреспонденты , сроки ответов … ) , таблица поиска писем 27 Сервис редактирования и автоматического составления расписания в ВУЗе Mongo Расписание ЛЭТИ Задача - сервис , позволяющий принимать пожелания от преподавателей , принимать данные об аудиториях и их вместимости , данные учебных планов ( предметы / курсы / группы ) , данные о студентах ( сколько в какой группе человек , какие группы к каким направлениям относятся . Необходимые ( но не достаточные фичи ) - автоматическое составление расписания ( исходя из предоставленных ограничений ) , визуализация и редактирование расписания , логика согласования расписания ( препод выссказал пожелание , админ поправил , препод одобрил ) , анализ составленного расписания ( насколько равномерно используются аудитории , насколько студентам / преподам нужно между парами бегать в новую аудиторию ) . Пользователи - преподаватели , администраторы , студенты . 28 Построение маршрутов по рекам и каналам Neo4j OpenStreetMaps Задача - максимально смоделировать данные о реках / каналах СПБ , а также объектах инфраструктуры ( причалы , пирсы , знаки для водного транспорта , мосты ) , обеспечить построение маршрутов и вычисление статистики . Необходимые ( но не достаточные ) фичи - визуализация на карте и графом , поиск и составление маршрутов по карте , таблица для просмотра данных системы , анализ маршрутов , анализ карты ( “ медвежьи углы ” , потенциальные “ бутылочные горлышки ” ) 29 Юридические документы Neo4j Синтетические данные Смысл проекта - предоставить интерфейс для хранения , версионирования и анализа ( грубого ) юридических документов на русском языке . Варианты анализа : разбиение на предложения , абзацы , идентификация пунктов по ключевым словам , поиск формулировок-обязательств / требований ….Необходимые ( но не достаточные ) фичи - таблица с поиском по документам , страница документа , статистика по документу , общие термины документов 30 Карта транспортной доступности водоемов севера Ленинградской области Neo4j OSM Задача в рамках ИДЗ - сделать систему для построения и анализа графа транспортной доступности водоемов ( реки , озера , водохранилища ) севера ЛО . Необходимые ( но не достаточные ) фичи - список водоемов , страница визуализации графа , анализ графа ( сортировка по доступности , изолированные узлы ) . 31 ИС Справочник Музеев Memcached https : //opendata.mkrf.ru/opendata/7705851331-museums Тема аналогична “ ( Сложно ) ИС Справочник образовательных организаций Санкт-Петербурга ” 32 ИС Справочник образовательных организаций Санкт-Петербурга Memcached https : //petersburgedu.ru/institution/ Цель - создать каталог , хранящий максимум информации обо всех организациях . Задачи - хранение всех доступных полей , организация поиска , аггрегации , изменения данных каталога . Модель данных нужно построить так , чтобы на клиенте требовалась минимальная обработка ( скоррее всего , вам предстоит сделать очень много дублирования данных ) . Необходимые ( но не достаточные ) фичи - таблица с поиском , страница отдельной организации , статистика 33 Cервис для дизайна мозаек Neo4j Синтетические данные Идея - вам очень захотелось превратить любимую картинку в мозаику из керамической плитки у себя на даче , для этого вам необходимо как-то прикинуть из каких частей оно будет состоять , сколько и какой плитки вам нужно закупить ( по цвету и площади ) , как эту плитку раскроить и как ее наклеить ( в каком порядке ) . Задача в рамках ИДЗ - сделать систему для автоматического ( можно придумать свое , можно уже готовое https : //github.com/nuno-faria/tiler ) построения керамических мозаек из изображений , а также для генерации инструкций по сборке и расчета количества цветных плиток . Необходимые ( но не достаточные ) фичи - список готовых мозаик , загрузка и обработка нового изображения , визуализация в виде графа , анализ и сводка по мозаике ( сколько и каких плиток нужно , сколько метров реза вам нужно проделать ) , инструкция по нарезке , инструкция по сборке . 34 Построение маршрутов с учетом плохой парковки Neo4j Открытые данные OpenStreetMap Необходимо взять в качестве демо данных квадрат карты , где находится Петроградский район и для него создать приложение , которое позволит строить маршруты из точки А в точку Б так , чтобы 1 ) при подъезде к точке Б нужно вести водителя не наикратчайшим путем , а кругами вдоль перспективных для парковки мест 2 ) при всем этом поездка по маршруту не была супердолгой . Необходимые ( но не достаточные ) фичи - карта с возможностью задавать точки и выполнять построение маршрута , таблица для визуализации , страница подробной статиситики маршрута Своя тема Интересный , содержательный и нужный пользователям сценарий использования Должен быть понятный , достаточный и доступный источник данных - публичный датасет , публичное api доступа к хранилищу данных Должно присутствовать решение задач хранения/анализа/представления/агрегации/импорта и экспорта данных Дополнительный плюс , если есть связь с существующим проектом и/или бакалаврской работой Информация об аналогах Источники данных Помимо ранее упомянутых датасетов , можно также использовать для своей темы : Список SPARQL-endpoint https : //github.com/blog/2298-github-data-ready-for-you-to-explore http : //www.foodpedia.tk/about ? lang=ru http : //www.imdb.com/interfaces https : //www.wikidata.org/wiki/Wikidata : Main_Page Выгрузка данных OSM https : //www.openstreetmap.org/search ? query=saint-petersburg # map=10/59.9471/30.2495 Kaggle - каталог наборов данных Datahub - каталог наборов данных staff/courses/no_sql_introduction/course_work/topics.txt · ",
                "Литература  Сотрудникам » courses » Введение в нереляционные базы данных » Литература staff : courses : no_sql_introduction : literature Table of Contents Литература Видео лекции Онлайн-курсы Литература и интернет-ресурсы Литература Видео лекции Крайне рекомендуется к просмотру : Введение в базы данных , Вадим Цесько , Видео Онлайн-курсы Курс `` Введение в Linux '' - данный курс желательно пройти для комфортной работы с нереляционными БД , так как все примеры будут на Linux . Introduction to MongoDB using the MEAN Stack Neo4J courses Курс `` Введение в базы данных '' Курс `` Программирование на Python '' Литература и интернет-ресурсы Хайлоад Мартин Фаулер , Прамодкумар Дж . Садаладж . “ NoSQL . Новая методология разработки нереляционных баз данных ” Эрик , Р. Семь баз данных за семь недель . Введение в современные базы данных и идеологию NoSQL . [ Электронный ресурс ] / Р. Эрик , Р.У . Джим .. — Электрон . дан . — М. : ДМК Пресс , 2013 . — 384 с . — Режим доступа : http : //e.lanbook.com/book/58690 — Загл . с экрана . Мухина , Ю.Р . ОБЗОР NоSQL РЕШЕНИЙ УПРАВЛЕНИЯ ДАННЫМИ . [ Электронный ресурс ] — Электрон . дан . Управление в современных системах . — 2013 . — № 1 . — С . 68-73 . — Режим доступа : http : //e.lanbook.com/journal/issue/294838 — Загл . с экрана . К. Дж . Дейт . Введение в системы баз данных = An Introduction to Database System , 7th Edition . — 7-е изд . — М. : Вильямс , 2001 . — С . 1072. staff/courses/no_sql_introduction/literature.txt · ",
                "Импорт данных из внеших источников  Сотрудникам » courses » Введение в нереляционные базы данных » Импорт данных из внеших источников staff : courses : no_sql_introduction : db_import Импорт данных из внеших источников Neo4j Effective Bulk Data Import into Neo4j Import 10M Stack Overflow Questions into Neo4j In Just 3 Minutes MongoDB mongoimport Import Example Dataset Bulk Write Operations staff/courses/no_sql_introduction/db_import.txt · ",
                "Как составить UseCase ( сценарий использования ) и макет пользовательского интерфейса  Сотрудникам » courses » Введение в нереляционные базы данных » Как составить UseCase ( сценарий использования ) и макет пользовательского интерфейса staff : courses : no_sql_introduction : mockup_and_usecase Как составить UseCase ( сценарий использования ) и макет пользовательского интерфейса Макет пользовательского интерфейса Лекция про составление макета и сценария использования Пример практически идеального макета Пример веб-сервиса для создания макетов app.moqups.com ( сервис может быть другим ) staff/courses/no_sql_introduction/mockup_and_usecase.txt · ",
                "Вычисление объема модели данных  Сотрудникам » courses » Введение в нереляционные базы данных » Вычисление объема модели данных staff : courses : no_sql_introduction : calculating_data_model_size Table of Contents Вычисление объема модели данных Полезные материалы Примеры Вычисление объема модели данных Полезные материалы На данной странице будут собираться материалы о том , как оценить и измерить объем БД для различных СУБД . MongoDB Типы данных https : //docs.mongodb.com/manual/reference/bson-types/ https : //www.tutorialspoint.com/mongodb/mongodb_datatype.htm Фактический объем БД https : //docs.mongodb.com/manual/reference/method/db.collection.dataSize/ https : //docs.mongodb.com/manual/reference/command/dbStats/ Neo4j Типы данных http : //neo4j.com/docs/2.1.5/graphdb-neo4j-properties.html Фактический объем БД : du -sh { $ NEO4J_HOME } /data/graph.db Для углубленного изучения https : //neo4j.com/developer/kb/understanding-data-on-disk/ Memcached https : //www.phase2technology.com/blog/using-command-line-get-memcache-statistics ArangoDB Типы данных https : //docs.arangodb.com/3.0/AQL/Fundamentals/DataTypes.html Фактический объем БД https : //github.com/arangodb/arangodb/issues/576 Примеры https : //github.com/moevm/nosql1h19-right-route/wiki/Data-model https : //github.com/moevm/nosql2h19-3d/wiki/Data-Model https : //github.com/moevm/nosql1h19-wikig-raph/wiki/Data-model https : //github.com/moevm/nosql2h19-rosbag/wiki staff/courses/no_sql_introduction/calculating_data_model_size.txt · ",
                "staff : courses : no_sql_introduction : mongo_query_across_levels  Сотрудникам » courses » Введение в нереляционные базы данных » mongo_query_across_levels staff : courses : no_sql_introduction : mongo_query_across_levels Задача : в БД с данными о видах и конкретных особях животных найти тех , кто питается одинаковым кормом . Исходные данные : db.animals.insert ( { animal_type : '' l1 '' , individuals : [ { name : `` '' , text : `` '' , feed : [ 1 , 2 ] } , { name : `` '' , text : `` '' , feed : [ 3,4 ] } ] } ) db.animals.insert ( { animal_type : '' l2 '' , individuals : [ { name : `` '' , text : `` '' , feed : [ 1 , 2 ] } , { name : `` '' , text : `` '' , feed : [ 2 ] } ] } ) db.animals.insert ( { animal_type : '' l3 '' , individuals : [ { name : `` '' , text : `` '' , feed : [ 1 , 2 ] } , { name : `` '' , text : `` '' , feed : [ 3 ] } ] } ) Решение : db.animals.find ( { 'individuals.feed ' : 3 } ) Вывод : { `` _id '' : ObjectId ( `` 5834832075ec6ecba9a62c11 '' ) , `` animal_type '' : `` l1 '' , `` individuals '' : [ { `` name '' : `` '' , `` text '' : `` '' , `` feed '' : [ 1 , 2 ] } , { `` name '' : `` '' , `` text '' : `` '' , `` feed '' : [ 3 , 4 ] } ] } { `` _id '' : ObjectId ( `` 5834833975ec6ecba9a62c13 '' ) , `` animal_type '' : `` l3 '' , `` individuals '' : [ { `` name '' : `` '' , `` text '' : `` '' , `` feed '' : [ 1 , 2 ] } , { `` name '' : `` '' , `` text '' : `` '' , `` feed '' : [ 3 ] } ] } staff/courses/no_sql_introduction/mongo_query_across_levels.txt · ",
                "✎ Введение в нереляционные базы данных  Сотрудникам » courses » Введение в нереляционные базы данных staff : courses : no_sql_introduction This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Введение в нереляционные базы данных ====== ==== Что нужно сделать в первую очередь ==== * Добавить свое имя и фамилю в ваши аккаунты на Github.com и http : //e.moevm.info . * Выбрать из [ [ staff : courses : no_sql_introduction : course_work : topics|списка тем для ИДЗ ] ] . * Решить , с кем вы хотите работать совместно в проекте ( 3 человека ) * [ [ https : //forms.gle/d91k6ejHomSMnpte7| Зарегистрироваться в форме ] ] ( пока закрыто , откроется во время первой пары ; если не понимаете , какой проект и с кем хотите - не страшно , можно будет отредактировать заполнение формы потом ) * Вступить в онлайн-курс по [ [ http : //e.moevm.info/course/view.php ? id=11|ссылке ] ] и начать решать . Если есть вопросы , то ознакомтесь с [ [ https : //docs.google.com/presentation/d/1JuoMv7eJ2Z1_CRVh58fZjpR4yDSF3TCaX99W2F0BCaU/edit|Вводной презентацией ] ] . ==== ИДЗ , оценка , текущий контроль ==== * [ [ staff : courses : no_sql_introduction : mark|Критерии выставления оценки по итогам курса ] ] . * [ [ staff : courses : no_sql_introduction : course_work|ИДЗ - состав , порядок работы ] ] . * [ [ staff : courses : no_sql_introduction : course_work : topics| Список тем для ИДЗ ] ] * [ [ https : //docs.google.com/spreadsheets/d/1mOdWylUHkB8SrBND8HQyPcK2po8QYdHQ0G_27Rvh2jU/edit ? resourcekey # gid=1317688922| * * ТАБЛИЦА УСПЕХОВ * * ( привязка к проектам , текущий контроль , статистика репозиториев ( beta ) ) ] ] * [ [ https : //drive.google.com/drive/folders/1f5f700toQ9OooJuuAVWBx_PWO75Fl3HX ? usp=sharing|Лекции ( слайды ) ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfoq19JkdYJ99bVgAjEZzNths|Записи лекций 2021 ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfooPRtHnH7m2sKPsJX4f3ppd|Записи лекций 2020 ] ] * [ [ https : //bitbucket.org/mark_zaslavskiy/nosql_inroduction/src/master/examples/|Репозиторий с примерами ( work in progress ) ] ] . * [ [ https : //bitbucket.org/mark_zaslavskiy/teaching_meta/src/master/slides/ui_mockup_and_uc.pdf ? at=master & fileviewer=file-view-default|Презентация про то , как составлять макет и писать сценарии использования ( +типичные ошибки ) ] ] ==== Взаимодействие ==== 1 . Добавляйте < note > [ NoSQL ] < /note > в тему своего письма ( да , квадратные скобки тоже нужно добавить ) , иначе оно будет отфильтровано в неправильное место и вы не получите ответ во время . 2 . Не создавайте новые ветки обсуждений , старайтесь вести переписку в рамках одной ветки . 3 . Проверка начинается только после того , как вы напишите преподавателю письмо о готовности задания . ==== Рекомендованные источники информации ==== * [ [ staff : courses : no_sql_introduction : literature|Теория ( основные материалы ) ] ] * Сэкономит время при подготовке ИДЗ : * [ [ staff : courses : no_sql_introduction : db_import|Импорт данных из внеших источников ] ] * [ [ staff : courses : no_sql_introduction : mockup_and_usecase ] ] * [ [ staff : courses : no_sql_introduction : calculating_data_model_size ] ] * Совместное использование нескольких СУБД ( Polyglot persistence ) и миграция данных ( пригодится тем , у кого в задании несколько СУБД ) : * [ [ https : //neo4j.com/blog/neo4j-doc-manager-polyglot-persistence-mongodb/|Neo4j Doc Manager - инструмент для интеграции mongodb и neo4j ] ] * [ [ https : //www.mongodb.com/presentations/migration-from-sql-to-mongodb-a-case-study-at-theknot-com|Migration from SQL to MongoDB - A Case Study at TheKnot.com ] ] * [ [ http : //mongify.com/|Mongify - Move data from SQL to MongoDB with ease ] ] * [ [ http : //www.querymongo.com/|Convert MySQL Queries to MongoDB Syntax ] ] * [ [ http : //db-engines.com/en/ranking|Рейтинги СУБД ( NoSql VS SQL ) ] ] * [ [ staff : courses : no_sql_introduction : mongo_query_across_levels|MongoDB - Как делать запрос через несколько уровней вложенности ] ] staff/courses/no_sql_introduction.txt · ",
                "Введение в нереляционные базы данных - Old revisions  Сотрудникам » courses » Введение в нереляционные базы данных staff : courses : no_sql_introduction Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/01/31 08:11 Введение в нереляционные базы данных mark -238 B ( current ) 2023/08/21 13:13 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark +1 B 2023/08/21 13:13 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark ±0 B 2023/08/21 09:29 Введение в нереляционные базы данных mark +96 B 2022/12/10 09:08 Введение в нереляционные базы данных – external edit 127.0.0.1 ±0 B 2022/08/23 15:20 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark ±0 B 2022/08/23 14:26 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark ±0 B 2022/01/18 15:09 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark +4 B 2021/10/01 05:46 Введение в нереляционные базы данных mark +110 B 2021/08/31 11:45 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark +84 B 2021/08/31 10:09 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark +205 B 2021/08/24 09:21 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark +12 B 2021/08/24 09:21 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark ±0 B 2021/08/17 12:38 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark +125 B 2021/01/29 13:34 Введение в нереляционные базы данных mark +352 B 2020/09/13 18:50 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark +15 B 2020/09/07 13:08 Введение в нереляционные базы данных – [ ИДЗ , оценка , текущий контроль ] mark ±0 B 2020/09/07 11:32 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark ±0 B 2020/09/07 11:24 Введение в нереляционные базы данных – [ Что нужно сделать в первую очередь ] mark -186 B 2020/08/27 16:21 Введение в нереляционные базы данных mark +1 B 2020/08/27 09:51 Введение в нереляционные базы данных – external edit 127.0.0.1 ±0 B Show differences between selected revisions less recent > > staff/courses/no_sql_introduction.txt · ",
                "Введение в нереляционные базы данных - "
            ]
        },
        {
            "name": "Основы подготовки научных публикаций",
            "url": "/doku.php/staff:courses:sci_writing",
            "date": "\"2024/01/26 07:51\"",
            "data": [
                "Основы подготовки научных публикаций  Сотрудникам » courses » Основы подготовки научных публикаций staff : courses : sci_writing Table of Contents Основы подготовки научных публикаций Коммуникация Начало работы Материалы курса Дополнительные материалы Основы подготовки научных публикаций Коммуникация Для того , чтобы ваши письма не потерялись , указывайте следующую строчку ( да , квадратные скобки тоже нужно указать , они не просто так ) [ SW ] в теме любых писем по данному курсу . Начало работы Поставить в профилях Stepik и Github свои настоящие имя и фамилию . Заполнить форму https : //forms.gle/1BFRmBVR3Dgsiy9R8 . Вступить в онлайн-класс https : //stepik.org/join-class/c53309dac152babf8d587da151c2a2f769c021dc и начать решение задач . На досуге : Прочитать руководство по формату MD https : //guides.github.com/features/mastering-markdown/ по тому , как встраивать формулы https : //stackoverflow.com/a/12503010 в MD Материалы курса Слайды лекций ( work in progress ) ! ! ТАБЛИЦА РЕЙТИНГА ! ! Практические задания и их сроки ( что и когда вам нужно сделать ) Критерии выставления оценки ( как получить нужную оценку ) Типовые ошибки по заданиям Ассистентам - как оценивать практические задания ( задания 1-2 ) Ассистентам - как оценивать статью ( задание 3 ) Ассистентам - как писать рецензию для конференции Видео лекции 2021 Видео лекции 2020 Дополнительные материалы Как сконвертировать MD в DOCX или ODT Как писать научные статьи Лист быстрой проверки статьи Writing Good Software Engineering Research Papers , Minitutorial Стиль научной статьи - молодой учёный Алгоритм рецензирования staff/courses/sci_writing.txt · ",
                "Основы подготовки научных публикаций - ",
                "",
                "Практические задания и их сроки ( что и когда вам нужно сделать )  Сотрудникам » courses » Основы подготовки научных публикаций » Практические задания и их сроки ( что и когда вам нужно сделать ) staff : courses : sci_writing : plan Table of Contents Практические задания и их сроки ( что и когда вам нужно сделать ) Как интерпретировать сроки Как называть Pull Request Общая идея Задание №1 - выбор темы и ответы на ключевые вопросы ( до 23:59 14.11.23 по Москве ) Задание №2 - Обзор аналогов ( до 23:59 05.12.23 по Москве ) Задание №3 - Сборка статьи ( до 23:59 25.12.23 по Москве ) Практические задания и их сроки ( что и когда вам нужно сделать ) Как интерпретировать сроки Для первого и второго заданий - указан дедлайн первой отправки ( если ваша первая отправка PR происходит позже , то вы получаете меньше баллов ) . Для третьего задания - указан дедлайн последней отправки . Не гарантируется проверка PR , отправленных позже срока . Как называть Pull Request < фамилия_инициалы ( транслитом ) > _ < номер_задания > Общая идея Практические задания курса преследуют несколько целей : заняться темой ВКР как можно раньше , выполнить постановку задачи по ВКР , изучить картину предметной области . Практические задания курса могут быть посвящены как основному направлению работы над ВКР , так и отдельной задаче в рамках ВКР . Соответственно , слово “ решение ” употребляемое в заданиях может не относится ко всей вашей ВКР целиком , а только к ее части . Результаты выполнения предшествующих практических заданий могут менятся и переосмыслятся в последующих заданиях , например , нормально скорректировать ответы на ключевые вопросы ( задание 1 ) когда вы приступаете к обзору аналогов ( задание 2 ) и скорректировать ответы ( задание 1 ) и/или обзор ( задание 2 ) при составлении статьи ( задание 3 ) . Отмечать коментарии проверяющего как Resolved не нужно : ) Перед отправкой полезно проверить орфографию и пунктуацию , например здесь https : //languagetool.org/ Задание №1 - выбор темы и ответы на ключевые вопросы ( до 23:59 14.11.23 по Москве ) Создайте Pull Request , в котором : появляется директория / < номер группы > _ < фамилия_инициалы ( транслитом ) > / в этой директории ( если есть ) запушены материалы ( в формате pdf ) , на основе которых вы будете готовить статью ( например ваши текущие результаты по НИР/ВКР ) . созданы документы , содержащие описание проблемы , ОИ , ПИ , цели , задач , актуальности вашего исследования . Суммарно в документах должно быть не менее 300 знаков . problem.md research_object.md research_subject.md goal.md tasks.md relevance.md Обратите внимание - задачи описываются для статьи , которую вы планируете на текущий семестр , а не по всему диплому . Поэтому они все должны подразумевать выполнение за семестр . Как ответить на ключевые вопросы - https : //stepik.org/lesson/104086/step/1 ? unit=78652 . Подробнее о проверке задания №1 . Задание №2 - Обзор аналогов ( до 23:59 05.12.23 по Москве ) Приведите краткие описания каждого аналога вашего решения , предложите объективные и измеримые ( лучше количественные , но можно качественные ) критерии для их сравнения ( опирающиеся на цель ) , выполните сравнение , опишите вывод по его итогам . # Сравнение аналогов # # Принцип отбора аналогов Опишите в одном абзаце , по какому принципу вы искали аналоги . Описание должно быть воспроизводимым , то есть ваш читатель должен суметь по нему найти ваши аналоги . # # # < Аналог1 > его краткое описание … .. # # # < Аналог5 > его краткое описание # # Критерии сравнения аналогов # # # < Критерий 1 > его краткое описание и обоснование # # # < Критерий 2 > его краткое описание и обоснование # # # < Критерий 3 > его краткое описание и обоснование # # Таблица сравнения по критериям # # Выводы по итогам сравнения # Выбор метода решения # Источники Нумерованный список источников В обзоре должны быть содержательные , технические критерии , относящиеся как к вашей специальности , так и к теме вашей работы : Бинарные критерии ( да/нет , +- , есть нет и тд ) недопускаются . Критерии о бизнес-составляющей вопроса ( стоимость решения , наличие перевода на русский язык … . ) лучше убрать ( либо свести к самому минимуму ) По принципу отбора аналогов : указывайте конкретные поисковые запросы и поисковые системы в качестве поисковых систем предпочтение отдается системам поиска научных статей , google - последнее средство На основании обзора аналогов и вывода по его результатам , а также ваших собственных обоснованных предположений , опишите ( в solution_method_selection.md ) : каким должно быть решение в целом ( что должно собой представлять - приложение , скрипт , модель … . ) , какими качествами должно обладать решение , каким способом ваше решение должно удовлетворять критериям из обзора . Либо , если ваша задача была больше про выбор технологии , опишите в выборе метода решения способ применения ( желательно , его тоже опереть на обзор ) : ( обязательно ) чем и каким должно быть решение в целом ( что должно собой представлять - приложение , скрипт , модель … . ) , каким способом выбранная технология будет использоватся в решении ( протоколы , архитектура подключения , паттерны ) , какие эксперименты стоит проделать для оценки качества работы технологии , При описании выбора метода решения запрещается повторять критерии в иной формулировке без дополнительной конкретики ( иначе не очень понятно , зачем нужен был ваш обзор ) . PullRequest : в вашем каталоге создан документ analogs.md ( не менее 2000 знаков , обязательны ссылки на источники ) со структурой , описанной выше ( убедитесь , что заголовки совпадают и по уровню , и по названию ) : есть характеристика каждого аналога , есть описание принципа отбора аналогов , есть описание каждого критерия и обоснование , почему именно он важен для поставленной вами цели / решаемой задачи , есть таблица сравнения есть вывод по итогам сравнения , три критерия , пять аналогов , есть не менее пяти ссылок на источники , есть раздел “ Выбор метода решения ” Количество знаков - ориентировочное . Подробнее о проверке задания №2 . Задание №3 - Сборка статьи ( до 23:59 25.12.23 по Москве ) На основании результатов обзора , ответов на ключевые вопросы , а также проработав самостоятельно Описание метода решения и ( по желанию ) Исследования метода решения , подготовьте оригинальный ( оригинальность > = 75 % ) черновик статьи в форматах .md , .doc/.docx/odt и .pdf ( Как сконвертировать MD в DOCX или ODT ) со следующей структурой . ! ! Внимание ! ! - данное задание подразумевает не более двух проверок для тех кто сдает в семестре . Результат второй проверки считается окончательным для данного этапа оценивания . В день качества и на доп сессии ОДНА проверка ( при наличии направлений ) # < Название статьи > Ключевые слова : не менее трех ключевых слов # # Аннотация # # Введение Содержание данного раздела является развитием “ Подготовка ответов на ключевые вопросы ” . # # < Обзор предметной области == Сравнение аналогов > # # Выбор метода решения # # Описание метода решения ( если есть ) # # Исследование метода решения ( если есть ) # # Заключение # # Список литературы Pull-Request ( необходимые условия ) : В вашем каталоге создан документ paper.md и его версия в docx/odt/tex + версия в pdf ( paper.docx/odt/tex , paper.pdf ) ) . Созданы все необходимые разделы . Аннотация написана в совершенном времени . Между разделами есть смысловые связки . Выполнены требования Задания №1 ( == в статье поставлена цель , обозначены задачи , присутствует проблема , понятен предмет и объект исследования ) . Выполнены требования Задания №2 ( == в статье есть обзор ) . В Выводах описан краткий результат решения каждой из поставленных Задач . Каждое ключевое слово упоминается в основном тексте хотя бы один раз . Все элементы списка литературы имеют минимум одно упоминание в тексте ( вот так [ 1 ] ) . Все рисунки имеют подрисуночные подписи и ссылки в тексте . Все таблицы имеют подписи и ссылки в тексте . Если ваша статья изначально - обзор , то опишите в “ Описании метода решения ” краткую архитектуру будущего решения / возможные модули / идеи по построению решения . Советы : Опирайте Введение на результаты первого задания . Отражайте в Заключении фактические результаты по вашим задачам . Если результаты получились не очень , то возможно нужно поправить задачи . Убедитесь , что “ Выбор метода решения ” плотно опирается на Обзор и Ответы на ключевые вопросы . Если в нем появляются требования , которые не обосновываются предыдущим материалом статьи , то это ~99 % будет замечание : ( Пишите Аннотацию по делу ( без исторических справок ) и после подготовки остального текста Подробнее о критериях проверки задания №3 ( статья ) . staff/courses/sci_writing/plan.txt · ",
                "Формирование оценки  Сотрудникам » courses » Основы подготовки научных публикаций » Формирование оценки staff : courses : sci_writing : mark Table of Contents Формирование оценки Уточнения по срокам выполнения заданий и плагиату Оценки Сроки Пересдачи Формирование оценки Важное замечание - статьи , написанные вне курса ( например у вас уже есть публикация или вы сейчас ее готовите ) , не перезачитываются за прохождение всего курса или его части . Принцип выставления оценки - рейтинговый . Рейтинг складывается из : прохождение онлайн-курса ( https : //stepik.org/course/10524 ) , пропорционально степени прохождения 0-40 баллов посещаемости лекций 0-10 баллов ( пропорционально количеству посещений , одно посещение это 75 или более минут присутствия на лекции ) , подготовка задания №1 0 , 3 или 5 баллов : 5 баллов , если прислали в срок и в PR есть все необходимые файлы / разделы , 3 балла , если прислали не вовремя или не сделали отдельный PR ) , подготовка задания №2 0 , 3 или 5 баллов : 5 баллов , если прислали в срок и в PR есть все необходимые файлы / разделы , 3 балла , если прислали не вовремя или не сделали отдельный PR ) , подготовка статьи 0-40 баллов . Сроки выполнения заданий . Уточнения по срокам выполнения заданий и плагиату Попытка успеть в срок для первого и второго задания путем отправки постороннего текста / плагиата чужих работ - бонус за срочность аннулируется ( то есть , максимально 3 балла , вместо 5 за задание ) . Попытка сдачи плагиата в рамках 1-3 задания - баллы за попытку с плагиатом аннулируются ( то есть , пока плагиат не будет исправлен , баллы за задание не будут выставлены ) . Оценки Оценки : “ Отлично ” > = курс + 86 баллов . “ Хорошо ” > = курс + 76 баллов . “ Удовлетворительно ” > = 65 баллов . Оценки для сдающих в день качества : “ Отлично ” > = курс + 90 баллов . “ Хорошо ” > = курс + 80 баллов . “ Удовлетворительно ” > = 65 баллов . Оценки для сдающих в доп.сессию : “ Отлично ” > = курс + 96 баллов . “ Хорошо ” > = курс + 86 баллов . “ Удовлетворительно ” > = 65 баллов . Сроки По предмету диф.зачет - оценки формируются по итогам работы в семестре и выставляются в ведомость в этом году . Если вы не набрали баллов на оценку - ваша оценка “ Не аттестован ” и вы получаете академическую задолженность , далее - допса ( если дадут направление ) . По третьему заданию всего две проверки - результат каждой фиксируется в таблицу . Дедлайн для тех , кто хочет получить проверку третьего задания не в последний момент - 23:59 20.12.23 по Москве ( == все присланное по третьему заданию в этот срок будет проверено до 23:59 25.12.23 ( при условии , что лимит проверок для вас не закончился ) ) Дедлайн для любых отправок и исправлений - до 23:59 25.12.23 по Москве , проверка всего присланного позже не гарантируется . Дата выставления текущей оценки из таблицы в ведомость - 10:00 28.12.23 по Москве . Выставление оценок в зачетные книжки - < будет уточнено позже > . Передать зачетку с коллегами - можно . Пересдачи ( начиная с 2024-2025 уч . года ) В день качества и на доп сессии ( при наличии направлений ) по каждому заданию есть только ОДНА проверка . После нее баллы выставляются в таблицу и далее сумма баллов идет в направление . Поэтому : Читайте правила оценивания внимательно Проходите онлайн-курс не в последний момент . staff/courses/sci_writing/mark.txt · ",
                "Типовые ошибки в заданиях  Сотрудникам » courses » Основы подготовки научных публикаций » Типовые ошибки в заданиях staff : courses : sci_writing : typical_errors_by_assignment Table of Contents Типовые ошибки в заданиях Ответы на ключевые вопросы Обзор аналогов Собранная статья Типовые ошибки в заданиях Ниже описываются типовые замечания для заданий данного курса . Ответы на ключевые вопросы Описание актуальности проблемы в problem.md . Описывать актуальность это хорошо и правильно , но ответ на вопрос - в чем состоит решаемая проблема не должен ее включать . Предмет исследования не связан с объектом исследования . Слишком широкий объект исследования . Поставлено более одной цели/проблемы . Проблема и/или цель имеют слишком узкую направленность/ уже чем фактическая цель работы - например “ получить значение производительности библиотеки libxml ” вместо “ найти наиболее производительную библиотеку/ выработать метод оценки производительности ” . Проблема формулируется как отсутствие чего-то , например “ отсутствие удобного/производительного/безопасного сервиса заказа такси ” . Более гладкий вариант : “ Организация удобного/производительного/безопасного сервиса заказа такси ” . Задачи не раскрывают цель полностью . Проблема и цель явно не связаны . В рамках проблемы / цели / задачи … не дается конкретизации по специфики задачи , используются общие термины ( данные , изображения … ) . Было бы хорошо изложить чуть подробнее в формулировке конкретику - какие именно задачи и для кого планируется решать ( детали сценария использования ) , подробности по используемым данным ( форматы , специфика ) . Список задач не выполним за текущий семестр ( задачи для статьи , а не для ВКР ) Обзор аналогов В принципе отбора отсутствуют указание на класс систем / решений , по которым проводился поиск . Описания аналогов скопированы с сайтов самих аналогов . Описания аналогов не характеризуют их с точки зрения цели . Критерии сравнения далеки от поставленной цели ( обзор не приближает к достижению цели ) . “ нет аналогов ” / Мало аналогов ( а как же тривиальные / эмпирические решения или отсутствие решения ? ) . Отсустствуют обоснования для критериев , особенно если 1 ) критериев много 2 ) критерии не очевидны Отсутствует описание методики измерения критерия . Сами аналоги не связаны с целью . Вывод по итогам обзора не показывает направлений для новых решений проблемы ( аналоги решают проблему нужным образом ) . Критерий не выполняется ни одним из аналогов . В текущем виде это сужает картину обзора - у читателя могут быть вопросы или к выбору аналогов ( зачем вы выбрали одинаковые аналоги ) , или к качеству формулировки критерия ( читатель может подумать , что вы специально выбрали такие критерии , по которым настолько одинаковая картинка ) . Нужно или уточнить значения для критерия ( указать подробнее , как именно аналоги не удовлетворяют / в чем удовлетворяют ) , или дополнить обзор еще одним критерием : менее однозначным , но все равно связанным с вашей задачей и целью . Выводы по итогам обзора ( в аннотации , тексте и тд ) слишком общий и явно негативный ( “ По результатам обзора установлено , что ни один из существующих методов не удовлетворяет всем необходимым требованиям ” ) . Это не помогает статье , так как с таким выводом возникают вопросы 1 ) почему вы не расширили поиск , если текущий набор аналогов так плох ? 2 ) может быть , дело в критериях ? . Предлагаю вывод сделать более подробным и конкретно указать на общие недостатки и достоиннства решений . Бинарных значений критериев недостаточно , нужна конкретика - как какой аналог выполняет или не выполняет определенный критерий . Часть критериев не относятся к технической стороне вопроса - а именно не связаны с тем техническим решением , которое вы будете создавать . Поскольку у вас техническая специальность , то вопросы локализации , стоимости , наличие форумов поддержки и открытости кода не связаны с вашим решением напрямую . Гораздо важнее рассмотреть технологии , протоколы , способы выполнения тех или иных сценариев использования . Аналоги выбраны приемущественно из русскоязычных ресурсов . Для задач , которые не привязаны к специфике страны / региона / законодательству / местным стандартам , очень важно изучить мировой опыт - часто , поиск среди англоязычных решений позволяет найти решения с открытым исходным кодом и/или множество патентов / статей по проблеме . Выбор метода решения : Требования не конкретны / не верифицируемы ( интуитивный / удобный интерфейс ) . Требования не следуют из проведенного обзора Собранная статья Ключевое слово …… слишком общее . Его нужно или уточнить , или убрать из списка . Аннотация слишком краткая . Аннотация - это самый читаемый раздел статьи , поэтому ее задача - увлечь читателя путем демонстрации технических подробностей и основных результатов , поэтому , добавьте больше конкретных деталей по промежуточным и финальным результатам . Выводы по итогам обзора ( в аннотации , тексте и тд ) слишком общий и явно негативный ( “ По результатам обзора установлено , что ни один из существующих методов не удовлетворяет всем необходимым требованиям ” ) . Это не помогает статье , так как с таким выводом возникают вопросы 1 ) почему вы не расширили поиск , если текущий набор аналогов так плох ? 2 ) может быть , дело в критериях ? . Предлагаю вывод сделать более подробным и конкретно указать на общие недостатки и достоиннства решений . Ссылки на литературу указывают в тексте раздела , а не в заголовках разделов и подразделов . Очень много разделов , состоящих из двух или менее предложений . Такие разделы необходимо либо объединить между собой , либо добавить в них больше текста - редакторы очень неприятно реагируют на них . Размер и количество картинок ( особенно скриншотов ) могут произвести впечатление попытки повысить объем . Давайте ограничим их количество 4 штуками и сократим занимаемый объем также в четыре раза . Таблицы / изображения не имеют подписей / ссылок в тексте . Не все элементы списка литературы упомянуты в тексте . Либо удалите не упомянутые , либо добавьте ссылки в тексте . В вашей работе очень много текста в скобках . Либо удалите его , либо замените скобки на запятые . В текущем варианте он демонстрирует редактору неуверенность в описанных результатах . Местами текст вашей статьи страдает от “ телеграфности ” - предложения кажутся отрывистыми , не связанными друг с другом и манерой изложения напоминают сводки боевых действий ( Враг занял левый берег Волги . Моральный дух личного состава высокий . В атаку идем по расписанию. ) . При первом упоминании каждой технологии / метода / фреймворка / инструмента необходимо давать ссылку на источник с описанием . В выводах нет конкретики по задачам . Раздел “ Выводы ” третий по читаемости в статье ( Сначала читают аннотацию , затем введение , потом выводы и только после - остальной текст ) . Нужно указать , какой именно результат был получен в каждой задаче и как это помогает / мешает достижению цели . В вашей работе нет содержательной конкретики - вы ищите “ сильные и слабые стороны ” , “ плюсы и минусы ” , тогда как вам нужно рассказывать о том , как решается ваша задача . staff/courses/sci_writing/typical_errors_by_assignment.txt · ",
                "Общие идеи  Сотрудникам » courses » Основы подготовки научных публикаций » Общие идеи staff : courses : sci_writing : tasks_review Table of Contents Общие идеи Общий алгоритм - первая проверка Общий алгоритм - повторная проверка Задание 1 ( Ответы на ключевые вопросы ) Задание 2 ( Обзор аналогов ) Общие идеи Оставайтесь доброжелательны , помните , что никто не рождается с 80 уровнем написания статей . Всегда указывайте явно на проблемные места с помощью цитирования и оставления комментария к конкретной строке . Ссылайтесь на материалы курса . Предлагайте способы исправления . Общий алгоритм - первая проверка Прочитайте PR Сформулируйте замечания и зафиксируйте их в виде комментариев к PR В PR на вкладке Files Changed нажмите кнопку Review changes и далее Request changes Снимите с PR метку Check required и установите метку Human changes required Общий алгоритм - повторная проверка Для каждого из ваших комментариев с предыдущей проверки проверьте , как студент исправил файлы задания ( дискуссия в комментариях , увы не считается правкой замечаний ) Если вам кажется , что еще есть замечания , то повторите шаги 1-3 из предыдущего раздела , отдельно отметьте не решенные замечания Если вам кажется , что все исправленно корректно , то : В PR На вкладке Files Changed нажмите Review changes и далее Aprove На вкладке Conversation нажмите внизу страницы Merge Выставите в таблице успехов баллы студенту : если PR был создан ДО обозначенного в таблице дедлайнов , то впишите в соответствующую колонку 5 баллов , иначе - 3 балла . Задание 1 ( Ответы на ключевые вопросы ) Алгоритм проверки : Убедиться , что создано шесть файлов - problem , goal , relevance , tasks , research object , research subject . Убедиться , что в актуальности явно указана объективная ценность / смысл решения проблемы / достижения цели . Убедиться , что в актуальности нет проблем с аргументацией : голословных утверждений , преувеличений , излишних обобщений . Убедиться , что в актуальности есть ссылки , подтверждающие утверждения автора Убедиться , что в проблеме не описывается актуальность . Убедиться , что сформулирован одна цель , предмет и объект . Убедиться , что проблема это не “ отсутствие … ” Убедиться , что проблема шире цели и цель является ее подмножеством . Убедиться , что задачи складываются в цель ( нет лишний задач и нет пропущенных задач ) . Убедиться , что задачи выполнимы за текущий семестр ( это задачи по статье , а не по всему диплому - они должны быть реализуемы за семестр ) . Убедиться , что объект шире чем цель ( не является ее частью ) . Убедиться , что предмет связан с объектом . Убедиться , что автор конкретизирует рассматриваемые понятия , то есть либо указана специфика задачи , либо даны определения для наиболее общий терминов из формулировок . Обратить внимание на используемую лексику . Задание 2 ( Обзор аналогов ) Алгоритм проверки : Убедиться , что в PullRequest есть : “ Принцип отбора аналогов ” , краткая характеристика аналогов , критерии и их обоснования , таблица сравнения , выводы , “ Выбор метода решения ” в отдельном файле . Убедиться , что “ Принцип отбора аналогов ” содержит либо явное укзаание на тип сравниваемых систем и ключевые слова для поиска . Убедиться , что краткие характеристики : Явно относятся к цели работы , Не скопированы из первоисточников , Содержат ссылки на первоисточники . Убедиться , что есть не менее 3 критериев и 5 аналогов . Убедиться , что критерии объективны и измеримы , при необходимости указаны способы измерения критериев . Убедиться , что для критериев указано множество значений ( если оно требуется ) . Убедиться , что в требования к решению в “ Выборе метода решения ” Опираются на результаты обзора . Объективны и измеримы . По ходу проверки : Обращайте внимание на связность текста и его стиль . staff/courses/sci_writing/tasks_review.txt · ",
                "Ассистентам - как оценивать статью  Сотрудникам » courses » Основы подготовки научных публикаций » Ассистентам - как оценивать статью staff : courses : sci_writing : paper_review Ассистентам - как оценивать статью Задание №3 ( статья ) оценивается в диапазоне 0-40 баллов следующим образом : 20 баллов отдаются за выполнение формальных требований ( цифра слева - количество баллов за выполнение критерия ) : 1 В вашем каталоге создан документ paper.md + Версия в docx/odt/tex и версия в pdf ( paper.docx/odt/tex , paper.pdf ) ) . 2 Созданы необходимые разделы ( введение , обзор , выбор метода решения , заключение , список литературы , и , если позволяет жанр - описание метода решения ) . 1 Аннотация написана в совершенном времени . 2 Выполнены требования Задания №1 ( == во введении поставлена цель , обозначены задачи , присутствует проблема , указаны предмет и объект исследования ) . 2 В Выводах описан краткий результат решения каждой из поставленных Задач . 2 В Выводах обозначены направления для дальнейших исследований 2 Между разделами есть смысловые связки . Критерии , которые проверяет бот ( он может ломаться - если сломался , то либо загрузите статью руками в http : //scientific-writing.moevm.info/ , либо поставьте оценки сами ) : 1 Отсутствуют короткие разделы 2 Каждое ключевое слово упоминается в основном тексте хотя бы один раз . 1 Все элементы списка литературы имеют минимум одно упоминание в тексте ( вот так [ 1 ] ) . 1 Все рисунки и таблицы имеют подрисуночные подписи и ссылки в тексте . 3 В тексте отсутствуют просторечные выражения , жаргонизмы , местоимения , указывающие на авторов работы . В диапазоне 0-20 баллов вы оцениваете ваше личное впечатление от статьи . насколько она соответствует стилю , насколько ее содержимое кажется вам пригодным для дальнейшей публикации , отсутствие защитного языка , телеграфности ( https : //stepik.org/lesson/104081/step/1 ? unit=78647 ) . Алгоритм оценивания : Прочитайте и проревьювьте текст статьи ( как в случае с заданиями 1-2 ) . Рекомендую использовать формулировки типовых ошибок http : //se.moevm.info/doku.php/staff : courses : sci_writing : typical_errors_by_assignment В Review Summary напишите детализацию вашей оценки по шаблону ниже . Внесите оценку в таблицу . Если студент прислал исправления - замените старую оценку . Внесите в таблицу рекомендацию по изданию для подачи ( ППС / Известия ЛЭТИ ) . Если по сумме баллов у студента получается оценка Отлично ИЛИ уже было проведено две проверки , то делайте merge пулл-реквеста . Шаблон для детализации оценки Ваша оценка за статью 00 баллов . * 0/1 В вашем каталоге создан документ paper.md + Версия в docx/odt/tex и версия в pdf ( paper.docx/odt/tex , paper.pdf ) ) . * 0/2 Созданы необходимые разделы ( введение , обзор , выбор метода решения , заключение , список литературы , и , если позволяет жанр - описание метода решения ) . * 0/1 Аннотация написана в совершенном времени . * 0/2 Выполнены требования Задания №1 ( == во введении поставлена цель , обозначены задачи , присутствует проблема , указаны предмет и объект исследования ) . * 0/2 В Выводах описан краткий результат решения каждой из поставленных Задач . * 0/2 В Выводах обозначены направления для дальнейших исследований * 0/2 Между разделами есть смысловые связки . * 0/1 Отсутствуют короткие разделы * 0/2 Каждое ключевое слово упоминается в основном тексте хотя бы один раз . * 0/1 Все элементы списка литературы имеют минимум одно упоминание в тексте ( вот так [ 1 ] ) . * 0/1 Все рисунки и таблицы имеют подрисуночные подписи и ссылки в тексте . * 0/3 В тексте отсутствуют просторечные выражения , жаргонизмы , местоимения , указывающие на авторов работы . - 0/20 Впечатление от статьи ( см . комментарии в PR ) . Вы можете улучшить свою оценку , если внесете исправления . Исправленные PR будут рассмотрены после проверки Pull Request c новыми статьями . Как была посчитана оценка http : //se.moevm.info/doku.php/staff : courses : sci_writing : paper_review staff/courses/sci_writing/paper_review.txt · ",
                "Как подготовить рецензию на статью для конференции или журнала  Сотрудникам » courses » Основы подготовки научных публикаций » Как подготовить рецензию на статью для конференции или журнала staff : courses : sci_writing : real_life_paper_review Table of Contents Как подготовить рецензию на статью для конференции или журнала Процесс рецензирования Шаблон Как работать с easychair Как подготовить рецензию на статью для конференции или журнала Процесс рецензирования Процесс рецензирования статьи на конференцию мало отличается от того , как проверяется третье задание ( статья ) в рамках курса : http : //se.moevm.info/doku.php/staff : courses : sci_writing : paper_review Отличия состоят в приоритете проверки : смысловая целостность статьи ( насколько она согласована в плане цели / задач / результатов ) , методология - как проводилось исследование ( качество обоснований , обоснованность утверждений и тд ) , форма подачи ( язык и стиль ) . На что полезно обратить внимание при рецензировании : Насколько поставленные задачи соответствуют результатам ( нет ли расхождения ) Степень обоснованности результатов - чем автор доказывает свои утверждения ( чем смелее и шире утверждение , тем сильнее нужно обоснование ) + как обосновывает свои решения ( почему выбрал именно такую библиотеку / архитектуру / и тд ) Насколько измеримы и объективны показатели качества / метрики / критерии в работе ( измеримые и объективные - скорость работы , затраты ОЗУ ; неизмеримые - идеальность , удобство , приятность интерфейса ) Насколько автор дает определения основным понятиями работы , например - объясняет что он ( она ) имеет в виду под словами “ надежность / точность / производительность ” ( как именно это измереяется , в каких единициах ) Насколько из работы понятна прикладная значимость работы http : //se.moevm.info/doku.php/staff : courses : sci_writing : typical_errors_by_assignment # % D1 % 81 % D0 % BE % D0 % B1 % D1 % 80 % D0 % B0 % D0 % BD % D0 % BD % D0 % B0 % D1 % 8F_ % D1 % 81 % D1 % 82 % D0 % B0 % D1 % 82 % D1 % 8C % D1 % 8F Шаблон Ниже представлен шаблон СТРУКТУРЫ рецензии для статей . Он носит исключительно рекомендательный характер и его содержимое можно менять по своему усмотрению . Единственное , что желательно оставить неизменным - четкий вердикт в конце . < Отметьте несколько положительных сторон статьи > По содержанию работы отмечены следующие замечания : - автор обосновывает свои утверждения пословицами , - в качестве наиболее авторитетного источника выступает статья из википедии , ... В оформлении работы замечены следующие недочеты : - детали на рис 1-100 не различимы , - шаблоном рекомендован шрифт Times New Roman , однако использован шрифт Comic Sans , - .... Статья рекомендуется для включения в программу / рекомендуется для включения в программу после исправления замечаний / не рекоммендуется для включения в программу . Как работать с easychair https : //docs.google.com/document/d/1ZhWu4EoqMH_rTtwV0i5ZmLqSmXDEEh2Oh2JGd8qevrU/edit ? usp=sharing staff/courses/sci_writing/real_life_paper_review.txt · ",
                "Алгоритм рецензирования научной статьи  Сотрудникам » courses » Основы подготовки научных публикаций » Алгоритм рецензирования научной статьи staff : courses : sci_writing : review_algorithm Алгоритм рецензирования научной статьи Внимательно прочитайте тему и определите , какие понятия она затрагивает . Прочитайте аннотацию , выделите основные результаты . staff/courses/sci_writing/review_algorithm.txt · ",
                "✎ Основы подготовки научных публикаций  Сотрудникам » courses » Основы подготовки научных публикаций staff : courses : sci_writing This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Основы подготовки научных публикаций ====== ===== Коммуникация ===== Для того , чтобы ваши письма не потерялись , указывайте следующую строчку ( да , квадратные скобки тоже нужно указать , они не просто так ) < note > [ SW ] < /note > в теме любых писем по данному курсу . ===== Начало работы ===== - Поставить в профилях Stepik и Github свои настоящие имя и фамилию . - Заполнить форму https : //forms.gle/1BFRmBVR3Dgsiy9R8 . - Вступить в онлайн-класс https : //stepik.org/join-class/c53309dac152babf8d587da151c2a2f769c021dc и начать решение задач . На досуге : - Прочитать руководство - по формату * * MD * * https : //guides.github.com/features/mastering-markdown/ - по тому , как встраивать формулы https : //stackoverflow.com/a/12503010 в * * MD * * ===== Материалы курса ===== * [ [ https : //drive.google.com/drive/folders/1I6ab1NgH9eE-brg-n2g9Z1bUINBXkpTY ? usp=sharing|Слайды лекций ( work in progress ) ] ] * [ [ https : //docs.google.com/spreadsheets/d/170lyphK8q2C4IGyfA8HEvDOHvhc29GBCswUn1t0DUsU/edit ? resourcekey # gid=2100732164| ! ! ТАБЛИЦА РЕЙТИНГА ! ! ] ] * [ [ staff : courses : sci_writing : plan|Практические задания и их сроки ( что и когда вам нужно сделать ) ] ] * [ [ staff : courses : sci_writing : mark|Критерии выставления оценки ( как получить нужную оценку ) ] ] * [ [ staff : courses : sci_writing : typical_errors_by_assignment|Типовые ошибки по заданиям ] ] * [ [ staff : courses : sci_writing : tasks_review|Ассистентам - как оценивать практические задания ( задания 1-2 ) ] ] * [ [ staff : courses : sci_writing : paper_review|Ассистентам - как оценивать статью ( задание 3 ) ] ] * [ [ staff : courses : sci_writing : real_life_paper_review|Ассистентам - как писать рецензию для конференции ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfop-HExHrSzLaO0YXG6ngNAD|Видео лекции 2021 ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfopib5FX3Bpv62p7EYjIsbRL|Видео лекции 2020 ] ] ===== Дополнительные материалы ===== * [ [ http : //se.moevm.info/doku.php/staff : courses : sci_writing : md2docx|Как сконвертировать MD в DOCX или ODT ] ] * [ [ https : //bitbucket.org/mark_zaslavskiy/teaching_meta/src/master/slides/writing_science_papers_intro.pdf ? at=master & fileviewer=file-view-default|Как писать научные статьи ] ] * [ [ diplomants : start : paper_checklist|Лист быстрой проверки статьи ] ] * [ [ http : //www.cs.cmu.edu/~Compose/shaw-icse03.pdf|Writing Good Software Engineering Research Papers , Minitutorial ] ] * [ [ https : //moluch.ru/information/stil-nauchnoj-stati/|Стиль научной статьи - молодой учёный ] ] * [ [ staff : courses : sci_writing : review_algorithm|Алгоритм рецензирования ] ] staff/courses/sci_writing.txt · ",
                "Основы подготовки научных публикаций - Old revisions  Сотрудникам » courses » Основы подготовки научных публикаций staff : courses : sci_writing Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/01/26 07:51 Основы подготовки научных публикаций – [ Материалы курса ] mark +40 B ( current ) 2023/08/22 07:13 Основы подготовки научных публикаций – [ Начало работы ] mark ±0 B 2023/08/22 07:11 Основы подготовки научных публикаций – [ Материалы курса ] mark +1 B 2023/08/22 07:10 Основы подготовки научных публикаций – [ Начало работы ] mark ±0 B 2022/12/10 09:08 Основы подготовки научных публикаций – external edit 127.0.0.1 ±0 B 2022/08/23 12:49 Основы подготовки научных публикаций – [ Материалы курса ] mark +18 B 2022/08/23 12:49 Основы подготовки научных публикаций – [ Начало работы ] mark ±0 B 2022/08/16 13:35 Основы подготовки научных публикаций – [ Начало работы ] mark ±0 B 2021/08/31 13:53 Основы подготовки научных публикаций – [ Материалы курса ] mark +110 B 2021/08/23 15:02 Основы подготовки научных публикаций – [ Материалы курса ] mark -3 B 2021/08/23 14:58 Основы подготовки научных публикаций – [ Коммуникация ] mark +1 B 2021/08/23 14:57 Основы подготовки научных публикаций mark +41 B 2021/08/17 12:36 Основы подготовки научных публикаций mark +146 B 2021/01/19 07:50 Основы подготовки научных публикаций mark +366 B 2021/01/19 07:47 Основы подготовки научных публикаций – [ Материалы курса ] mark +149 B 2020/11/02 08:18 Основы подготовки научных публикаций – [ Материалы курса ] mark +33 B 2020/08/27 09:51 Основы подготовки научных публикаций – external edit 127.0.0.1 ±0 B 2020/08/20 11:53 Основы подготовки научных публикаций mark +3 B 2019/11/15 09:36 Основы подготовки научных публикаций – [ Дополнительные материалы ] mark -226 B 2019/11/11 08:53 Основы подготовки научных публикаций – [ Материалы курса ] mark +138 B 2019/09/05 08:48 Основы подготовки научных публикаций – [ Начало работы ] mark +32 B Show differences between selected revisions less recent > > staff/courses/sci_writing.txt · ",
                "Основы подготовки научных публикаций - "
            ]
        },
        {
            "name": "Цифровая обработка сигналов",
            "url": "/doku.php/courses:digital_signal_processing:start",
            "date": "\"2023/09/24 10:04\"",
            "data": [
                "Цифровая обработка сигналов  Курсы » Цифровая обработка сигналов courses : digital_signal_processing : start Table of Contents Цифровая обработка сигналов Материалы Практические работы Цифровая обработка сигналов Материалы Учебные материалы Практические работы Практическая работа №1 : Моделирование стандартных дискретных сигналов Практическая работа №2 : Моделирование и анализ линейных комбинаций дискретных сигналов Практическая работа №3 : Частотный анализ полиномиальных приближений Практическая работа №4 : Частотный анализ формул численного интегрирования Практическая работа №5 : Исследование результатов фильтрации дискретного сигнала с помощью нерекурсивных фильтров , построенных на основе полиномиальных приближений Практическая работа №6 : Исследование результатов фильтрации дискретного сигнала с помощью рекурсивных фильтров , построенных на основе формул численного дифференцирования и интегрирования courses/digital_signal_processing/start.txt · ",
                "Цифровая обработка сигналов - ",
                "",
                "Учебные материалы  Курсы » Цифровая обработка сигналов » Учебные материалы courses : digital_signal_processing : materials Table of Contents Учебные материалы Список литературы Для оформления лабораторных работ Учебные материалы Список литературы А. Б. Сергиенко . Цифровая обработка сигналов : учеб . пособие – СПб . : Питер , 2002 . – 768 с. А. И. Солонина и др . Цифровая обработка сигналов и MATLAB . – СПб . : БХВ-Петербург , 2013 . – 512 с. Р. В. Хемминг . Цифровые фильтры – М. : « Советское радио » , 1980 . – 224 с. С. Смит . Цифровая обработка сигналов . Практическое руководство для инженеров и научных работников . – М. : ДМК Пресс , 2018 . – 718 с. Для оформления лабораторных работ Для корректного оформления отчётов в odt-формате в LibreOffice необходимо установить шрифты Times New Roman и Courier New . Это можно сделать , прописав в консоли ( для Ubuntu ) следующую команду : sudo apt install ttf-mscorefonts-installer Требования к оформлению научно-технических отчётов ( Распоряжение от 09.11.2015 № 3003 ) Шаблон оформления практических работ ( docx-формат ) Шаблон оформления практических работ ( odt-формат ) courses/digital_signal_processing/materials.txt · ",
                "Практическая работа №1 : Моделирование стандартных дискретных сигналов  Курсы » Цифровая обработка сигналов » Практическая работа №1 : Моделирование стандартных дискретных сигналов courses : digital_signal_processing : task1 Table of Contents Практическая работа №1 : Моделирование стандартных дискретных сигналов Цель работы Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Практическая работа №1 : Моделирование стандартных дискретных сигналов Цель работы Изучить математическое описание стандартных дискретных сигналов и овладеть программными средствами их моделирования . Постановка задачи С помощью программных средств провести моделирование и анализ стандартных дискретных последовательностей . Результаты подкрепить соответствующими графиками и выводами . Порядок выполнения работы Смоделировать единичный цифровой импульс $ \\delta_d ( k ) $ с выводом графиков на интервале дискретного времени $ nT \\in [ 0 , ( N - 1 ) T ] $ и дискретного нормированного времени $ n \\in [ 0 , N - 1 ] $ . Пояснить : взаимосвязь между дискретным и дискретным нормированным временем ; различие между единичным цифровым импульсом и дельта-функцией . Смоделировать дискретный единичный скачок $ \\sigma_d ( k ) $ с выводом графиков на интервале дискретного времени $ nT \\in [ 0 , ( N - 1 ) T ] $ и дискретного нормированного времени $ n \\in [ 0 , N - 1 ] $ . Пояснить : соответствие между дискретным и аналоговым единичными скачками ; чему равна частота дискретизации дискретного единичного скачка . Смоделировать дискретную экспоненциальную функцию $ s_1 ( k ) $ с выводом графиков на интервале дискретного времени $ nT \\in [ 0 , ( N - 1 ) T ] $ и дискретного нормированного времени $ n \\in [ 0 , N - 1 ] $ . Пояснить соответствие между дискретной и аналоговой экспонентами . Смоделировать дискретный комплексный гармонический сигнал $ s_2 ( k ) = C\\exp ( j\\hat { \\omega } _0k ) $ с выводом графиков вещественной и мнимой частей на интервале времени $ n \\in [ 0 , N - 1 ] $ . Записать данный сигнал в виде комбинации двух вещественных последовательностей . Вывести графики последовательностей $ \\delta_d ( k ) $ , $ \\sigma_d ( k ) $ и $ s_1 ( k ) $ , задержанных на $ m $ отсчетов , на интервале времени $ n \\in [ 0 , N - 1 ] $ . Записать формулы задержанных последовательностей . Сделать выводы . Варианты заданий Выполнение работ осуществляется в бригадах по индивидуальным вариантам заданий . Номер варианта для каждой бригады определяется преподавателем . Варианты к практической работе №1 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые рисунки и таблицы с пояснениями . Общий вывод по проделанной работе . Код программы . courses/digital_signal_processing/task1.txt · ",
                "Практическая работа №2 : Моделирование и анализ линейных комбинаций дискретных сигналов  Курсы » Цифровая обработка сигналов » Практическая работа №2 : Моделирование и анализ линейных комбинаций дискретных сигналов courses : digital_signal_processing : task2 Table of Contents Практическая работа №2 : Моделирование и анализ линейных комбинаций дискретных сигналов Цель работы Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Практическая работа №2 : Моделирование и анализ линейных комбинаций дискретных сигналов Цель работы Изучить математическое описание линейных комбинаций дискретных гармонических сигналов и овладеть программными средствами их моделирования . Постановка задачи С помощью программных средств провести моделирование и анализ линейных комбинацций дискретных гармонических последовательностей . Результаты подкрепить соответствующими графиками и выводами . Порядок выполнения работы Смоделировать дискретный прямоугольный импульс : \\ [ s_1 ( k ) = \\begin { cases } U , & \\quad n_0 \\leqslant k \\leqslant n_0 + n_ { imp } - 1 ; \\\\ 0 , & \\quad \\mbox { иначе } \\\\ \\end { cases } \\ ] на основе дискретного единичного скачка $ \\sigma_d ( k ) $ из л/р №1 с выводом графика на интервале времени $ n \\in [ 0 , N - 1 ] $ . Пояснить как выполняется моделирование импульса . Смоделировать линейную комбинацию дискретных гармонических сигналов $ s_2 ( k ) $ : \\ [ s_2 ( k ) = a_1x_1 ( k ) + a_2x_2 ( k ) + a_3x_3 ( k ) , \\ ] где\\ [ x_i ( k ) = B_i\\sin ( \\hat\\omega_ik ) , \\quad i = 1 , 2 , 3 , \\ ] с выводом графиков последовательностей $ x_i ( k ) $ и $ s_2 ( k ) $ на интервале времени $ n \\in [ 0 , 5N - 1 ] $ . Вычислить среднее значение ( идентификатор mean_s2 ) , энергию ( идентификатор E ) и среднюю мощность последовательности $ s_2 ( k ) $ ( идентификатор P ) . Пояснить : операции при моделировании линейной комбинации сигналов $ s_2 ( k ) $ ; как определяют указанные характеристики . Вывести график дискретного сигнала $ s_3 ( k ) $ представляющего собой дискретный гармонический сигнал $ s ( k ) $ \\ [ s ( k ) = C\\cos ( \\hat { \\omega } _0k ) \\ ] с экспоненциальной огибающей $ |a|^k $ , на интервале времени $ n \\in [ 0 , N-1 ] $ . Привести аналитическую формулу дискретного сигнала $ s_3 ( k ) $ и пояснить операции при его моделировании . Вывести график пяти периодов периодической последовательности $ s_4 ( k ) $ дискретных прямоугольных импульсов амплитуды $ U $ и длительности $ n_ { imp } $ с периодом , вдвое большим длительности импульса . Пояснить операции при моделировании периодической последовательности . Сделать выводы . Варианты заданий Выполнение работ осуществляется в бригадах по индивидуальным вариантам заданий . Номер варианта для каждой бригады определяется преподавателем . Варианты к практической работе №2 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые рисунки и таблицы с пояснениями . Общий вывод по проделанной работе . Код программы . courses/digital_signal_processing/task2.txt · ",
                "Практическая работа №3 : Частотный анализ полиномиальных приближений  Курсы » Цифровая обработка сигналов » Практическая работа №3 : Частотный анализ полиномиальных приближений courses : digital_signal_processing : task3 Table of Contents Практическая работа №3 : Частотный анализ полиномиальных приближений Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №3 : Частотный анализ полиномиальных приближений Цель работы Провести анализ частотных характеристик известных формул полиномиального сглаживания временных рядов . Постановка задачи Получить формулы для передаточных функций нерекурсивных фильтров , соответствующих полиномиальному сглаживанию дискретного сигнала для полиномов различного порядка и построить графики $ \\tilde H ( f ) $ . Проинтерпретировать частотные свойства передаточных функций . Провести сопоставительный анализ частотных характеристик передаточных функций для различных степеней полиномов . Порядок выполнения работы Вывести формулы для передаточной функции нерекурсивного фильтра , соответствующего сглаживанию прямой линией по 3 , 5 , 7 и 9 точкам . Построить графики $ \\tilde H ( f ) $ . Проинтерпретировать частотные свойства передаточных функций для различного количества точек . Вывести формулы для передаточной функции нерекурсивного фильтра , соответствующего сглаживанию полиномом второй степени по 7 , 9 , 11 и 13 точкам . Построить графики $ \\tilde H ( f ) $ . Проинтерпретировать частотные свойства передаточных функций для различного количества точек . Вывести формулы для передаточной функции нерекурсивного фильтра , соответствующего сглаживанию полиномом четвёртой степени по 9 , 11 , 13 и 15 точкам . Построить графики $ \\tilde H ( f ) $ . Проинтерпретировать частотные свойства передаточных функций для различного количества точек . Вывести формулы для передаточной функции нерекурсивного фильтра , соответствующего сглаживанию по формулам Спенсера по 15 и 21 точкам . Построить графики $ \\tilde H ( f ) $ . Проинтерпретировать частотные свойства передаточных функций для различного количества точек . Построить графики из предыдущих пунктов в логарифмической шкале ( Дб ) . Объясните , чем отличаются данные графики от полученных ранее и объясните их смысл . Провести сопоставительный анализ свойств передаточных функций , полученных при выполнении п . 1–4 . Сделать выводы . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые рисунки и таблицы с пояснениями . Общий вывод по проделанной работе . Код программы . courses/digital_signal_processing/task3.txt · ",
                "Практическая работа №4 : Частотный анализ формул численного интегрирования  Курсы » Цифровая обработка сигналов » Практическая работа №4 : Частотный анализ формул численного интегрирования courses : digital_signal_processing : task4 Table of Contents Практическая работа №4 : Частотный анализ формул численного интегрирования Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №4 : Частотный анализ формул численного интегрирования Цель работы Провести анализ частотных характеристик известных формул численного интегрирования . Постановка задачи Получить формулы для передаточных функций нерекурсивных фильтров , соответствующих полиномиальному сглаживанию дискретного сигнала для различных квадратурных формул и построить графики $ \\tilde H ( f ) $ . Проинтерпретировать частотные свойства передаточных функций . Получить формулы для передаточных функций рекурсивных фильтров , соответствующих квадратурным формулам Ньютона-Котеса различного порядка . Проинтерпретировать частотные свойства передаточных функций . Провести сопоставительный анализ частотных характеристик передаточных функций для различных квадратурных формул . Порядок выполнения работы Вывести формулы передаточных функций рекурсивных фильтров , соответствующих квадратурным формулам прямоугольников , трапеций и Симпсона . Построить графики передаточных функций и графики отношения вычисляемого в результате фильтрации значения к истинному . Проинтерпретировать частотные свойства полученных передаточных функций . Вывести формулу передаточной функции рекурсивного фильтра для интегрирования « по правилу 3/8 » : \\ [ y_ { n+2 } = y_ { n-1 } + \\frac18 ( x_ { n+2 } + 3x_ { n+1 } + 3x_n + x_ { n-1 } ) . \\ ] Построить график передаточной функции и график отношения вычисляемого в результате фильтрации значения к истинному . Проинтерпретировать частотные свойства передаточной функции . Провести сопоставительный анализ частотных характеристик передаточных функций , полученных при выполнении п . 1 и 2 . Сделать выводы . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые рисунки и таблицы с пояснениями . Общий вывод по проделанной работе . Код программы . courses/digital_signal_processing/task4.txt · ",
                "Практическая работа №5 : Исследование результатов фильтрации дискретного сигнала с помощью нерекурсивных фильтров , построенных на основе полиномиальных приближений  Курсы » Цифровая обработка сигналов » Практическая работа №5 : Исследование результатов фильтрации дискретного сигнала с помощью нерекурсивных фильтров , построенных на основе полиномиальных приближений courses : digital_signal_processing : task5 Table of Contents Практическая работа №5 : Исследование результатов фильтрации дискретного сигнала с помощью нерекурсивных фильтров , построенных на основе полиномиальных приближений Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №5 : Исследование результатов фильтрации дискретного сигнала с помощью нерекурсивных фильтров , построенных на основе полиномиальных приближений Цель работы Получение практических навыков выполнения фильтрации дискретных последовательностей с помощью полиномиальных фильтров , а также анализа получаемых результатов с помощью дискретного преобразования Фурье ( ДПФ ) . Постановка задачи Для заданного дискретного сигнала применить фильтры , основанные на сглаживании полиномами . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Сформировать дискретный сигнал посредством дискретизации с шагом $ T = 1 $ непрерывного сигнала , представляющего собой линейную комбинацию косинусоид вида $ A_k\\cos ( \\omega_kt + \\varphi_k ) $ . Частота каждой из гармоник не должна превышать $ \\pi $ . Всего одиннадцать гармоник с упорядоченными по возрастанию частотами от 0 до $ \\pi $ , изменяющимися с шагом $ \\Delta\\omega = 0.1\\pi $ . Амплитуды гармоник $ A_k $ представляют собой целые числа со значениями от 1 до 11 , определяемые случайным образом с помощью датчика равномерно распределенных случайных чисел . При необходимости нормализовать коэффициенты линейной комбинации посредством деления их на сумму полученных случайным образом амплитуд . Начальные фазы $ \\varphi_k $ представляют собой случайные числа в промежутке от 0 до 0.5 . Дискретная последовательность должна включать в себя 32 отсчета ( $ N = 31 $ ) . Визуализировать исходные аналоговый и дискретизированный сигналы . С помощью ДПФ найти дискретные отсчеты спектра дискретного сигнала и визуализировать их . Для дискретного сигнала применить линейное сглаживание по 5-ти и 9-ти точкам , представить формулу для $ H ( \\omega ) $ – передаточной функции ( частотной характеристики ) фильтра . Визуализировать полученный после фильтрации дискретный сигнал совместно с исходным дискретным сигналом . С помощью ДПФ найти дискретные отсчеты спектра дискретного сигнала после его фильтрации и визуализировать их совместно с отчетами спектра исходного дискретного сигнала . Проанализировать результат на соответствие значениям $ H ( \\omega ) $ . Сделать выводы . Повторить п . 4–7 для следующих фильтров : Сглаживание полиномом 2-ой степени по 5 и 9 узлам . Сглаживание полиномом 4-ой степени по 7 и 11 узлам . Содержательно проинтерпретировать результаты выполнения практической работы , сделать выводы . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые рисунки и таблицы с пояснениями . Общий вывод по проделанной работе . Код программы . courses/digital_signal_processing/task5.txt · ",
                "Практическая работа №6 : Исследование результатов фильтрации дискретного сигнала с помощью рекурсивных фильтров , построенных на основе формул численного дифференцирования и интегрирования  Курсы » Цифровая обработка сигналов » Практическая работа №6 : Исследование результатов фильтрации дискретного сигнала с помощью рекурсивных фильтров , построенных на основе формул численного дифференцирования и интегрирования courses : digital_signal_processing : task6 Table of Contents Практическая работа №6 : Исследование результатов фильтрации дискретного сигнала с помощью рекурсивных фильтров , построенных на основе формул численного дифференцирования и интегрирования Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №6 : Исследование результатов фильтрации дискретного сигнала с помощью рекурсивных фильтров , построенных на основе формул численного дифференцирования и интегрирования Цель работы Получение практических навыков выполнения фильтрации дискретных последовательностей с помощью фильтров , основанных на формулах численного дифференцирования и интегрирования , а также анализа получаемых результатов с помощью дискретного преобразования Фурье ( ДПФ ) . Постановка задачи Для заданного дискретного сигнала применить фильтры , основанные на формулах численного дифференцирования и интегрирования . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Сформировать дискретный сигнал посредством дискретизации с шагом $ T = 1 $ непрерывного сигнала , представляющего собой линейную комбинацию косинусоид вида $ A_k\\cos ( \\omega_kt + \\varphi_k ) $ . Частота каждой из гармоник не должна превышать $ \\pi $ . Всего одиннадцать гармоник с упорядоченными по возрастанию частотами от 0 до $ \\pi $ , изменяющимися с шагом $ \\Delta\\omega = 0.1\\pi $ . Амплитуды гармоник $ A_k $ представляют собой целые числа со значениями от 1 до 11 , определяемые случайным образом с помощью датчика равномерно распределенных случайных чисел . При необходимости нормализовать коэффициенты линейной комбинации посредством деления их на сумму полученных случайным образом амплитуд . Начальные фазы $ \\varphi_k $ представляют собой случайные числа в промежутке от 0 до 0.5 . Дискретная последовательность должна включать в себя 32 отсчета ( $ N = 31 $ ) . Визуализировать исходные аналоговый и дискретизированный сигналы . С помощью ДПФ найти дискретные отсчеты спектра дискретного сигнала и визуализировать их . Для дискретного сигнала применить линейное сглаживание по 5-ти и 9-ти точкам , представить формулу для $ H ( \\omega ) $ – передаточной функции ( частотной характеристики ) фильтра . Визуализировать полученный после фильтрации дискретный сигнал совместно с исходным дискретным сигналом . С помощью ДПФ найти дискретные отсчеты спектра дискретного сигнала после его фильтрации и визуализировать их совместно с отчетами спектра исходного дискретного сигнала . Проанализировать результат на соответствие значениям $ H ( \\omega ) $ . Сделать выводы . Повторить п . 4–7 для следующих фильтров : Дискретный фильтр , соответствующий численному дифференцированию 1-го порядка . Дискретный фильтр , соответствующий численному интегрированию ( прямоугольников , трапеций , Симпсона ) . Содержательно проинтерпретировать результаты выполнения практической работы , сделать выводы . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые рисунки и таблицы с пояснениями . Общий вывод по проделанной работе . Код программы . courses/digital_signal_processing/task6.txt · ",
                "✎ Цифровая обработка сигналов  Курсы » Цифровая обработка сигналов courses : digital_signal_processing : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Цифровая обработка сигналов ====== ===== Материалы ===== * [ [ materials ] ] ===== Практические работы ===== * [ [ task1 ] ] * [ [ task2 ] ] * [ [ task3 ] ] * [ [ task4 ] ] * [ [ task5 ] ] * [ [ task6 ] ] courses/digital_signal_processing/start.txt · ",
                "Цифровая обработка сигналов - Old revisions  Курсы » Цифровая обработка сигналов courses : digital_signal_processing : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/09/24 10:04 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov ±0 B ( current ) 2023/09/24 10:03 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2023/09/24 10:01 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2023/09/24 10:00 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2023/09/24 09:59 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2023/09/24 09:58 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2023/09/24 09:54 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/12/10 09:08 Цифровая обработка сигналов – external edit 127.0.0.1 ±0 B 2022/09/14 19:35 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +28 B 2022/09/14 18:53 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +14 B 2022/09/14 18:39 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +14 B 2022/09/14 16:55 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +14 B 2022/09/13 17:52 Цифровая обработка сигналов andrey.suchkov -129 B 2022/09/11 07:42 Цифровая обработка сигналов – [ Практические работы ] andrey.suchkov +98 B 2022/06/28 18:21 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +3 B 2022/06/28 18:20 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:20 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:19 Цифровая обработка сигналов – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2020/11/30 20:49 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +14 B 2020/10/19 19:31 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov -14 B 2020/10/19 19:31 Цифровая обработка сигналов – [ Лабораторные работы ] andrey.suchkov +14 B Show differences between selected revisions less recent > > courses/digital_signal_processing/start.txt · ",
                "Цифровая обработка сигналов - "
            ]
        },
        {
            "name": "Машинное обучение",
            "url": "/doku.php/courses:ml",
            "date": "\"2023/09/15 12:49\"",
            "data": [
                "Машинное обучение  Курсы » Машинное обучение courses : ml Table of Contents Машинное обучение Учебное пособие Лекции Практические задания Лабораторные работы Индивидуальные задания Дополнительные ресурсы Перевод Машинное обучение Бакалавры Магистранты ( 2023-2024 год ) Магистранты ( 2023-2024 ) продвинутый курс Учебное пособие Учебное пособие включает содержание всех лекций курса ( ENG ) Лекции Лекция №1 Лекция №2 Лекция №3 Лекция №4 Лекция №5 ( часть 1 ) Лекция №5 ( часть 2 ) Лекция №6 Лекция №7 Лекция №8 ( часть 1 ) Лекция №8 ( часть 2 ) Лекция №9 ( часть 1 ) Лекция №9 ( часть 2 ) Лекция №9 ( часть 3 ) Практические задания Набор заданий №1 Набор заданий №2 Набор заданий №3 Набор заданий №4 набор заданий №5 Набор заданий №6 Набор заданий №7 Набор заданий №8 Лабораторные работы Зависимости для лаб . работ Лабораторная работа №1 - Предобработка данных Лабораторная работа №2 - Понижение размерности пространства признаков Лабораторная работа №3 - Частотный анализ Лабораторная работа №4 - Ассоциативный анализ Лабораторная работа №5 - Кластеризация - k-средних , иерархическая Лабораторная работа №6 - Кластеризация - DBSCAN , OPTICS Лабораторная работа №7 - Классификация - Байесовские методы , решающие деревья Лабораторная работа №8 - Классификация - линейный дискриминантный анализ , метод опорных векторов Индивидуальные задания Правила выполнения и список ИДЗ Таблица с выбором ИДЗ - образец с прошлого года Дополнительные ресурсы Учебник Andrew Ng ’ s courses Машинное обучение - Coursera Machine Learning Courses - EdX fast.ai Перевод Глава №7 Главы №13 и №14 courses/ml.txt · ",
                "Машинное обучение - ",
                "",
                "Бакалавры  Курсы » Машинное обучение » Бакалавры courses : ml : bsc Table of Contents Бакалавры Расписание лекций Рейтинговая система Рейтинг Загрузка файлов Бакалавры Расписание лекций Лекции по средам , каждую неделю . Начало - 9:00 Тема : Машинное обучение гр.9303 , 9304 , 9381 , 9382 , 9383 Подключиться к конференции Zoom https : //us04web.zoom.us/j/71654070079 ? pwd=zL2wsWaBdq2waabijLaI5klQwpPTUD.1 Идентификатор конференции : 716 5407 0079 Код доступа : 7DSL3h Данная конференция имеет ограничение по времени - 40 минут , поэтому следует переподключаться каждые 40 минут занятия по той же ссылке . Рейтинговая система Описание рейтинговой системы Календарь работ Рейтинг 9303 9304 9381 9382 9383 Загрузка файлов Форма для загрузки решения практических заданий Форма для загрузки отчетов к лаб . работам courses/ml/bsc.txt · ",
                "Магистранты ( 2023-2024 год )  Курсы » Машинное обучение » Магистранты ( 2023-2024 год ) courses : ml : msc Table of Contents Магистранты ( 2023-2024 год ) Расписание занятий Правила аттестации Правила выполнения и варианты ИДЗ Базовый курс курс Аттестационная ведомость Магистранты ( 2023-2024 год ) Расписание занятий Занятия по средам . Начало - 18:30 ( лекции - базовый курс ) , 18:00 ( семинары - продвинутый курс ) . Тема : Машинное обучение/Программные средства разработки ИИ Первое занятие по машинному обучению уже состоялось в эту среду ( 6 сентября ) в 17:20 . Машинное обучение - базовый курс , лекции по средам с 18:30 до 20:00 . Ссылка на видеовстречу : https : //telemost.yandex.ru/j/98283244063016508587919897641426335349 Лекции читает : Субботин Алексей Николаевич Правила аттестации Правила аттестации : attestation_rules_mag_v5subb.pdf Правила выполнения и варианты ИДЗ Правила выполнения и варианты ИДЗ : idz_mag.pdf Базовый курс курс Правила аттестации для базового курса : Описание рейтинговой системы Рейтинг для базового курса ( группы 2304 , 2306 , 2320 ) : Рейтинг Ссылка для загрузки отчетов ( формат pdf ) : Форма для загрузки Ссылка для загрузки практических заданий ( формат pdf ) Форма для загрузки Календарь защит практических и лабораторных : ссылка Посещаемость лекций ( заполняет Алексей ) : ссылка Аттестационная ведомость Посещаемость ML 8310 и пр . Лабораторные работы , ИДЗ гр . 8310 и пр . courses/ml/msc.txt · ",
                "Магистранты ( 2023-2024 ) продвинутый курс  Курсы » Машинное обучение » Магистранты ( 2023-2024 ) продвинутый курс courses : ml : msc_advanced Table of Contents Магистранты ( 2023-2024 ) продвинутый курс Расписание занятий Правила аттестации Продвинутый курс : контакты преподавателей Аттестационная ведомость Магистранты ( 2023-2024 ) продвинутый курс Расписание занятий Машинное обучение - продвинутый курс , семинары по средам с 18:00 до 19:30 . Ссылка на видеовстречу : https : //us06web.zoom.us/j/77015862345 ? pwd=LyPIskUa2zbbeE76UCHJB15FGXkFMX.1 Идентификатор конференции : 770 1586 2345 Код доступа : V2w4hF Занятия проводит : Куликов Игорь Александрович Правила аттестации Правила аттестации : ССЫЛКА Продвинутый курс : контакты преподавателей Тимур Рафаилович Жангиров - ksenox94 @ gmail.com Игорь Александрович Куликов - i.a.kulikov @ gmail.com Информация для тех , кто уже проходил курс ML ранее . Вам нужно выбрать доклады из списка и записаться . 2023-2024 год : Продвинутый уровень : запись на доклады Папка с учебниками и статьями Папка для загрузки подготовленных материалов Доклады готовятся по следующим правилам : Доклад подготавливается студентом самостоятельно , или в составе бригады из двух человек . Студенты записываются на доклады по ссылке ( выше ) заблоговременно . На занятии за неделю до планируемой даты доклада студент ( ы ) представляют исходные материалы для доклада и устно рассказывают план выступления преподавателям ( после окончания заслушивания докладов этого занятия ) . Доклад подразумевает устный доклад с демонстрацией визуальных материалов , практических задач и пр. , а также подготовку текстовых материалов для расширения учебного пособия по курсу AutoML . Материалы принимаются преподавателем и и являются обязательной частью представления доклада . Аттестационная ведомость Ссылка на ведомость courses/ml/msc_advanced.txt · ",
                "Необходимые зависимости для лаб . работ  Курсы » Машинное обучение » Необходимые зависимости для лаб . работ courses : ml : dependency Необходимые зависимости для лаб . работ Установить Python версии не ниже 3.7 . Скачать можно по ссылке Используя терминал и утилиту pip установить библиотеки : pip install numpy pip install pandas pip install matplotlib pip install scikit-learn courses/ml/dependency.txt · ",
                "✎ Машинное обучение  Курсы » Машинное обучение courses : ml This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Машинное обучение ====== [ [ courses : ml : bsc ] ] [ [ courses : ml : msc ] ] [ [ courses : ml : msc_advanced ] ] ===== Учебное пособие ===== { { courses : ml : book-20160121.pdf|Учебное пособие включает содержание всех лекций курса ( ENG ) } } ===== Лекции ===== { { courses : ml : lec1.pdf|Лекция №1 } } { { courses : ml : lec2.pdf|Лекция №2 } } { { courses : ml : lec3.pdf|Лекция №3 } } { { courses : ml : lec4.pdf|Лекция №4 } } { { courses : ml : lec5-1.pdf|Лекция №5 ( часть 1 ) } } { { courses : ml : lec5-2.pdf|Лекция №5 ( часть 2 ) } } { { courses : ml : lec6.pdf|Лекция №6 } } { { courses : ml : lec7.pdf|Лекция №7 } } { { courses : ml : lec8-1.pdf|Лекция №8 ( часть 1 ) } } { { courses : ml : lec8-2.pdf|Лекция №8 ( часть 2 ) } } { { courses : ml : lec9-1.pdf|Лекция №9 ( часть 1 ) } } { { courses : ml : lec9-2.pdf|Лекция №9 ( часть 2 ) } } { { courses : ml : lec9-3.pdf|Лекция №9 ( часть 3 ) } } ===== Практические задания ===== [ [ https : //docs.google.com/document/d/e/2PACX-1vQ2ousEcyKjJYt3Dyfy0CicplbCC9kwcrngumvSYG7HYWriLQTpSZNa7y2OBxjZ5ulh-VBSV9qtAQIK/pub|Набор заданий №1 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vR6irjthuc6kajQuLaqksfZ_pGt-X3gc8ekp1V2mxIPR8AkPwUrKyCWW_j9HVwfQF3iCOlKdYx0shJY/pub|Набор заданий №2 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSDv7YFKwRA4P-NBAzkzsCsnNiAdOZNu6RKK8ZYYFC7GV1FKf_dOo2uhRw4iBy3uk1MVi7j4gSel-Sx/pub|Набор заданий №3 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vQNMZJj4H2VDCxdQknbbR9ycVobquRmfacNGEkHVcnpwm-6cRwufAmJz7ByQ3VtDZzDsZmIAcd8LOt7/pub|Набор заданий №4 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vTWXsXw2UuJJkR8Sgnmu7oyE_4biFF0BEOeArz2aB5K8XfFauYq-fF4ezTZlqv5wSPKBlx2b8qsXsjE/pub|набор заданий №5 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vQJjNXqQxw4HOzMSNB4Vf-W1FgjkkJBd49rj-n4hzWWJO9JJveY_j9Wb2i_53AjJ09vyvA0S-Pi6OzV/pub|Набор заданий №6 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSdblIVFqOlivd2D0p_H0WRnPlRB6srU1ganxfmfigdVxjejtsV8AwMJnezdwmn24Boseo-TUmZc0Kz/pub|Набор заданий №7 ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vS8BSfGT-BgzkoKk4xaBHIejq_0MgmmtsSo-BB27dEp4QHc4dALsW-8xCEb_5FLPl_t_gFYxx2PjIvU/pub|Набор заданий №8 ] ] ===== Лабораторные работы ===== [ [ courses : ml : dependency|Зависимости для лаб . работ ] ] { { courses : ml : lab1.pdf|Лабораторная работа №1 - Предобработка данных } } { { courses : ml : lab2.pdf|Лабораторная работа №2 - Понижение размерности пространства признаков } } { { courses : ml : lab3.pdf|Лабораторная работа №3 - Частотный анализ } } { { courses : ml : lab4.pdf|Лабораторная работа №4 - Ассоциативный анализ } } { { courses : ml : lab5.pdf|Лабораторная работа №5 - Кластеризация - k-средних , иерархическая } } { { courses : ml : lab6.pdf|Лабораторная работа №6 - Кластеризация - DBSCAN , OPTICS } } { { courses : ml : lab7.pdf|Лабораторная работа №7 - Классификация - Байесовские методы , решающие деревья } } { { courses : ml : lab8.pdf|Лабораторная работа №8 - Классификация - линейный дискриминантный анализ , метод опорных векторов } } ===== Индивидуальные задания ===== [ [ https : //docs.google.com/document/d/e/2PACX-1vQ-6O-8MOr6dbgL6H00U4GoXjrVkz5pCn-_3uXXz9zUYw2xU_Lb59ca-VxVTO3N7pn907-gM6FryG51/pub|Правила выполнения и список ИДЗ ] ] [ [ https : //docs.google.com/spreadsheets/d/1eV_n7KG565WcY_zvqpAFDLzmky_jv3n2Sl5bDfR9ZRg/edit ? usp=sharing|Таблица с выбором ИДЗ - образец с прошлого года ] ] ===== Дополнительные ресурсы ===== { { courses : ml : book-20160121.pdf|Учебник } } { { courses : ml : coursera-ml-master.zip|Andrew Ng ’ s courses } } [ [ https : //www.coursera.org/learn/machine-learning|Машинное обучение - Coursera ] ] [ [ https : //www.edx.org/learn/machine-learning|Machine Learning Courses - EdX ] ] [ [ https : //www.fast.ai/|fast.ai ] ] ===== Перевод ===== { { courses : ml : chapter7.pdf|Глава №7 } } { { courses : ml : chapter13-14.pdf|Главы №13 и №14 } } courses/ml.txt · ",
                "Машинное обучение - Old revisions  Курсы » Машинное обучение courses : ml Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/09/15 12:49 Машинное обучение – [ Машинное обучение ] mark +27 B ( current ) 2022/12/10 09:08 Машинное обучение – external edit 127.0.0.1 ±0 B 2022/10/23 19:07 Машинное обучение – [ Лекции ] i.a.kulikov +5 B 2022/10/23 19:06 Машинное обучение – [ Лекции ] i.a.kulikov +512 B 2022/09/19 03:18 Машинное обучение – [ Машинное обучение ] alexey.subbotin -165 B 2022/09/18 05:14 Машинное обучение – [ Индивидуальные задания ] alexey.subbotin ±0 B 2022/09/18 05:13 Машинное обучение – [ Индивидуальные задания ] alexey.subbotin +46 B 2022/09/18 05:09 Машинное обучение – [ Машинное обучение ] alexey.subbotin +165 B 2021/10/01 11:26 Машинное обучение i.a.kulikov -319 B 2021/10/01 11:21 Машинное обучение i.a.kulikov -410 B 2021/09/30 16:37 Машинное обучение mark +41 B 2021/09/12 14:48 Машинное обучение timur.zhangirov +147 B 2021/09/11 12:17 Машинное обучение timur.zhangirov -211 B 2021/06/30 08:36 Машинное обучение – [ Учебное пособие ] i.a.kulikov -3 B 2021/06/30 08:25 Машинное обучение – [ Лекции ] i.a.kulikov +187 B 2020/11/29 12:41 Машинное обучение timur.zhangirov +164 B 2020/11/29 12:08 Машинное обучение timur.zhangirov +165 B 2020/11/29 10:46 Машинное обучение timur.zhangirov +164 B 2020/11/29 10:05 Машинное обучение timur.zhangirov +164 B 2020/11/28 17:26 Машинное обучение timur.zhangirov +630 B 2020/11/14 14:47 Машинное обучение timur.zhangirov +164 B Show differences between selected revisions less recent > > courses/ml.txt · ",
                "Машинное обучение - "
            ]
        },
        {
            "name": "Проектирование человеко-машинного интерфейса",
            "url": "/doku.php/courses:man_machine_interface:start",
            "date": "\"2024/03/02 11:15\"",
            "data": [
                "Проектирование человеко-машинного интерфейса  Курсы » Проектирование человеко-машинного интерфейса courses : man_machine_interface : start Table of Contents Проектирование человеко-машинного интерфейса Материалы Задания Студенты Экзамен Проектирование человеко-машинного интерфейса Материалы Программа Материалы лекций Задания Лабораторная работа №1 Лабораторная работа №2 Лабораторная работа №3 Задание к лекции 1 Лабораторная работа №4 Лабораторная работа №5 Вторая часть курса draft - Описание предметной области Студенты Успеваемость Экзамен Форма аттестации : экзамен . Вопросы к экзамену courses/man_machine_interface/start.txt · ",
                "Проектирование человеко-машинного интерфейса - ",
                "",
                "Программа  Курсы » Проектирование человеко-машинного интерфейса » Программа courses : man_machine_interface : list Table of Contents Программа 1 . Введение 2-3 . Бизнес-анализ и обследование объекта автоматизации . Требования к системе 4-5 . Пользователь и система . Пользовательские требования 6 . Описание предметной области 7-8 . Документирование и верификация требований . Управление требованиями 9-16 . Проектирование пользовательского интерфейса Программа 1 . Введение Интерфейс и человеко-машинное взаимодействие ( ЧМВ ) Цель проектирования ЧМВ Роль аналитика в проектировании ЧМВ 2-3 . Бизнес-анализ и обследование объекта автоматизации . Требования к системе Аналитик как профессия Методологии разработки ПО Методологии проектирования RUP Разработка документа « Видение » Требования к системе 4-5 . Пользователь и система . Пользовательские требования Действующие лица Классификация и описание пользователей Описание вариантов использования 6 . Описание предметной области Определение предметной области Методы описания предметной области 7-8 . Документирование и верификация требований . Управление требованиями Жизненный цикл информационной системы Жизненный цикл требований , документирование требований . Управление требованиями Как не сделать лишнего и сделать нужное Матрица доступа к данным Прототипирование пользовательского интерфейса Верификация требований к интерфейсу Трассировка как способ поддержки целостности в системе 9-16 . Проектирование пользовательского интерфейса Понятия UX/UI Анализ конкурентов Анализ пользовательской аудитории Эвристики Нильсена Гештальт принципы в дизайне Ментальные модели Пользовательские ошибки Информационная архитектура Use Case Верстка Гайдлайны Компоненты ПИ Низкодетализированное и высокодетализированное прототипирование Юзабилити-тестирование courses/man_machine_interface/list.txt · ",
                "Материалы лекций  Курсы » Проектирование человеко-машинного интерфейса » Материалы лекций courses : man_machine_interface : lectures Table of Contents Материалы лекций Часть 1 Часть 2 Материалы лекций Часть 1 Введение в ЧМВ + Презентация Бизнес-анализ и обследование объекта автоматизации . Требования к системе + Презентация Пользователь и система . Пользовательские требования + Презентация Описание предметной области + Презентация Документирование и верификация требований . Управление требованиями + Презентация Часть 2 Проектирование пользовательского интерфейса . Программа курса Проектирование пользовательского интерфейса . Презентация courses/man_machine_interface/lectures.txt · ",
                "Лабораторная работа №1  Курсы » Проектирование человеко-машинного интерфейса » Лабораторная работа №1 courses : man_machine_interface : lab1 Table of Contents Лабораторная работа №1 Бизнес-анализ и обследование объекта автоматизации . Разработка документа « Видение » . Задачи Справочные материалы Программное обеспечение Задание на лабораторную работу Результат Лабораторная работа №1 Бизнес-анализ и обследование объекта автоматизации . Разработка документа « Видение » . Задачи Ознакомиться с методологиями проведения бизнес-анализа ; Ознакомиться с методом выявления и документирования высокоуровневых требований . Справочные материалы Пример оформления документов : Пример описания исходных данных Пример приложения « Глоссарий проекта » Пример документа « Видение » ( см . Глава № 5 ) Вигерс , Карл И. Разработка требований к программному обеспечению . Практические приемы сбора требований и управления ими при разработке программного продукта / Карл И. Вигерс - М. : ИТД “ Русская Редакция ” , 2004 Конспект лекций Бизнес-анализ и обследование объекта автоматизации . Требования к системе Программное обеспечение MS Word или другой текстовый редактор ; Интернет браузер . Задание на лабораторную работу Согласовать с преподавателем область исследования ; Разработать документы « Видение » и « Глоссарий » , включающие по согласованной теме : описание предметной области ( перечень процессов и их ключевых участников , перечень используемых ресурсов , управляющих документов ) ; определение перечня автоматизируемых процессов и обоснование потребности в автоматизации ; определение типа системы ( системы реального времени , высоконагруженные системы , системы принятия решений , системы массового использования , web , мобильное приложение и т.д . ) ; основные понятия , термины , аббревиатуры , зафиксированные в глоссарии . Результат Лабораторная работа ( эта и последующие ) выполняется в группах по 2-3 человека ; Срок выполнения : согласование темы : 08.09.2023 сдача лабораторной работы : 18.09.2023 Согласование темы и сдача лабораторной : очно на паре . Лабораторные в том числе направлять на почту ( документы с результатами размещать с Google Документах , разрешить доступ пользователю angelinazxcoolwife @ gmail.com ) Имена документам присваивать согласно шаблону : MMI_lab1_Glossary_ < номер группы > _ < фамилии исполнителей > MMI_lab1_Vision_ < номер группы > _ < фамилии исполнителей > courses/man_machine_interface/lab1.txt · ",
                "Лабораторная работа №2  Курсы » Проектирование человеко-машинного интерфейса » Лабораторная работа №2 courses : man_machine_interface : lab1-1 Table of Contents Лабораторная работа №2 Бизнес-анализ и обследование объекта автоматизации . Разработка документа « Спецификация требований » . Задачи Справочные материалы Программное обеспечение Задание на лабораторную работу Результат Лабораторная работа №2 Бизнес-анализ и обследование объекта автоматизации . Разработка документа « Спецификация требований » . Задачи Ознакомиться с методологиями проведения бизнес-анализа ; Ознакомиться с методом выявления и документирования высокоуровневых требований . Справочные материалы Результаты лабораторной работы №1 ( см . Глава № 5 ) Вигерс , Карл И. Разработка требований к программному обеспечению . Практические приемы сбора требований и управления ими при разработке программного продукта / Карл И. Вигерс - М. : ИТД “ Русская Редакция ” , 2004 Конспект лекций Бизнес-анализ и обследование объекта автоматизации . Требования к системе Программное обеспечение MS Word или другой текстовый редактор ; Интернет браузер . Задание на лабораторную работу Разработать документ « Спецификация требований » , включающий по согласованной теме : описание границ рассматриваемой системы ( контекстная диаграмма и текстовое описание ( данные и способы передачи/интеграции ) ) ; анализ конкурентов , систем-аналогов ( используя подход SWOT-анализ ) ; спецификация требований , представленная таблицей со столбцами : тип требования ( рассмотреть все типы требований из лекции ) ; уникальный идентификатор ; формулировка требования , отвечающая критериям “ корректного ” требования . Количество рассматриваемых конкурентов , систем-аналогов - не менее двух ; Количество приводимых требований каждого типа - не менее трёх . Результат Документ ( аналогично доступ angelinazxcoolwife @ gmail.com в Google Документах ) : MMI_lab2_SRS_ < номер группы > _ < фамилии исполнителей > Срок выполнения : 02.10.2023 courses/man_machine_interface/lab1-1.txt · ",
                "Лабораторная работа №3  Курсы » Проектирование человеко-машинного интерфейса » Лабораторная работа №3 courses : man_machine_interface : lab2 Table of Contents Лабораторная работа №3 Поиск действующих лиц Задачи Справочные материалы Программное обеспечение Задание на лабораторную работу Результат Лабораторная работа №3 Поиск действующих лиц Задачи Ознакомиться с методами определения целевой аудитории и выявления пользовательских требований . Справочные материалы Результаты лабораторной работы №1-2 Конспект лекций Пользователь и система . Пользовательские требования Конспект лекций Проектирование пользовательского интерфейса . Программа курса ( см . глава 3 “ Пользовательская аудитория ” ) Программное обеспечение MS Word или другой текстовый редактор ; Редактор типа Visio , DrawIO , Miro или подобный . Задание на лабораторную работу Выделить минимум 4 класса пользователей ( обязательно - критерий “ по правам доступа к системе ( actors ) ” , остальные - на выбор ) ; Описать профили пользователей ( шаблон таблицы см . в лекционных материалах ) . Результат Документ ( аналогично доступ angelinazxcoolwife @ gmail.com в Google Документах ) : MMI_lab3_Actors_ < номер группы > _ < фамилии исполнителей > Состав документа : Классификация пользователей ( в графическом виде ) ; Описание пользователей ( в табличном виде ) . Срок выполнения : 16.10.2023 courses/man_machine_interface/lab2.txt · ",
                "Задание к лекции 1  Курсы » Проектирование человеко-машинного интерфейса » Задание к лекции 1 courses : man_machine_interface : lecture_task1 Table of Contents Задание к лекции 1 Цель Задачи Задание к лекции 1 Цель Ознакомиться с методом определения классов пользователей и выявления пользовательских требований . Задачи Выбрать одну из компаний , предоставляющих сервис продажи-покупки билетов : Аэрофлот Skyscanner Smartavia Expedia Lufthansa Temporarily unavailable Ознакомиться с работой сервиса по предложенному пользовательскому сценарию , описанному ниже ( рассматриваем desktop-вариант ) . В свободной форме отметить : количество операций , которые приходится выполнять для осуществления каждого пункта сценария ; возможные альтернативы и исключения по сценарию ; функциональные возможности , которые не были затронуты в предложенном сценарии . Основное действующее лицо - клиент . Клиент хочет подобрать авиабилеты и оформить заказ на их приобретение . Характеристика действующего лица : авиаперелёты выполняет редко цель поездки - увидеться с родственниками , друзьями . Гостиница не требуется перелёт выполняется в компании клиент +1 взрослый желание купить авиабилет только в одну сторону и без пересадок цена билетов не имеет значения предпочтительно , чтобы время вылета было утром или днем даты авиаперелета могут варьироваться плюс\\минус двое суток опытный пользователь ПК рассчитывает , что поиск и покупка билетов займет по времени не более 30 минут не является участником бонусных программ предпочтительна оплата авиабилетов онлайн банковской картой риск возникновения потребности возврата авиабилетов минимален Сценарий : Пользователь открывает сайт Пользователь выбирает точку « Откуда » и точку « Куда » Пользователь выбирает дату вылета Пользователь указывает количество пассажиров Пользователь просматривает варианты поиска с учетом предпочтений ( прямой рейса , время вылета ) Пользователь посматривает варианты поиска с учетом предпочтений на даты , ближайшие к выбранной дате вылета Пользователь выбирает рейс Пользователь заполняет данные по пассажирам Пользователь проверяет данные заказа Конец сценария ( выбор способа оплаты и работу платежного сервиса не рассматриваем ) courses/man_machine_interface/lecture_task1.txt · ",
                "Лабораторная работа №4  Курсы » Проектирование человеко-машинного интерфейса » Лабораторная работа №4 courses : man_machine_interface : lab2-1 Table of Contents Лабораторная работа №4 Поиск действующих лиц и выявление вариантов использования Задачи Справочные материалы Программное обеспечение Задание на лабораторную работу Результат Лабораторная работа №4 Поиск действующих лиц и выявление вариантов использования Задачи Ознакомиться с методами определения целевой аудитории и выявления пользовательских требований . Справочные материалы Результаты лабораторной работы №1-3 Конспект лекций Пользователь и система . Пользовательские требования Конспект лекций Проектирование пользовательского интерфейса . Программа курса ( см . глава 3 “ Пользовательская аудитория ” , глава 11 “ Use case ” ) Программное обеспечение MS Word или другой текстовый редактор ; Редактор типа Visio , DrawIO , Miro или подобный . Задание на лабораторную работу Взять в основу документ с предыдущей лабораторной работы и дополнить его : добавить еще 2 классификации пользователей , актуальных для Вашей выбранной темы ; разработать диаграмму вариантов использования ( Use Case Diagram ) ; описать варианты использования в табличном виде ( шаблон таблицы см . в лекционных материалах ) , задействовать строки : Уникальный идентификатор ; Название ; Краткое описание ; Действующие лица ; Связанные ВИ ; Частота использования ; Предварительные условия ; Выходные условия ; Нормальный поток ( базовое направление , основной сценарий ) . убедиться , что полученные сценарии покрывают все потребности целевой аудитории , выделенные в описании пользователей . Результат Дополненный документ MMI_lab3_Actors_ < номер группы > _ < фамилии исполнителей > Состав документа : Дополненные классификация пользователей и описание пользователей ( в графическом и табличном виде ) ; Описание вариантов использования ( в графическом и табличном виде ) . Срок выполнения : 30.10.2023 courses/man_machine_interface/lab2-1.txt · ",
                "Лабораторная работа №5  Курсы » Проектирование человеко-машинного интерфейса » Лабораторная работа №5 courses : man_machine_interface : lab5 Table of Contents Лабораторная работа №5 Описание вариантов использования . Описание предметной области . Задачи Справочные материалы Программное обеспечение Задание на лабораторную работу Результат Лабораторная работа №5 Описание вариантов использования . Описание предметной области . Задачи Ознакомиться с методами описания пользовательских требований и описания предметной области . Справочные материалы Результаты лабораторной работы №1-4 Конспект лекций Пользователь и система . Пользовательские требования Конспект лекций Проектирование пользовательского интерфейса . Программа курса ( см . глава 9 “ Информационная архитектура ” ) Конспект лекций Описание предметной области Программное обеспечение MS Word или другой текстовый редактор ; Редактор типа Visio , DrawIO , Miro или подобный . Задание на лабораторную работу Взять в основу документ с предыдущей лабораторной работы и дополнить его : описать варианты использования в табличном виде ( шаблон таблицы см . в лекционных материалах ) , задействовать строки : Альтернативные потоки ; Исключения ; Бизнес-правила ; в описании вариантов использования детализировать данные , которыми оперирует пользователь и система . составить описание предметной области , выделив сущности и связи ; подобрать 1-2 сущности , для которых описать жизненный цикл смены состояний . Результат Дополненный документ MMI_lab3_Actors_ < номер группы > _ < фамилии исполнителей > Состав документа : Дополненные описание вариантов использования ( в графическом и табличном виде ) ; Концептуальная модель данных ( с применением ER или Class Diagram ) ; Жизненный цикл сущностей ( с применением State Machine Diagram ) . Срок выполнения : 13.11.2023 courses/man_machine_interface/lab5.txt · ",
                "Вторая часть курса  Курсы » Проектирование человеко-машинного интерфейса » Вторая часть курса courses : man_machine_interface : theme_to_read Table of Contents Вторая часть курса Stepik Реферат 27 ноября ( дистанционно , 17:00 ) 11 декабря ( дистанционно , 17:00 ) Разработка и презентация интерфейса Вторая часть курса Задания на вторую часть курса : Прохождение курса Stepik ; Подготовка реферата ; Разработка и презентация интерфейса . Stepik Ссылка : Stepik Выполнение курса : каждым студентом индивидуально . Срок прохождения : 29.12.2023 Подтверждение о выполнении : отправлять на почту . Реферат Исходные данные для подготовки : Материалы лекций . Часть 2 + список рекомендуемой литературы в п.18 любые открытые источники Временной регламент реферата : 10-15 минут Распределение нагрузки при подготовке реферата ( подбор материала , презентационные материалы , выступление ) : на ваше усмотрение . Главное , чтобы все участники бригады были погружены в тему . Требований к оформлению презентации : не предъявляется . Но визуальные материалы должны быть . 27 ноября ( дистанционно , 17:00 ) Тема Ответственные Понятия UX/UI Пичугин , Середенков , Сологуб Гештальт принципы в интерфейсе Архипов , Давыдов , Парамонов Юзабилити-тестирование Бодунов , Болкунов , Калмак Ментальные модели Костебелова , Курочкина , Табаков Эвристики Нильсена ( кроме трёх эвристик , что посвящены ошибкам ) Голиков , Крицын , Решоткин Почему при дизайне следует использовать реальные контент-примеры Алексеев , Максименко Пользовательская аудитория Амежее , Денежный , Мыратгелдиев 11 декабря ( дистанционно , 17:00 ) Тема Ответственные Верстка , основные понятия и принципы Гурьянов , Карабанов , Свечников Ошибки ( 3 пункта эвристик Нильсена ) Афанасьев , Морозов , Переверза Компоненты , основные понятия и принципы Аристархов , Максимов Миф об ограничении выбора пользователю в пределах 7+-2 Асташёнок , Нагибин , Шквиря Гайдлайны Докучаев , Козиков , Никитин Особенности проектирования пользовательских интерфейсов мобильных приложений Смирнов , Тишкин , Торопыгин Геймификация в пользовательских интерфейсах Говорющенко , Люлин Миф о доступности страницы в 3 клика Жиглов Миф `` мы - как наши пользователи '' Скиба Разработка и презентация интерфейса Разработка и демонстрация макетов экранных форм происходит в три итерации : 27 ноября ( дистанционно , после лекции ) - показать как минимум часть макетов ; 18 декабря ( с 19:00 ) с привлечением UX\\UI специалиста . К этому времени должны быть подготовлены все макеты ; 25 декабря ( дистанционно , с 17:00 ) - итоговая презентация результата . Макеты ( ссылки на макеты ) отпралять аналогично на почту angelinazxcoolwife @ gmail.com ; Уровень прототипирования и средство выполнения : выбирается бригадой по желанию ; Макеты должны соответствовать заявленным сценариям использования ; План презентации на 25 декабря : Обзор предметной области , анализ конкурентов , цели и задачи со стороны заказчика ; Анализ пользовательской аудитории ; Определение ключевых пользователей и вариантов использования системы ; Демонстрация макетов по вариантам использования . courses/man_machine_interface/theme_to_read.txt · ",
                "Описание предметной области  Курсы » Проектирование человеко-машинного интерфейса » Описание предметной области courses : man_machine_interface : lecture_domain Описание предметной области Компания заключает Договор с Клиентом на распространение Печатной продукции по Подъездам определенных Домов.В Договоре определяются интервалы дат , в течение которых Печатаная продукция должна быть распространена . Клиент характеризуется своим названием . Печатная продукция характеризуется своим названием , весом и габаритами . В рамках одного Договора может быть распространено несколько различных видов Печатной продукции по нескольким Домам . Дом характеризуется своим адресом и может содержать дополнительный комментарий , указывающий , например , как лучше к дому подойти/ подъехать и т.п . В Дом находятся Подъезды , в которых находятся почтовые ящики , куда нужно опустить Печатную продукцию . Подъезд имеет номер и может содержать комментарий с дополнительной информацией . Например , « код домофона » . В рамках Договора компания выписывает Наряды на распространение на Почтальонов , которые разносят Печатную продукцию по Домам , которые они обслуживают и в которых требуется распространить Печатную продукцию согласно Договору . Почтальоны должны подтвердить , что они разложили Печатную продукцию по почтовым ящикам . В качестве Подтверждения распространения может выступать Фотографии , телефонный звонок или письменный отчет , а зависимости от возможностей Почтальонов . Подтверждения распространения Почтальонов могут быть проверены . Проверкой занимаются Проверяющие , которые действуют в рамках Наряда на проверку и обслуживают определенное количество Домов . Наряд на проверку указывает , какую Печатную продукцию в каких Домах нужно проверять . В результате проверки Проверяющим создается Проверка подтверждения распространения , которая включает дату и время проверки , а также результат проверки ( выполнено или не выполнено ) . Наряд на распространение и Наряд на проверку характеризуется своим номером и датой . Почтальон и Проверяющий являются Сотрудниками Компании и имеет ФИО . courses/man_machine_interface/lecture_domain.txt · ",
                "Вопросы к экзамену  Курсы » Проектирование человеко-машинного интерфейса » Вопросы к экзамену courses : man_machine_interface : exam_questions Вопросы к экзамену Методология RUP и документ « Видение » - структура документа и методы его формирования . Требование . Определение и типы . Примеры . Классификация и описание пользователей . Варианты использования ( Use Cases ) , определение . Формирование диаграмм вариантов использования ( Use Case Diagram ) и деятельности ( Activity Diagram ) . Варианты использования ( Use Cases ) , определение . Структура описания варианта использования . Ошибки при описании вариантов использования . Предметная область , определение . Методы описания предметной области . Модель предметной области ( Domain Model ) и жизненный цикл сущностей ( State Machine Diagram ) . Методы анализа пользовательской аудитории . Эвристики Нильсена . Примеры . Гештальт принципы в дизайне . Примеры . Ментальные модели . Примеры . Способы проведения юзабилити-тестирования . courses/man_machine_interface/exam_questions.txt · ",
                "✎ Проектирование человеко-машинного интерфейса  Курсы » Проектирование человеко-машинного интерфейса courses : man_machine_interface : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Проектирование человеко-машинного интерфейса ====== ===== Материалы ===== * [ [ . : list ] ] * [ [ . : lectures ] ] ===== Задания ===== * [ [ . : lab1 ] ] * [ [ . : lab1-1 ] ] * [ [ lab2 ] ] * [ [ . : lecture_task1 ] ] * [ [ lab2-1 ] ] * [ [ lab5 ] ] * [ [ theme_to_read ] ] * draft - [ [ . : lecture_domain ] ] ===== Студенты ===== [ [ |Успеваемость ] ] ===== Экзамен ===== * * Форма аттестации * * : экзамен . * [ [ . : exam_questions ] ] courses/man_machine_interface/start.txt · ",
                "Проектирование человеко-машинного интерфейса - Old revisions  Курсы » Проектирование человеко-машинного интерфейса courses : man_machine_interface : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/03/02 11:15 Проектирование человеко-машинного интерфейса ayacik -147 B ( current ) 2023/11/22 18:48 Проектирование человеко-машинного интерфейса – [ Экзамен ] ayacik +47 B 2023/11/21 10:58 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik -8 B 2023/11/06 10:23 Проектирование человеко-машинного интерфейса ayacik +8 B 2023/10/30 21:35 Проектирование человеко-машинного интерфейса ayacik -23 B 2023/10/30 21:34 Проектирование человеко-машинного интерфейса ayacik -21 B 2023/10/30 21:21 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik +13 B 2023/10/16 20:36 Проектирование человеко-машинного интерфейса ayacik -114 B 2023/10/16 19:43 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik -32 B 2023/10/16 18:53 Проектирование человеко-машинного интерфейса – [ Экзамен ] ayacik -46 B 2023/10/15 20:11 Проектирование человеко-машинного интерфейса ayacik +15 B 2023/10/15 20:10 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik ±0 B 2023/10/03 21:09 Проектирование человеко-машинного интерфейса ayacik -8 B 2023/10/03 20:54 Проектирование человеко-машинного интерфейса ayacik -8 B 2023/09/24 21:43 Проектирование человеко-машинного интерфейса ayacik +23 B 2023/09/18 20:27 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik -8 B 2023/09/18 10:48 Проектирование человеко-машинного интерфейса ayacik +8 B 2023/09/18 10:39 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik +20 B 2023/09/18 10:39 Проектирование человеко-машинного интерфейса ayacik +36 B 2023/09/18 10:38 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik +17 B 2023/08/31 10:34 Проектирование человеко-машинного интерфейса – [ Задания ] ayacik -5 B Show differences between selected revisions less recent > > courses/man_machine_interface/start.txt · ",
                "Проектирование человеко-машинного интерфейса - "
            ]
        },
        {
            "name": "Статистические методы обработки экспериментальных данных",
            "url": "/doku.php/courses:statistical_methods_of_experimental_data_handling:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Статистические методы обработки экспериментальных данных  Курсы » Статистические методы обработки экспериментальных данных courses : statistical_methods_of_experimental_data_handling : start Table of Contents Статистические методы обработки экспериментальных данных Материалы Практические работы Статистические методы обработки экспериментальных данных Материалы Учебные материалы Практические работы Практическая работа №1 : Формирование и первичная обработка выборки . Ранжированный и интервальный ряды Практическая работа №2 : Обработка выборочных данных . Нахождение точечных оценок параметров распределения Практическая работа №3 : Обработка выборочных данных . Нахождение интервальных оценок параметров распределения . Проверка статистической гипотезы о нормальном распределении Практическая работа №4 : Элементы корреляционного анализа . Проверка статистической гипотезы о равенстве коэффициента корреляции нулю Практическая работа №5 : Элементы регрессионного анализа . Выборочные прямые среднеквадратической регрессии . Корреляционные отношения Практическая работа №6 : Кластерный анализ . Метод k-средних Практическая работа №7 : Кластерный анализ . Метод поиска сгущений courses/statistical_methods_of_experimental_data_handling/start.txt · ",
                "Статистические методы обработки экспериментальных данных - ",
                "",
                "Учебные материалы  Курсы » Статистические методы обработки экспериментальных данных » Учебные материалы courses : statistical_methods_of_experimental_data_handling : materials Table of Contents Учебные материалы Список литературы Для оформления практических работ Полезные ссылки Учебные материалы Список литературы Смирнов Н. А. , Экало А. В. Методы обработки экспериментальных данных : учеб . пособие : — СПб . : Изд-во СПбГЭТУ « ЛЭТИ » , 2009 . Белоногов А. М. , Попов Ю. И. , Посредник О. В. Статистическая обработка результатов физического эксперимента [ Комплект ] : учеб . пособие : — СПб . : Изд-во СПбГЭТУ « ЛЭТИ » , 2009 . Егоров В. А. и др . Анализ однородных статистических данных : учеб . пособие : — СПб . : Изд-во СПбГЭТУ « ЛЭТИ » , 2005 . Морозов В. В. , Соботковский Б. Е. , Шейнман И. Л. Методы обработки результатов физического эксперимента : учеб . пособие : — СПб . : Изд-во СПбГЭТУ « ЛЭТИ » , 2004 . Буре В. М. , Парилина Е. М. , Свиркин М. В. Математическая статистика . СПб . : факультет ПМ ПУ СПбГУ , 2007 . Митин И. В. , Русаков В. С. Анализ и обработка экспериментальных данных . М. : Физический факультет МГУ , 2006 . Кобзарь А. И. Прикладная математическая статистика . М. : Физматлит , 2006 . Котельников Р. Б. Анализ результатов наблюдений . М. : Энергоатомиздат , 1986 . Для оформления практических работ Для корректного оформления отчётов в формате .ODT в LibreOffice необходимо установить шрифты Times New Roman и Courier New . Это можно сделать , прописав в консоли ( для Ubuntu ) следующую команду : sudo apt install ttf-mscorefonts-installer Требования к оформлению научно-технических отчётов ( Распоряжение от 09.11.2015 № 3003 ) Шаблон оформления практических работ ( docx-формат ) Шаблон оформления практических работ ( odt-формат ) Полезные ссылки Наборы данных для выполнения практических работ ( archive.ics.uci.edu ) Наборы данных для выполнения практических работ ( kaggle ) Данные наблюдения относительно объемного веса ν ( г/см³ ) при влажности 10 % и модуля упругости E ( кг/см² ) при сжатии вдоль волокон древесины резонансной ели ( csv-формат ) Таблицы для выполнения практических работ courses/statistical_methods_of_experimental_data_handling/materials.txt · ",
                "Практическая работа №1 : Формирование и первичная обработка выборки . Ранжированный и интервальный ряды  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №1 : Формирование и первичная обработка выборки . Ранжированный и интервальный ряды courses : statistical_methods_of_experimental_data_handling : prac1 Table of Contents Практическая работа №1 : Формирование и первичная обработка выборки . Ранжированный и интервальный ряды Цель работы Постановка задачи Порядок выполнения работы Таблицы Содержание отчёта Вопросы для самоконтроля Практическая работа №1 : Формирование и первичная обработка выборки . Ранжированный и интервальный ряды Цель работы Ознакомление с основными правилами формирования выборки и подготовки выборочных данных к статистическому анализу . Постановка задачи Осуществить формирование репрезентативной выборки заданного объема из имеющейся генеральной совокупности экспериментальных данных . Осуществить последовательное преобразование полученной выборки в ранжированный , вариационный и интервальный ряды . Применительно к интервальному ряду построить и отобразить графически полигон , гистограмму и эмпирическую функцию распределения для абсолютных и относительных частот . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Выбрать программное обеспечение или язык программирования и обосновать его выбор . Выбрать двумерную генеральную совокупность , предварительно согласовав её с преподавателем . Указать , откуда была взята генеральная совокупность и предоставить ссылку . Из генеральной совокупности сформировать выборку заданного объёма в соответствии с полученным от преподавателя номером . Указать , каким образом была сформирована выборка . Последовательно преобразовать выборку в ранжированный , вариационный и интервальный ряды . Интервальный ряд представить в виде табл . 1 . Результаты содержательно проинтерпретировать . Для абсолютных частот построить и отобразить графически полигон , гистограмму и эмпирическую функцию . Сделать выводы . Выполнить п . 5 для относительных частот . Сравнить результаты и сделать выводы . Таблицы Таблица 1 $ i $ $ [ x_i , x_ { i+1 } ) $ $ \\tilde x_i $ $ n_i $ $ p^ * _i $ $ n^ { \\Sigma } _i $ $ p^ { \\Sigma } _i $ 1 … $ k $ $ \\Sigma $ - Здесь : $ \\tilde x_i $ – середина $ i $ -го частичного интервала ; $ n_i $ – абсолютная частота $ i $ -го частичного интервала ; $ p^ * _i $ – относительная частота $ i $ -го частичного интервала ; $ n^ { \\Sigma } _i $ – накопленная абсолютная частота для $ i $ -го частичного интервала ; $ p^ { \\Sigma } _i $ – накопленная относительная частота для $ i $ -го частичного интервала . Последняя строка ( $ \\Sigma $ ) представляет собой сумму столбцов ; прочерком ( - ) указаны столбцы , которые не нужно суммировать . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы . Вопросы для самоконтроля Дать определение генеральной и выборочной совокупности . Сформулировать понятие и основные способы формирования репрезентативной выборки . Охарактеризовать различие между ранжированным и вариационным рядом . Сформулировать правила формирования интервального ряда . Сформулировать правила построения полигона и гистограммы для абсолютных и относительных частот . Дать определение эмпирической функции распределения и сформулировать правила построения её графика . courses/statistical_methods_of_experimental_data_handling/prac1.txt · ",
                "Практическая работа №2 : Обработка выборочных данных . Нахождение точечных оценок параметров распределения  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №2 : Обработка выборочных данных . Нахождение точечных оценок параметров распределения courses : statistical_methods_of_experimental_data_handling : prac2 Table of Contents Практическая работа №2 : Обработка выборочных данных . Нахождение точечных оценок параметров распределения Цель работы Постановка задачи Порядок выполнения работы Расчётные таблицы Таблица №1 Таблица №2 Содержание отчёта Вопросы для самоконтроля Практическая работа №2 : Обработка выборочных данных . Нахождение точечных оценок параметров распределения Цель работы Получение практических навыков нахождения точечных статистических оценок параметров распределения . Постановка задачи Для заданных выборочных данных вычислить с использованием метода моментов и условных вариант точечные статистические оценки математического ожидания , дисперсии , среднеквадратичного отклонения , асимметрии , эксцесса , моды , медианы и коэффициента вариации исследуемой случайной величины . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Для середин интервального ряда , полученного в практической работе №1 , вычислить условные варианты . Заполнить табл . 1 ( в последней строке $ \\Sigma $ необходимо заполнить суммы столбцов ; ячейки отмеченные прочерком заполнять не надо ) . Провести контроль вычислений . Вычислить условные эмпирические моменты $ \\nu^ * _i $ через условные варианты . С помощью условных эмпирических моментов вычислить центральные эмпирические моменты $ \\mu^ * _i $ . Полученные результаты занести в табл . 2 . Вычислить выборочные среднее $ \\bar x_ { \\textit { в } } $ и дисперсию $ \\sigma^2_ { \\textit { в } } $ с помощью стандартной формулы и с помощью условных вариант . Убедиться , что результаты совпадают . Вычислить исправленную выборочную дисперсию $ S^2 $ и исправленное СКО $ S $ . Сравнить данные оценки с смещёнными оценками дисперсии . Сделать выводы . Найти статистическую оценку коэффициентов асимметрии $ a^ * _s $ и эксцесса $ \\varepsilon^ * _k $ . Сделать выводы . Для интервального ряда вычислить моду $ M^ * _o $ , медиану $ M^ * _e $ и коэффициент вариации $ V^ * $ заданного распределения . Сделать выводы . Расчётные таблицы Таблица №1 $ i $ $ x_i $ $ n_i $ $ u_i $ $ n_iu_i $ $ n_iu_i^2 $ $ n_iu_i^3 $ $ n_iu_i^4 $ $ n_i ( u_i + 1 ) ^4 $ 1 … $ \\Sigma $ - Таблица №2 $ i $ $ \\nu^ * _i $ $ \\mu^ * _i $ 1 … Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы ( если имеется ) . Вопросы для самоконтроля Дать определение точечных статистических оценок и сформулировать предъявляемые к ним требования . Объяснить сущность метода моментов . Сформулировать правило формирования условных вариант . Объяснить целесообразность использования условных вариант при расчете выборочных статистических оценок . Сформулировать правила нахождения выборочного среднего , выборочной дисперсии и выборочного СКО , выборочных асимметрии и эксцесса и охарактеризовать их свойства . Пояснить понятия исправленной выборочной дисперсии , исправленного выборочного СКО . courses/statistical_methods_of_experimental_data_handling/prac2.txt · ",
                "Практическая работа №3 : Обработка выборочных данных . Нахождение интервальных оценок параметров распределения . Проверка статистической гипотезы о нормальном распределении  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №3 : Обработка выборочных данных . Нахождение интервальных оценок параметров распределения . Проверка статистической гипотезы о нормальном распределении courses : statistical_methods_of_experimental_data_handling : prac3 Table of Contents Практическая работа №3 : Обработка выборочных данных . Нахождение интервальных оценок параметров распределения . Проверка статистической гипотезы о нормальном распределении Цель работы Постановка задачи Порядок выполнения работы Расчётные таблицы Таблица №1 Содержание отчёта Вопросы для самоконтроля Практическая работа №3 : Обработка выборочных данных . Нахождение интервальных оценок параметров распределения . Проверка статистической гипотезы о нормальном распределении Цель работы Получение практических навыков вычисления интервальных статистических оценок параметров распределения выборочных данных и проверки « справедливости » статистических гипотез . Постановка задачи Для заданной надежности определить ( на основании выборочных данных и результатов выполнения практической работы №2 ) границы доверительных интервалов для математического ожидания и среднеквадратичного отклонения случайной величины . Проверить гипотезу о нормальном распределении исследуемой случайной величины с помощью критерия Пирсона $ \\chi^2 $ . Дать содержательную интерпретацию полученным результатам . Порядок выполнения работы Вычислить точность и доверительный интервал для математического ожидания при неизвестном среднеквадратичном отклонении при заданном объёме выборки для доверительной точности $ \\gamma \\in \\ { 0.95 , 0.99\\ } $ . Сделать выводы . Для вычисления границ доверительного интервала для среднеквадратичного отклонения определить значение $ q $ при заданных $ \\gamma $ и $ n $ . Построить доверительные интервалы , сделать выводы . Проверить гипотезу о нормальности заданного распределения с помощью критерия $ \\chi^2 $ ( Пирсона ) . Для этого необходимо найти теоретические частоты и вычислить наблюдаемое значение критерия . Для удобства вычисления необходимо заполнить табл . 1 . Доказать , что $ $ \\chi^2_ { \\textit { набл } } = \\sum_ { i = 1 } ^k\\frac { n^2_i } { n'_i } - n. $ $ Проконтролировать корректность вычисления $ \\chi^2_ { \\textit { набл } } $ . По заданному уровню значимости $ \\alpha = 0.05 $ и числу степеней свободы $ df $ найти критическую точку $ \\chi^2_ { \\textit { крит } } $ и сравнить с наблюдаемым значением . Сделать выводы . Расчётные таблицы Таблица №1 $ i $ $ ( x_ { i-1 } , x_i ] $ $ n_i $ $ p_i $ $ n'_i $ $ ( n_i - n'_i ) ^2 $ $ \\cfrac { ( n_i - n'_i ) ^2 } { n'_i } $ $ n_i^2 $ $ \\cfrac { n_i^2 } { n'_i } $ 1 … $ \\Sigma $ - - Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы ( если имеется ) . Вопросы для самоконтроля Дать определение интервальных статистических оценок . Сформулировать алгоритм нахождения доверительного интервала для математического ожидания при неизвестном СКО . Сформулировать алгоритм нахождения доверительного интервала для СКО при неизвестном математическом ожидании случайной величины . Дать определение статистической гипотезы . Односторонние и двухсторонние критерии проверки статистических гипотез . Ошибки первого и второго рода при проверке статистической гипотезы . Мощность критерия . Критерий Пирсона для проверки гипотезы о нормальном распределении исследуемой случайной величины . Методика проверки гипотезы о нормальном распределении исследуемой случайной величины с помощью критерия Пирсона . courses/statistical_methods_of_experimental_data_handling/prac3.txt · ",
                "Практическая работа №4 : Элементы корреляционного анализа . Проверка статистической гипотезы о равенстве коэффициента корреляции нулю  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №4 : Элементы корреляционного анализа . Проверка статистической гипотезы о равенстве коэффициента корреляции нулю courses : statistical_methods_of_experimental_data_handling : prac4 Table of Contents Практическая работа №4 : Элементы корреляционного анализа . Проверка статистической гипотезы о равенстве коэффициента корреляции нулю Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Вопросы для самоконтроля Практическая работа №4 : Элементы корреляционного анализа . Проверка статистической гипотезы о равенстве коэффициента корреляции нулю Цель работы Освоение основных понятий , связанных с корреляционной зависимостью между случайными величинами , статистическими гипотезами и проверкой их « справедливости » . Постановка задачи Из заданной генеральной совокупности сформировать выборку по второму признаку . Провести статистическую обработку второй выборки в объёме практических работ №1 и №2 , с целью определения точечных статистических оценок параметров распределения исследуемого признака ( математического ожидания , дисперсии , среднеквадратичного отклонения , асимметрии , эксцесса и коэффициента вариации ) . Для системы двух случайных величин $ X $ ( первый признак ) и $ Y $ ( второй признак ) сформировать двумерную выборку и найти статистическую оценку коэффициента корреляции , построить доверительный интервал для коэффициента корреляции и осуществить проверку статистической гипотезы о равенстве коэффициента корреляции нулю . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Провести статистическую обработку второй выборки в объеме практических работ №1 и №2 , с целью определения точечных статистических оценок параметров распределения исследуемого признака ( математического ожидания , дисперсии , среднеквадратичного отклонения , асимметрии , эксцесса , моды , медианы и коэффициента вариации ) . Оформить результаты в виде таблицы , сделать выводы . Построить двумерный интервальный вариационный ряд , оформить в виде таблицы . По полученному двумерному интервальному вариационному ряду построить корреляционную таблицу , сделать выводы . Исходя из результатов корреляционной таблицы вычислить значение выборочного коэффициента корреляции двумя способами : с помощью стандартной формулы и с помощью условных вариант . Убедиться , что результаты совпадают . Сделать выводы . Построить доверительный интервал для коэффициента корреляции при уровне значимости $ \\gamma \\in \\ { 0.95 , 0.99\\ } $ , сделать выводы . Осуществить проверку статистической гипотезы о равенстве коэффициента корреляции нулю при заданном уровне значимости $ \\alpha = 0.05 $ , сделать выводы . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы ( если имеется ) . Вопросы для самоконтроля Дать определение функциональной , статистической и корреляционной зависимости . Дать определение коэффициента корреляции и охарактеризовать его свойства . На примере системы двух случайных величин пояснить понятие корреляционной таблицы . Сформулировать алгоритм вычисления выборочного коэффициента корреляции с использованием условных вариант . Сформулировать алгоритм нахождения доверительного интервала для коэффициента корреляции с помощью преобразования Фишера . Сформулировать алгоритм проверки статистической гипотезы о равенстве коэффициента корреляции нулю . courses/statistical_methods_of_experimental_data_handling/prac4.txt · ",
                "Практическая работа №5 : Элементы регрессионного анализа . Выборочные прямые среднеквадратической регрессии . Корреляционные отношения  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №5 : Элементы регрессионного анализа . Выборочные прямые среднеквадратической регрессии . Корреляционные отношения courses : statistical_methods_of_experimental_data_handling : prac5 Table of Contents Практическая работа №5 : Элементы регрессионного анализа . Выборочные прямые среднеквадратической регрессии . Корреляционные отношения Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Вопросы для самоконтроля Практическая работа №5 : Элементы регрессионного анализа . Выборочные прямые среднеквадратической регрессии . Корреляционные отношения Цель работы Ознакомление с основными положениями метода наименьших квадратов ( МНК ) , со статистическими свойствами МНК оценок , с понятием функции регрессии и роли МНК в регрессионном анализе , с корреляционным отношением , как мерой тесноты произвольной ( в том числе и линейной ) корреляционной связи . Постановка задачи Для заданной двумерной выборки $ ( X , Y ) $ построить уравнения выборочных прямых среднеквадратической регрессии . Полученные линейные функции регрессии отобразить графически . Найти выборочное корреляционное отношение . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Отобразить двумерную выборку на графике . Для заданной выборки построить уравнения средней квадратичной регрессии $ x $ на $ y $ и $ y $ на $ x $ соответственно . Построить полученные прямые на множестве выборки . Объяснить результаты . Составить корреляционную таблицу для нахождения выборочного корреляционного отношения . Убедиться , что неравенства $ \\eta_ { xy } \\geqslant |r_ { xy } | $ и $ \\eta_ { yx } \\geqslant |r_ { xy } | $ выполняются . Для заданной выборки построить корреляционную кривую параболического вида $ y = \\beta_0 + \\beta_1x + \\beta_2x^2 $ , сделать выводы . Для заданной выборки построить корреляционную кривую в зависимости от номера варианта и сделать выводы : степенная функция : $ y = \\beta_0x^ { \\beta_1 } $ ; показательная функция : $ y = \\beta_0\\exp ( \\beta_1x ) $ ; дробно-линейная функция : $ y = \\cfrac1 { \\beta_0 + \\beta_1x } $ ; логарифмическая функция : $ y = \\beta_0 + \\beta_1\\ln x $ ; обратно пропорциональная функция : $ y = \\beta_0 + \\cfrac { \\beta_1 } x $ ; дробно-рациональная функция : $ y = \\cfrac x { \\beta_0 + \\beta_1x } $ . Дополнительное необязательное задание : Вычислить следующие показатели качества регрессии для каждой кривой и сделать выводы : теоретический коэффициент детерминации $ R^2 $ ; средняя квадратическая ошибка $ S_ { \\varepsilon } $ ; средняя ошибка аппроксимации ( приближения ) $ A $ . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы ( если имеется ) . Вопросы для самоконтроля Сформулировать основную идею метода наименьших квадратов . Статистические свойства оценок , получаемых с помощью метода наименьших квадратов . Метод наименьших квадратов в регрессионном анализе . Построение выборочных прямых среднеквадратической регрессии с использованием метода наименьших квадратов . Дать определение понятия корреляционного отношения и охарактеризовать его свойства . Сформулировать алгоритм вычисления выборочного корреляционного отношения . courses/statistical_methods_of_experimental_data_handling/prac5.txt · ",
                "Практическая работа №6 : Кластерный анализ . Метод k-средних  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №6 : Кластерный анализ . Метод k-средних courses : statistical_methods_of_experimental_data_handling : prac6 Table of Contents Практическая работа №6 : Кластерный анализ . Метод k-средних Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Вопросы для самоконтроля Практическая работа №6 : Кластерный анализ . Метод k-средних Цель работы Освоение основных понятий и некоторых методов кластерного анализа , в частности , метода k-means . Постановка задачи Дано конечное множество из объектов , представленных двумя признаками ( в качестве этого множества принимаем исходную двумерную выборку , сформированную ранее в практической работе №4 ) . Выполнить разбиение исходного множества объектов на конечное число подмножеств ( кластеров ) с использованием метода k-means . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Нормализовать множество точек из предыдущего раздела , отобразить полученное множество . Определить « грубую » верхнюю оценку количества кластеров : $ \\tilde k = \\lfloor\\sqrt { N/2 } \\rfloor $ , где $ N $ – число точек . Реализовать алгоритм k-means в двух вариантах : пересчет центра кластера осуществляется после каждого изменения его состава ; пересчет центра кластера осуществляется лишь после того , как будет завершен просмотр всех данных ( шаг процедуры ) . На каждом шаге процедуры разбиения методом k-means вычислять функционалы качества полученного разбиения : $ F_1 $ – сумма по всем кластерам квадратов расстояний элементов кластеров до центров соответствующих кластеров ; $ F_2 $ – сумма по всем кластерам внутрикластерных расстояний между элементами кластеров ; $ F_3 $ – сумма по всем кластерам внутрикластерных дисперсий ( относительно центров кластеров ) . Отобразить полученные кластеры , выделить каждый кластер разным цветом , отметить центроиды . Содержательно проинтерпретировать полученные результаты . Дополнительные необязательные задания : Реализовать алгоритмы k-medians и k-medoids . Отобразить полученные кластеры , выделить каждый кластер разным цветом , отметить центроиды . Провести оценку методов , сделать выводы . С помощью метода локтя и/или метода силуэтов выявить для каждого метода оптимальное количество кластеров . Реализовать модификацию k-means++ . Объяснить её приемущества . Сравнить с обычным методом k-means . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы ( если имеется ) . Вопросы для самоконтроля Сформулировать основные задачи кластерного анализа . Дать классификацию и охарактеризовать основные методы кластерного анализа . Критерии качества кластерных разбиений . Описать и прокомментировать метод k-means кластерного анализа . courses/statistical_methods_of_experimental_data_handling/prac6.txt · ",
                "Практическая работа №7 : Кластерный анализ . Метод поиска сгущений  Курсы » Статистические методы обработки экспериментальных данных » Практическая работа №7 : Кластерный анализ . Метод поиска сгущений courses : statistical_methods_of_experimental_data_handling : prac7 Table of Contents Практическая работа №7 : Кластерный анализ . Метод поиска сгущений Цель работы Постановка задачи Порядок выполнения работы Содержание отчёта Вопросы для самоконтроля Практическая работа №7 : Кластерный анализ . Метод поиска сгущений Цель работы Освоение основных понятий и некоторых методов кластерного анализа , в частности , метода поиска сгущений . Постановка задачи Дано конечное множество из объектов , представленных двумя признаками ( в качестве этого множества принимаем исходную двумерную выборку , сформированную ранее в практической работе №4 ) . Выполнить разбиение исходного множества объектов на конечное число подмножеств ( кластеров ) с использованием метода поиска сгущений . Полученные результаты содержательно проинтерпретировать . Порядок выполнения работы Нормализовать множество точек , отобразить полученное множество . Реализовать алгоритм поиска сгущений , отобразить полученные кластеры , выделить каждый кластер разным цветом , отметить центроиды . Проверить чувствительность метода к погрешностям . Сделать выводы . Сравнить с методами из практической работы №6 . Сделать выводы . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Необходимые формулы , рисунки и таблицы . Краткие выводы по полученным результатам . Общий вывод по проделанной работе . Код программы ( если имеется ) . Вопросы для самоконтроля Сформулировать основные задачи кластерного анализа . Дать классификацию и охарактеризовать основные методы кластерного анализа . Критерии качества кластерных разбиений . Описать и прокомментировать метод поиска сгущений кластерного анализа . courses/statistical_methods_of_experimental_data_handling/prac7.txt · ",
                "✎ Статистические методы обработки экспериментальных данных  Курсы » Статистические методы обработки экспериментальных данных courses : statistical_methods_of_experimental_data_handling : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Статистические методы обработки экспериментальных данных ====== ===== Материалы ===== * [ [ .materials ] ] ===== Практические работы ===== * [ [ /prac1 ] ] * [ [ .prac2 ] ] * [ [ .prac3 ] ] * [ [ .prac4 ] ] * [ [ .prac5 ] ] * [ [ .prac6 ] ] * [ [ .prac7 ] ] courses/statistical_methods_of_experimental_data_handling/start.txt · ",
                "Статистические методы обработки экспериментальных данных - Old revisions  Курсы » Статистические методы обработки экспериментальных данных courses : statistical_methods_of_experimental_data_handling : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Статистические методы обработки экспериментальных данных ( external edit ) ( current ) 2022/06/28 18:17 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:17 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:16 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:16 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:16 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/28 18:14 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2022/06/28 18:13 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2022/06/22 16:52 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:50 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:48 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:47 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:47 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:45 Статистические методы обработки экспериментальных данных andrey.suchkov +2 B 2022/06/22 16:44 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:43 Статистические методы обработки экспериментальных данных – ↷ Links adapted because of a move operation andrey.suchkov ±0 B 2022/06/22 16:42 Статистические методы обработки экспериментальных данных – [ Курсовая работа ] andrey.suchkov -60 B 2022/06/22 16:41 Статистические методы обработки экспериментальных данных – [ Лабораторные работы ] andrey.suchkov ±0 B 2021/04/06 10:44 Статистические методы обработки экспериментальных данных – [ Курсовая работа ] andrey.suchkov +14 B 2021/03/30 04:13 Статистические методы обработки экспериментальных данных – [ Лабораторные работы ] andrey.suchkov +14 B 2021/03/23 11:01 Статистические методы обработки экспериментальных данных – [ Лабораторные работы ] andrey.suchkov +14 B Show differences between selected revisions less recent > > courses/statistical_methods_of_experimental_data_handling/start.txt · ",
                "Статистические методы обработки экспериментальных данных - "
            ]
        },
        {
            "name": "Разработка приложений для мобильных платформ",
            "url": "/doku.php/staff:courses:application_development_for_mobile_platforms",
            "date": "\"2024/02/15 09:24\"",
            "data": [
                "Разработка приложений для мобильных платформ  Сотрудникам » courses » Разработка приложений для мобильных платформ staff : courses : application_development_for_mobile_platforms Table of Contents Разработка приложений для мобильных платформ Коммуникация Видео-записи лекций Основные материалы Литература Дополнительные материалы Разработка приложений для мобильных платформ Коммуникация 1 . Добавляйте строчку [ ADFMP ] в тему своего письма , иначе оно будет отфильтровано в неправильное место и вы не получите ответ во время . ADFMP это Application Development For Mobile Platforms . Один участник команды ( кого команда уполномочила сдавать это задание ) пишет письмо преподвателю с темой “ [ ADFMP ] Название_задания - номер_И_название_проекта ” . Остальные участники указываются в копии письма . Переписка по одному заданию остается в рамках одной цепочки писем . Если вам необходимо указать на объект в репозитории , предоставьте полную ссылку на него ( такую , которая откроется по нажатию в браузере ) . Если вы отправляете скринкаст - присылайте ссылку на него ( прикладывать файл к письму не нужно ) . 2 . Не создавайте новые ветки обсуждений , старайтесь вести переписку в рамках одной ветки . 3 . Проверка начинается только после того , как вы напишите преподавателю письмо о готовности задания . Видео-записи лекций Весна , 2022 ( ВШЭ ИТМО ) https : //www.youtube.com/playlist ? list=PLplYTvoIyfopAbsKUc101YaUn4du6mIQz Весна , 2022 ( ЛЭТИ ) https : //www.youtube.com/playlist ? list=PLplYTvoIyfor7AFoOKX8qNM1NOJ16QhsZ Весна , 2021 https : //www.youtube.com/playlist ? list=PLplYTvoIyfoqsB5Pp0sjM9BuCsRAF2jCC & disable_polymer=true Основные материалы Организационные вопросы Форма для выбора проектов Таблица успехов Слайды лекций + Лекции от developers.android.com Формирование оценки и задания в рамках курсовой Курсовая работа - темы Онлайн-курс ( сам курс ) Первые 4 модуля https : //developer.android.com/courses/android-basics-compose/course Презентации в помощь https : //developer.android.com/teach # teach-a-class Где создать и настроить публичный профиль google developer ( если это не сделать , вам не зачтется онлайн курс : ( ) Переходим и указываем свои фамилию и имя https : //developers.google.com/profile/u/me Устанавливаем тип профиля Public https : //developers.google.com/profile/u/me/settings # account Дополнительно Образец оформления отчета по курсовой работе ( ЛЭТИ ) Курсовая работа - состав пояснительной записки Учебные материалы Ответы на вопросы Литература Не заставляйте меня думать , Стив Круг UI-First Software Development Дополнительные материалы Методы уточнения координат на мобильных устройствах Библиотеки для Android staff/courses/application_development_for_mobile_platforms.txt · ",
                "Разработка приложений для мобильных платформ - ",
                "",
                "Формирование оценки  Сотрудникам » courses » Разработка приложений для мобильных платформ » Формирование оценки staff : courses : application_development_for_mobile_platforms : mark Table of Contents Формирование оценки Этапы выполнения курсовой контроля Идея Общие советы по курсовой работе Проверка стабильности работы приложений Эмулятор , на котором будут проверятся работы Список этапов Формирование оценки Допуск ( зачет ) Дедлайны проверок Оценка Формирование оценки Этапы выполнения курсовой контроля Идея В курсе балльно-рейтинговая система оценивания . Баллы ( 0-100 ) складываются из : ( индивидуально ) Полное прохождение онлайн-курса ( 0-40 баллов пропорционально степени прохождения , нужный балл в курсе указан в Таблице успехов ) ( группа ) Выполнение курсовой ( 0-60 баллов ) О курсовой : Подготовка курсовой работы разбита на отдельные блоки ( этапы ) . Работа ведется в github репозитории проекта , доступ в который вам дает преподаватель . Вы работаете в репоизтории полностью самостоятельно . Результаты этапов сдаются в ветке main , сдавать их в виде Pull Request не нужно . Этап считается сданным , когда в таблице с текущим контролем он получает соответствующую отметку . Внимательно следите , чтобы эти отметки появлялись - от этого зависит объем вашей работы . За каждый сданный этап команда получает баллы . Баллы указаны в Таблице успехов . У каждого этапа есть срок , когда его необходимо сдать . Этот срок указан в заголовке в Таблице успехов . Если этап сдан без опоздания , то команда получает все баллы за этап . Если этап сдан с опозданием от необходимого срока , то команда получает половину ( 50 % ) от баллов за этап . Фраза в виде вики-страницы , означает , что задание сдается в виде вики-страницы в репозитории проекта . Иные варианты сдачи ( аттач в письме , файл в репо , устно , в виде песни или танца … . ) - не принимаются . ! ! Внизу указано больше этапов , чем вам нужно выполнить . Не делайте лишней работы . ! ! Общие советы по курсовой работе Смысл данного курса - разработать приложение с перспективы потенциального пользователя . Это означает , что первичны вопросы ( и оцениваются именно они ) : Удобства и понятности пользовательского интерфейса / сценария , Универсальности и стабильности работы приложения . Следующие вопросы вторичны : Бакенды Модели машинного обучения , Базы данных . Проверка стабильности работы приложений Проверка приложений на стабильность работы будет выполнятся вручную и автоматизировано . Для автоматизированной проверки будет использован скрипт https : //bitbucket.org/mark_zaslavskiy/adfmp/src/master/monkey.sh Эмулятор , на котором будут проверятся работы Android Studio Hedgehog | 2023.1.1 Patch 1 Экран hw.lcd.density 560 hw.lcd.height 3120 hw.lcd.width 1440 Прочее ( Версия API в эмуляторе 30 ) image.androidVersion.api 30 avd.ini.displayname Pixel 6 Pro API 30 avd.ini.encoding UTF-8 AvdId Pixel_6_Pro_API_30 disk.dataPartition.size 2G fastboot.chosenSnapshotFile fastboot.forceChosenSnapshotBoot no fastboot.forceColdBoot no fastboot.forceFastBoot yes hw.accelerometer yes hw.arc false hw.audioInput yes hw.battery yes hw.camera.back virtualscene hw.camera.front emulated hw.cpu.ncore 2 hw.device.hash2 MD5 : a8abfd3536f3d35e4ba2041a7b99f40e hw.device.manufacturer Google hw.device.name pixel_6_pro hw.dPad no hw.gps yes hw.gpu.enabled yes hw.gpu.mode auto hw.initialOrientation Portrait hw.keyboard yes hw.mainKeys no hw.ramSize 1536 hw.sdCard yes hw.sensors.orientation yes hw.sensors.proximity yes hw.trackBall no image.sysdir.1 system-images/android-30/google_apis/x86/ PlayStore.enabled false runtime.network.latency none runtime.network.speed full showDeviceFrame yes skin.dynamic yes tag.display Google APIs tag.id google_apis vm.heapSize 384 Список этапов Макет и сценарий использования Руководство Продемонстрирована работа Android Studio на вашем компьютере ( в формате микроскринкаста работы helloworld ) . Скринкаст выложен в репо и / или на него дана ссылка Код приложения helloworld выложен в репозиторий ( просто для проверки что есть доступ ) Сформулированы реализуемые сценарии использования в виде вики-страницы . Нарисован макет пользовательского интерфейса в виде графа ( по аналогии с прошлым семестром ) и выложенн в репозиторий , макет показан на вики-странице , где также размещены сценарии использования приложения . UI на заглушках Результат : в репозитории установлен тег 0.5 код приложения выложен в репозитории , есть .gitignore для Android Studio , в котором в числе прочего полностью добавлен каталог .idea ( каталога .idea не должно быть в репо также как и промежуточных артефактов сборки ) , приложение собирается и запускается на эмуляторе и AS , обозначенных выше переходы работают , но данные отображаются только те , что захардкожены в элементах UI , приложение не падает с exception в ответ на любые действия пользователя . пакет приложения называется согласно теме курсов ( использование названия по умолчанию или не информативного названия будет ошибкой ) . в приложении есть экран About , где указаны авторы . Частично работоспособный UI Результат : в репозитории установлен тег 0.8 выполнены требования “ UI на заглушках ” , код приложения выложен в репозитории , если для работы приложения нужны secrets , ключи или иные чувствительные данные , то авторы должны их предоставить в письме если для сборки требуются нетривиальные действия ( что-то кроме Run ) , то авторы должны подготовить в README.md инструкцию ( в целом , желательно избегать дополнительных шагов ) если в приложении есть механизм регистрации , то авторы должны добавить в приложение тестовый аккаунт и указать его данные в README.md приложение собирается и запускается на эмуляторе , обозначенном выше , UI позволяет вводить пользовательские данные , реализовано не менее одного сценария использования , в приложении есть или реальные , или демо данные . В последнем случае , данных должно быть достаточно для демонстрации реализованных сценариев использования . Оценка сложности пользовательского интерфейса вашего приложения Руководство по измерению последовательности действий и оценки сложности UI Результат : вики-страница с таблицой подсчета количества действий ( суммарным ) , количеством действий по каждому виду взаимодействия ( кликов/вводов текста/ нажатий на апп.кнопки и пр . ) , иллюстрирующие подсчет скриншоты . выводом о том , как можно упростить последовательность . макетом интерфейса , реализующим предыдущий пункт . аналогичным подсчетом количества действий для ближайшего аналога вывод по итогам сравнения с аналогом ( Кто удобнее ) Окончательная версия приложения Результат : в репозитории установлен тег 1.0 выполнены требования от “ Частично работоспособный UI ” http : //se.moevm.info/doku.php/staff : courses : application_development_for_mobile_platforms : mark # % D1 % 87 % D0 % B0 % D1 % 81 % D1 % 82 % D0 % B8 % D1 % 87 % D0 % BD % D0 % BE_ % D1 % 80 % D0 % B0 % D0 % B1 % D0 % BE % D1 % 82 % D0 % BE % D1 % 81 % D0 % BF % D0 % BE % D1 % 81 % D0 % BE % D0 % B1 % D0 % BD % D1 % 8B % D0 % B9_ui код приложения выложен в репозитории , его можно скачать , собрать и запустить . При этом выполняются все сценарии использования , приложение работает стабильно . У приложения есть иконка , корректное название ( согласно теме ) . В приложении есть или реальные , или демо данные . В последнем случае , данных должно быть достаточно для демонстрации всех сценариев использования . Создание юнит-тестов для приложения Результат : тег unit в репозитории выложены файлы юнит-тестов ( не менее 3х TestCase ) для основных классов , которые можно запустить стандартным способом через Android studio , в репозитории настроен автоматический запуск юнит-тестов по коммитам через Github actions . Если вам кажется , что для вашего приложения юнит-тесты не сделать - это означает , что либо оно еще слишком сырое ( в нем только заглушки ) , либо что вы не отделили бизнес-логику от интерфейсов . Пояснительная записка Пояснительная записка в электронном виде ( требования http : //se.moevm.info/doku.php/staff : courses : application_development_for_mobile_platforms : course_work ) Выложена в репозиторий в doc ( x ) /odt + pdf ( в каталог docs , формат названия report_ФАМИЛИИ . ) Соответствует требованиям оформления ВУЗа . Есть непустой список литературы . Нет разделов без текста . Все таблицы , рисунки и схемы имеют подпись . В списке литературы указана ссылка на ваш открытый репозиторий в github/bitbucket . Бумажный вариант прошит или скреплен . Создание интеграционных тестов для приложения Интеграционные тесты == espresso-тесты ( каюсь , термин не совсем удачный ) Результат : тег integrationtests в репозитории выложены файлы интеграционных тестов для основных сценариев использования , которые можно запустить стандартным образом ( как Android InstrumentedTest ) , либо скрипт для запуска ( например , если это тесты для игры ) ; тесты стабильно выполняются при нескольких запусках подряд на эмуляторе , обозначенном выше ; тесты проверяют работу приложения преимущественно через его UI ; Если в вашем приложении сложно писать интеграционные тесты , возможно , у вас есть проблемы с UI ( он плохо показывает состояния приложения ) и/или с архитектурой . Материалы для публикации Подготовьте материалы , необходимые для публикации приложения в Play Market . краткое описание , 80 символов ; полное описание , не более 4000 символов ; иконка ( 512 x 512 32-bit PNG ( with alpha ) ) ; Feature Graphic 1024 w x 500 h , JPG or 24-bit PNG ( no alpha ) ; три скриншота . ￼Материалы необходимо выложить в репозитории в каталог play_market_publication/ Формирование оценки Допуск ( зачет ) Необходимые условия ( ЛЭТИ ) : Чтобы претендовать на оценку выше “ Не аттестован ” , в репозитории проекта должно быть не менее ( 10 / 15 / 20 - Удовл . / Хор / Отл ) коммитов в абсолютном выражении в КОД ПРОЕКТА , созданных участником . Комииты в README , wiki , загрузка картинок к коду проекта не относятся : ( Аргументы из серии “ у меня не было доступа и за меня пушил коллега по команде ” / “ я неправильно настроил гит / ссш ” не принимаются : ( участник должен полностью пройти онлайн-курс ; у группы должно быть сдано задание “ Пояснительная записка ” . Дедлайны проверок Все время - Московское . Мягкий дедлайн - 27.03.2024 23:59 Жесткий дедлайн - 28.03.2024 14:00 Срок окончательной проверки 29.03.2024 14:00 Как работают дедлайны : Все присланное до мягкого дедлайна будет проверено до наступления жесткого дедлайна Все присланное до жесткого дедлайна будет проверено до срока окончательной проверки Все присланное после жесткого дедлайна будет проигнонировано . Оценка Оценка выставляется только при получении зачета ( см . выше ) . Как баллы трансформируются в оценки ( 5-балльная система ) : < 70 — Неудовлетворительно > =70 & & < 80 — Удовлетворительно > =80 & & < 90 — Хорошо > =90 — Отлично staff/courses/application_development_for_mobile_platforms/mark.txt · ",
                "Темы курсовых работ  Сотрудникам » courses » Разработка приложений для мобильных платформ » Состав пояснительной записки » Темы курсовых работ staff : courses : application_development_for_mobile_platforms : course_work : topics Table of Contents Темы курсовых работ 01 Чайный каталог 02 Строительный калькулятор 03 Приложение для сбора валежника 04 Приложение для мониторинга пациентов 05 Система экологического мониторинга 06 Приложение курьерской фирмы 07 Райдшеринг 08 Приложение - справочник дрессировщика 09 Умиротворяющие мозаики 10 Приложение для дыхательных практик 11 Круговые шахматы 12 Построение маршрутов с учетом плохой парковки Темы курсовых работ 01 Чайный каталог Идея - сделать приложение , где хранится информация о разных сортах чая , способах заварки и истории . Фичи : каталог с фильтром карточки сортов ( включают иллюстрации , историю , инструкцию приготовления ) любимые чаи ( с возможностью поделится списком ) добавление нового сорта дневник чаепитий 02 Строительный калькулятор Идея - сделать приложение для подсчета необходимого количества материалов ( грубо ) . Общий сценарий использования : выбираем тип работ указываем объем ( например , для отделки - высоту потолков и периметр ) указываем цены и фасовку материлов ( сколько метров обоев в рулоне , сколько подрезка … . ) получаем расчет Фичи : подсчеты по сантехнике , электрика , плитке , ламинату , отделочные материалы . 03 Приложение для сбора валежника Идея - сделать приложение с инструкцией по сбору валежника . Фичи : Подробная инструкция + иллюстрации что относится / что не относится , ответы на часто задаваемые вопросы Контакты ответственных органов Карта и каталог мест для сбора ( https : //nature.lenobl.ru/ru/deiatelnost/lesopolzovanie/vnimaniyu-grazhdan/pamyatka-po-sboru-valezhnika/informaciya-o-territoriyah-trebuyushih-ochistki-ot-valezhnika-statya-3/ ) Игрофикационный момент : страница для фиксации текущего сбора ( фото , примерный объем , координаты , откуда ехали к месту ( чтобы посчитать carbon footprint ) ) , список моих сборов , кнопка поделится https : //nature.lenobl.ru/ru/deiatelnost/lesopolzovanie/vnimaniyu-grazhdan/pamyatka-po-sboru-valezhnika/ 04 Приложение для мониторинга пациентов Роли - пациенты , доктора Доктора дают пациентам опросники , документы на подпись , аггрегируют данные по пациентам , планируют лечение и ведут карточки пациентов . Пациенты проходят опросы в приложении , выполняют тесты самостоятельно ( например , на физ форму ) и фиксируют результаты ( фото видео ) , прикрепляют сканы заполненных документов , получают рекомендации . 05 Система экологического мониторинга Необходимо сделать клиентское приложение , которое реализует ввод событий ( проишествия в плане экологии - незаконный сброс отходов , разросшийся борщевик , опасные выбросы , свалки и тд ) , просмотр статистики , сценарии для администраторов и пользователей . 06 Приложение курьерской фирмы Необходимо сделать клиентское приложение , которое реализует сценарии для администраторов и пеших курьеров : Курьер мои заказы моя статистика чат с поддержкой данные заказа маршрут и карта Администратор аналогично страницам курьера , но имеет возможность просматривать данные всех курьеров 07 Райдшеринг Необходимо сделать клиентское приложение , которое реализует сценарии для администраторов и пользователей . Пользователь Мой аккаунт , баланс , личные данные Мои поездки Поддержка Администратор Общая статистика Автопарк ( список машин , карточки , данные про тех обслуживание , бензин и тд ) 08 Приложение - справочник дрессировщика Идея - сделать приложение , где собраны инструкции по дрессировке домашних питомцев , а также есть возможность фиксировать прогресс и делится им с окружающими . Фичи : Профили пользователей и питомцев Каталог иллюстрированных инструкций Фиксация прогресса ( фото / видео ) и тренировок питомцев Достижения Уведомления 09 Умиротворяющие мозаики Идея - сделать приложение , где пользователь под успокаивающую музыку собирает мозаики ( +- как пазл , но только все кусочки квадратные . Фичи : отображение сетки на поле и бледной подсветки будущего изображения ) drag n drop кусочков на поле счетчик правильно уложенных кусочков Несколько предустановленных изображений для сбора , разного уровня сложности Несколько предустановленных расслабляющих мелодий - 10 Приложение для дыхательных практик Идея - пользователь ложиться , кладет устройство себе на живот , приложение анализирует паттерны дыхания и в игровой форме направляет пользователя на корректное выполнение упражнений . Фичи : Примитивная обработка данных акселерометра и гироскопа Обратная связь от приложения ввиде мелодии / вибрации Кастомизируемый список упражнений Система баллов за выполнение тренировок , уровни и ачивки Напоминания Экран достижений / истории тренировок 11 Круговые шахматы Реализовать приложение для игры в круговые шахматы ( https : //ru.wikipedia.org/wiki/ % D0 % A8 % D0 % B0 % D1 % 85 % D0 % BC % D0 % B0 % D1 % 82 % D1 % 8B_ % D0 % BD % D0 % B0_ % D0 % BA % D1 % 80 % D1 % 83 % D0 % B3 % D0 % BB % D1 % 8B % D1 % 85_ % D0 % B4 % D0 % BE % D1 % 81 % D0 % BA % D0 % B0 % D1 % 85 ) как с ботом ( бот очень тупой ) , так и человеком по hotseat . Фичи : удобные элементы для hotseat - возможность отменить ход , диалоговые окна для передачи устройства отображение счета в процессе игры таблица статистики ( побед , счета ) подсказки при игре с ботом 12 Построение маршрутов с учетом плохой парковки Реализуем клиент ( Свой навигатор ) для сценария из темы “ Построение маршрутов с учетом плохой парковки ” https : //se.moevm.info/doku.php/staff : courses : no_sql_introduction : course_work : topics staff/courses/application_development_for_mobile_platforms/course_work/topics.txt · ",
                "Состав пояснительной записки  Сотрудникам » courses » Разработка приложений для мобильных платформ » Состав пояснительной записки staff : courses : application_development_for_mobile_platforms : course_work Состав пояснительной записки Введение Актуальность решаемой проблемы Постановка задачи Предлагаемое решение Почему решение необходимо реализовывать как мобильное приложение Сценарии использования ( Рекомендации по составлению сценариев использования ) Пользовательский интерфейс ( Рекомендации по составлению макета + Сервисы составления макетов ) Макет интерфейса с графом переходов Целевые устройства , обоснование требований и максимально подробные характеристики Тип устройств ( планшеты , смартфоны , умные часы … ) Аппаратная составляющая ( характеристики устройств - системные требования , если применимо ) Разработанное приложение Краткое описание Схема архитектуры Использованные технологии ( внешние ) Использованные модули/системные библиотеки вашей платформы Ссылки на раздел Приложение Последовательность действий для осуществления сценариев использования Измерение последовательности действий для осуществления сценариев использования ( какие надо сделать шаги и сколько ) Пути для сокращения последовательности ( примечание - отрицательные ответы не принимаются ) Выводы Достигнутые результаты Недостатки и пути для улучшения полученного решения Будущее развитие решения Список литературы Приложения Инструкция для пользователя Снимки экрана приложения Порядок выполнения Задан порядком этапов . staff/courses/application_development_for_mobile_platforms/course_work.txt · ",
                "Основные учебные материалы  Сотрудникам » courses » Разработка приложений для мобильных платформ » Основные учебные материалы staff : courses : application_development_for_mobile_platforms : study_materials Table of Contents Основные учебные материалы Лекции Практика Построение макета UI и описание сценариев использования Введение в язык Kotlin Работа с Android Studio Ссылки Основные учебные материалы Лекции https : //drive.google.com/file/d/1PAWgGjV6sdEQxkCgePBRbJXwXEzpZACG/view ? usp=sharing Практика Построение макета UI и описание сценариев использования Составление макета Презентация про то , как составлять макет и писать сценарии использования ( +типичные ошибки ) Введение в язык Kotlin Официальная документация Перевод официальной документации Основы Kotlin + Видео Объектно-ориентированное программирование в Kotlin + Видео ООП в Kotlin - дополнительные разделы Скринкасты про использование Kotlin ( осторожно - местами громкий звук ) Stepik : Разработка Android приложений на Kotlin Введение в Kotlin - хороший вводный курс на русском Kotlin - очень подробный курс с большим количеством задач , но 1 ) на английском 2 ) теории очень мало Работа с Android Studio Kotlin + Android UI , debug , profiling + Видео Тестирование Android-приложений + Видео LibGDX Framework + Видео Как создавать элементы управления в LibGDX Скринкасты про настройку AS , HelloWorld и простейшие UI ( осторожно - местами громкий звук ) Скринкасты про программирование UI ( осторожно - местами громкий звук ) Ссылки Лекции кружка `` Разработка Android приложений на Kotlin '' Презентация `` Введение в разработку на Android '' staff/courses/application_development_for_mobile_platforms/study_materials.txt · ",
                "staff : courses : application_development_for_mobile_platforms : coords_improve  Сотрудникам » courses » Разработка приложений для мобильных платформ » coords_improve staff : courses : application_development_for_mobile_platforms : coords_improve Методы уточнения координат : Контекстные вычисления ( когда у нас есть гипотеза о характере движения позиционируемого объекта ( например что машины не ездят по воде/зданиями ) ) Как Яндекс уточняет координаты автолюбителей https : //yandex.ru/company/technologies/yaprobki/ # h-2 Более общая формулировка идеи из статьи выше http : //making.csie.ndhu.edu.tw/seminar/making/papers/PDF/Improve % 20GPS % 20positioning % 20accuracy % 20with % 20context.pdf Математические методы уточнения и источники ошибок в позиционировании https : //www.hindawi.com/journals/tswj/2014/671494/ http : //eprint.ncl.ac.uk/file_store/production/209077/0A3398E7-FF58-4E10-A51D-4B441A3AABCC.pdf Использование данных инерциальной навигации ( https : //ru.wikipedia.org/wiki/ % D0 % 98 % D0 % BD % D0 % B5 % D1 % 80 % D1 % 86 % D0 % B8 % D0 % B0 % D0 % BB % D1 % 8C % D0 % BD % D0 % B0 % D1 % 8F_ % D0 % BD % D0 % B0 % D0 % B2 % D0 % B8 % D0 % B3 % D0 % B0 % D1 % 86 % D0 % B8 % D1 % 8F ) http : //pathfinder.engin.umich.edu/documents/Akula & Dong & KamatEtAl.CICE.2010.pdf staff/courses/application_development_for_mobile_platforms/coords_improve.txt · ",
                "staff : courses : application_development_for_mobile_platforms : android_libs  Сотрудникам » courses » Разработка приложений для мобильных платформ » android_libs staff : courses : application_development_for_mobile_platforms : android_libs [ EN ] Каталог наиболее популярных библиотек для Android по всем направлениям https : //snowdream.github.io/awesome-android/ [ EN ] Как подключить внешнюю библиотеку для Android приложения http : //o7planning.org/en/10525/how-to-add-external-libraries-to-android-project-in-android-studio staff/courses/application_development_for_mobile_platforms/android_libs.txt · ",
                "✎ Разработка приложений для мобильных платформ  Сотрудникам » courses » Разработка приложений для мобильных платформ staff : courses : application_development_for_mobile_platforms This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Разработка приложений для мобильных платформ ====== ===== Коммуникация ===== 1 . Добавляйте строчку * * [ ADFMP ] * * в тему своего письма , иначе оно будет отфильтровано в неправильное место и вы не получите ответ во время . ADFMP это Application Development For Mobile Platforms . * Один участник команды ( кого команда уполномочила сдавать это задание ) пишет письмо преподвателю с темой * * '' [ ADFMP ] Название_задания - номер_И_название_проекта '' * * . * Остальные участники указываются в копии письма . * Переписка по одному заданию остается в рамках одной цепочки писем . * Если вам необходимо указать на объект в репозитории , предоставьте полную ссылку на него ( такую , которая откроется по нажатию в браузере ) . * Если вы отправляете скринкаст - присылайте ссылку на него ( прикладывать файл к письму не нужно ) . 2 . Не создавайте новые ветки обсуждений , старайтесь вести переписку в рамках одной ветки . 3 . Проверка начинается только после того , как вы напишите преподавателю письмо о готовности задания . ===== Видео-записи лекций ===== * Весна , 2022 ( ВШЭ ИТМО ) https : //www.youtube.com/playlist ? list=PLplYTvoIyfopAbsKUc101YaUn4du6mIQz * Весна , 2022 ( ЛЭТИ ) https : //www.youtube.com/playlist ? list=PLplYTvoIyfor7AFoOKX8qNM1NOJ16QhsZ * Весна , 2021 https : //www.youtube.com/playlist ? list=PLplYTvoIyfoqsB5Pp0sjM9BuCsRAF2jCC & disable_polymer=true ===== Основные материалы ===== * Организационные вопросы * [ [ https : //forms.gle/5Zr7ycBaPY2coN4d8|Форма для выбора проектов ] ] * [ [ https : //docs.google.com/spreadsheets/d/1DcHPSbds1vh3rvlgq2Ihmw66y9uWwJzd-MdExiE2Jhs/edit ? resourcekey # gid=1874159998|Таблица успехов ] ] * [ [ https : //drive.google.com/drive/folders/1WuLJVCtfdPh-7L5ZhozpDAV_oAIBpzHh|Слайды лекций ] ] + [ [ https : //developer.android.com/teach # teach-a-class|Лекции от developers.android.com ] ] * [ [ staff : courses : application_development_for_mobile_platforms : mark| Формирование оценки и задания в рамках курсовой ] ] * [ [ staff : courses : application_development_for_mobile_platforms : course_work : topics|Курсовая работа - темы ] ] * Онлайн-курс * ( сам курс ) Первые 4 модуля https : //developer.android.com/courses/android-basics-compose/course * Презентации в помощь https : //developer.android.com/teach # teach-a-class * Где создать и настроить * * публичный * * профиль google developer ( если это не сделать , вам не зачтется онлайн курс : ( ) * Переходим и указываем свои фамилию и имя https : //developers.google.com/profile/u/me * Устанавливаем тип профиля * * Public * * https : //developers.google.com/profile/u/me/settings # account * Дополнительно * [ [ http : //eltech.ru/assets/files/3004_3_ShABLON-kursovika.doc|Образец оформления отчета по курсовой работе ( ЛЭТИ ) ] ] * [ [ staff : courses : application_development_for_mobile_platforms : course_work|Курсовая работа - состав пояснительной записки ] ] * [ [ staff : courses : application_development_for_mobile_platforms : study_materials|Учебные материалы ] ] * [ [ https : //docs.google.com/presentation/d/1WS_6EDGq3YYtL1eEfsQG1uDexkxMw1tP5WWvcvnCNlI/edit ? usp=sharing|Ответы на вопросы ] ] ===== Литература ===== * [ [ http : //aniri.flatrate.ru/Reading/Kompjuternaja % 20literatura/ % D0 % A1 % D1 % 82 % D0 % B8 % D0 % B2 % 20 % D0 % 9A % D1 % 80 % D1 % 83 % D0 % B3 % 20- % 20 % D0 % 92 % D0 % B5 % D0 % B1- % D0 % 94 % D0 % B8 % D0 % B7 % D0 % B0 % D0 % B9 % D0 % BD % 20 % E2 % 80 % 93 % 202008.PDF|Не заставляйте меня думать , Стив Круг ] ] * [ [ https : //blog.codinghorror.com/ui-first-software-development/|UI-First Software Development ] ] ===== Дополнительные материалы ===== * [ [ staff : courses : application_development_for_mobile_platforms : coords_improve|Методы уточнения координат на мобильных устройствах ] ] * [ [ staff : courses : application_development_for_mobile_platforms : android_libs|Библиотеки для Android ] ] staff/courses/application_development_for_mobile_platforms.txt · ",
                "Разработка приложений для мобильных платформ - Old revisions  Сотрудникам » courses » Разработка приложений для мобильных платформ staff : courses : application_development_for_mobile_platforms Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/15 09:24 Разработка приложений для мобильных платформ – [ Основные материалы ] mark -149 B ( current ) 2024/01/19 11:21 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +96 B 2024/01/16 15:02 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +455 B 2024/01/16 14:49 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +46 B 2024/01/11 12:46 Разработка приложений для мобильных платформ mark -306 B 2023/02/06 14:50 Разработка приложений для мобильных платформ – [ Коммуникация ] mark -19 B 2023/02/06 14:50 Разработка приложений для мобильных платформ mark ±0 B 2023/01/16 09:31 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +9 B 2023/01/11 11:50 Разработка приложений для мобильных платформ – [ Основные материалы ] mark -12 B 2023/01/11 11:49 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +70 B 2023/01/11 11:46 Разработка приложений для мобильных платформ – [ Основные материалы ] mark -18 B 2023/01/11 11:31 Разработка приложений для мобильных платформ – [ Коммуникация ] mark +750 B 2022/12/10 09:08 Разработка приложений для мобильных платформ – external edit 127.0.0.1 ±0 B 2022/02/08 14:20 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +13 B 2022/01/28 11:30 Разработка приложений для мобильных платформ – [ Видео-записи лекций ] mark +10 B 2022/01/18 15:04 Разработка приложений для мобильных платформ – [ Видео-записи лекций ] mark +100 B 2022/01/17 13:26 Разработка приложений для мобильных платформ – [ Основные материалы ] mark -137 B 2022/01/17 13:26 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +26 B 2022/01/11 12:54 Разработка приложений для мобильных платформ – [ Видео-записи лекций ] mark +111 B 2021/02/24 12:17 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +109 B 2021/02/10 11:35 Разработка приложений для мобильных платформ – [ Основные материалы ] mark +2 B Show differences between selected revisions less recent > > staff/courses/application_development_for_mobile_platforms.txt · ",
                "Разработка приложений для мобильных платформ - "
            ]
        },
        {
            "name": "Аттестация за преддипломную практику (весенний семестр 4 и 6 курса)",
            "url": "/doku.php/diplomants:start:diploma_attestation",
            "date": "\"2024/02/21 15:53\"",
            "data": [
                "Преддипломная практика ( весенний семестр 4 и 6 курса )  Дипломникам » Дипломникам » Преддипломная практика ( весенний семестр 4 и 6 курса ) diplomants : start : diploma_attestation Table of Contents Преддипломная практика ( весенний семестр 4 и 6 курса ) Обозначения Идея ВАЖНО Задания Прохождение автоматизированной предзащиты Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) Предоставление отзыва руководителя по преддипломной практике Отправка заданий и таблица Перевод в пятибальную оценку Преддипломная практика ( весенний семестр 4 и 6 курса ) Обозначения Текст ВКР == Текст диплома == Пояснительная записка == Диплом Идея Аттестовывать дипломников по критериям , которые продвинут их в выполнении ВКР . Преддипломная практика - учебная активность , специально добавленная в конце весеннего семестра в учебный план для того , чтобы у студентов было формально время активно занятся подготовкой диплома . Смысл преддипломной практики - подготовить все необходимые материалы для выхода на защиту . Оценка вычисляется по сумме баллов за выполненные задания ( разброс 0-10 баллов ) . Просроченные этапы оцениваются с коэффициентом 0.5 . Необходимое ( но не достаточное ) условие для получения положительной оценки за преддипломную практику - наличие текста ВКР . При отсутствии - оценка Неудовлетворительно . Сдача материалов в курсе автоматизированной предзащиты Общие сроки сдачи ( даты выставления оценок за преддипломную практику == сдаете позже , получаете Неудовлетворительно + недопуск на защиту ) : Магистры до 14:00 14.05.24 по Московскому времени . Бакалавры до 14:00 14.05.24 по Московскому времени . ВАЖНО Проверяйте , что ссылки , которые вы указываете в форме , доступны без авторизации . Задания Прохождение автоматизированной предзащиты Чтобы этот этап был зачтен , проходите тренировки и загружайте презентации по ссылке ниже : Раздел для бакаларов Раздел для магистров Вам необходимо пройти автоматизированную предзащиту с помощью специального курса на платформе e.moevm.info . Для прохождения вам потребуется микрофон и подготовленная презентация для защиты ВКР . Рекомендации по подготовке презентации http : //se.moevm.info/doku.php/diplomants : start : slides_checklist_etu В рамках автоматизированной предзащиты вам будет необходимо провести три самостоятельные тренировки вашего выступления на защите ВКР с презентацией и набрать по их итогам полтора балла ( в рамках самого задания - баллы e.moevm.info ) . Основной критерий оценивания - попадание во временной регламент . Ваша презентация также будет проходить автоматическое оценивание . Если в данной активности вы подготовили качественную презентацию , то это зачтется и для проверки презентаций ( следующий этап допуска к защите ) . Количество попыток ( одна попытка == три тренировки ) не ограничено , однако , имейте в виду , что время проверки и время оценивания вашей попытки пропорциональны длительности аудио ( время проверки == 0.7 * длительность тренировки ) . Поэтому , коллектив авторов проекта настоятельнейшим образом не рекоммендует вам откладывать тренировки на последний момент . Детализацию оценок и критерии проверки ваших тренировок можно увидеть в задаче http : //e.moevm.info/mod/lti/view.php ? id=1274 . Проведнные тренировки будут выборочно проверены преподавателями вручную , при обнаружения жульничества ваши баллы будут аннулированы . Оценка 0-2 балла ( вычисляется автоматически по итогам предзащиты - пересчитаем баллы из e.moevm.info в эту шкалу ) . Если вы набрали в задаче ( на e.moevm.info ) не менее 1.5 балла - вы получаете в таблице 2 балла , Иначе , вы получаете баллы в таблице по формуле : баллы_в_таблице = баллы_за_задачу * 0,75 Срок сдачи Магистры до 14:00 14.05.24 по Московскому времени . Бакалавры до 14:00 14.05.24 по Московскому времени . Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) Предоставьте версию ВКР в формате docx для автоматической проверки , по ссылкам ниже Раздел для бакаларов Раздел для магистров Для проверки очень важно , чтобы вы использовали шаблон по ссылке ( это не стандартный шаблон ВУЗа ) + чтобы вы корректно использовали стили для оформления работы ( Заголовок 2 для названий глав , Заголовок 3 - для подразделов глав , Заголовок 4 - для подподразделов глав ) . Если использовать неправильный шаблон , то вы получите очень много замечаний и вам придется много исправлять . Также нельзя использовать Google Docs для редактирования - они затирают стили и вам потом придется их вручную по всему документу исправлять . Проверка включает в себя как базовую проверку корректности ( наличие необходимых разделов и структура , оформление текста , количество страниц ) , так и проверка на типовые ошибки по содержанию . Насколько завершенной должна быть пояснительная записка и можно ли будет ее потом исправлять : В ряде случаев у вас есть возможность вносить исправления в пояснительную записку - это можно понять , сверившись с датой вашей защиты из соотвествующего документа `` Порядок предоставления документов ... '' . Если у вас дата нормоконтроля стоит позже даты окончания преддипломной практики , значит у вас есть время на доп.правки , в противном случае времени у вас нет . Документ должен иметь высокую степень готовности : Готовы все главы ( доп.раздел может быть не готов в полной мере , но автоматическая проверка будет писать замечания и к нему ) Заполнены все поля шаблона ( выделенные красным ) Оформление полностью соответствует требованиям В крайнем случае , можно присылать версию текста ВКР , не согласованную с руководителем ( где не исправлены все замечания ) . Никаких подписей в тексте ВКР не требуется . Как выглядит алгоритм проверки : Вы добиваетесь полного прохождения автоматической проверки ( выполнены все критерии ) . Только после этого , преподаватель включается в работу и пишет свои замечания в таблице и оценку . Вы исправляете замечания , загружете материал в автоматическую проверку и процесс повторяется . Оценка 0-3 баллов 0-2 балла за автоматическую проверку : если количество набранных баллов системы менее 0.5 , то баллы_в_таблице = 0 если количество набранных баллов системы более 0.9 , то баллы_в_таблице = 2 иначе баллы_в_таблице = баллы_системы * 2 0-1 балл за проверку преподавателем Какого рода ошибки чаще всего находят преподаватели : проблемы на первых трех листах ( год , указание должности зав.каф . ( надо указывать зав . каф . МОЭВМ А.А . Лисс ) ) странности со шрифтами в оглавлении ( слишком большие / маленькие , не TNR ) мелкие шрифты на рисунках ( если поставить масштаб страницы так , чтобы он соответствовал А4 и при этом вы не можете прочитать текст на рисунке - это проблема . все надписи на всех рисунках должны быть различимы ) плохо различимые кривые на графиках , отсутствие маркеров ( если кривых на графике больше одной , нужно ставить маркеры разной формы ) инородные элементы в тексте работы рисунки не несут полезной нагрузки ( например , скриншоты сайтов , стопкадры с видео … ) - создают воду исходный код в основной части ( кроме работ связанных с компиляторами , синтаксическим анализом , инструментам разработки и тд ) - создают воду В качестве даты сдачи задания ( для предотвращения просрочки этапа ) считается дата первой проверки , для которой баллы_системы > = 0.5 . Срок сдачи Магистры до 23:59 07.05.24 по Московскому времени . Бакалавры до 10:00 13.05.24 по Московскому времени . Предоставление отзыва руководителя по преддипломной практике Предоставьте ссылку на скан отзыва с подписью и оценкой руководителя . Данный отзыв может подписать как формальный руководитель от ВУЗа , так и руководитель с производства / консультант . Шаблон отзыва https : //docs.google.com/document/d/1en39is7quiKPS0C0JZNwsMroB13mCRV8/edit ? usp=sharing & ouid=110155712590252196860 & rtpof=true & sd=true Шаблоны для загруженных руководителей ( если у вас много дипломников и вы не успеваете им подготовить отзывы ) https : //drive.google.com/drive/folders/1Co_H5bVzqVHy-gNCPinO5MYz4fA5DjD2 Оценка 0-5 баллов . Уточнение : если у вас возникают сложности с получением скана подписанного отзыва ДО дедлайна , вы можете написать М.М . Заславскому письмо с текстом отзыва и поставить в копию руководителя ( в качестве замены предоставления скана документа - но и здесь нужно уложится в дедлайн ) . Любые просьбы поставить дату задним числом , пототму что вы не рассчитали дату / накладка и тд ( озвученные после дедлайна ) будут проигнорированы . Пожалуйста , следите за сроками внимательно . Срок сдачи Магистры до 14:00 14.05.24 по Московскому времени . Бакалавры до 14:00 14.05.24 по Московскому времени . Отправка заданий и таблица Отправка заданий через форму - https : //forms.gle/aGZwsCHXYgkZvNtn7 Таблица с успехами - https : //docs.google.com/spreadsheets/d/1xBhHC6xChN3Jpg7de_1RnCvvI9iX5-084CzZHq4IEAI/edit ? resourcekey # gid=722009865 Перевод в пятибальную оценку Баллы за все задания суммируются и образуют десятибалльную оценку , которая переводится в пятибалльную систему по схеме . > = 3.0 & & < 7.0 баллов - “ Удовлетворительно ” > = 7.0 & & < 8.5 баллов - “ Хорошо ” > = 8.5 баллов - “ Отлично ” diplomants/start/diploma_attestation.txt · ",
                "Преддипломная практика ( весенний семестр 4 и 6 курса ) - ",
                "",
                "✎ Преддипломная практика ( весенний семестр 4 и 6 курса )  Дипломникам » Дипломникам » Преддипломная практика ( весенний семестр 4 и 6 курса ) diplomants : start : diploma_attestation This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Преддипломная практика ( весенний семестр 4 и 6 курса ) ====== ===== Обозначения ====== < note > Текст ВКР == Текст диплома == Пояснительная записка == Диплом < /note > ===== Идея ===== Аттестовывать дипломников по критериям , которые продвинут их в выполнении ВКР . Преддипломная практика - учебная активность , специально добавленная в конце весеннего семестра в учебный план для того , чтобы у студентов было формально время активно занятся подготовкой диплома . Смысл преддипломной практики - подготовить все необходимые материалы для выхода на защиту . Оценка вычисляется по сумме баллов за выполненные задания ( разброс 0-10 баллов ) . Просроченные этапы оцениваются с коэффициентом 0.5 . * * Необходимое ( но не достаточное ) условие для получения положительной оценки за преддипломную практику - наличие текста ВКР . При отсутствии - оценка __Неудовлетворительно__ . * * Сдача материалов в [ [ https : //e.moevm.info/course/view.php ? id=39| курсе автоматизированной предзащиты ] ] Общие сроки сдачи ( даты выставления оценок за преддипломную практику == сдаете позже , получаете Неудовлетворительно + недопуск на защиту ) : * Магистры * * до 14:00 14.05.24 по Московскому времени * * . * Бакалавры * * до 14:00 14.05.24 по Московскому времени * * . ===== ВАЖНО ===== Проверяйте , что ссылки , которые вы указываете в форме , доступны без авторизации . ===== Задания ===== ==== Прохождение автоматизированной предзащиты ==== Чтобы этот этап был зачтен , проходите тренировки и загружайте презентации по ссылке ниже : * [ [ https : //e.moevm.info/course/view.php ? id=39 # section-1|Раздел для бакаларов ] ] * [ [ https : //e.moevm.info/course/view.php ? id=39 # section-2|Раздел для магистров ] ] Вам необходимо пройти автоматизированную предзащиту с помощью специального курса на платформе [ [ https : //e.moevm.info/course/view.php ? id=39|e.moevm.info ] ] . Для прохождения вам потребуется микрофон и * * подготовленная презентация для защиты ВКР * * . Рекомендации по подготовке презентации http : //se.moevm.info/doku.php/diplomants : start : slides_checklist_etu В рамках автоматизированной предзащиты вам будет необходимо провести * * три самостоятельные тренировки * * вашего выступления на защите ВКР с презентацией и набрать по их итогам * * полтора балла * * ( в рамках самого задания - баллы e.moevm.info ) . * Основной критерий оценивания - попадание во временной регламент . * Ваша презентация также будет проходить автоматическое оценивание . Если в данной активности вы подготовили качественную презентацию , то это зачтется и для проверки презентаций ( следующий этап допуска к защите ) . * Количество попыток ( одна попытка == три тренировки ) не ограничено , однако , имейте в виду , что время проверки и время оценивания вашей попытки пропорциональны длительности аудио ( время проверки == 0.7 * длительность тренировки ) . Поэтому , коллектив авторов проекта * * настоятельнейшим образом не рекоммендует вам откладывать тренировки на последний момент * * . Детализацию оценок и критерии проверки ваших тренировок можно увидеть в задаче http : //e.moevm.info/mod/lti/view.php ? id=1274 . Проведнные тренировки будут выборочно проверены преподавателями вручную , при обнаружения жульничества ваши баллы будут аннулированы . Оценка 0-2 балла ( вычисляется автоматически по итогам предзащиты - пересчитаем баллы из e.moevm.info в эту шкалу ) . - Если вы набрали в задаче ( на e.moevm.info ) не менее 1.5 балла - вы получаете в таблице 2 балла , - Иначе , вы получаете баллы в таблице по формуле : баллы_в_таблице = баллы_за_задачу * 0,75 Срок сдачи * Магистры * * до 14:00 14.05.24 по Московскому времени * * . * Бакалавры * * до 14:00 14.05.24 по Московскому времени * * . * ==== Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) ==== Предоставьте версию ВКР в формате * * docx * * для автоматической проверки , по * * ссылкам * * ниже * [ [ https : //e.moevm.info/course/view.php ? id=39 # section-1|Раздел для бакаларов ] ] * [ [ https : //e.moevm.info/course/view.php ? id=39 # section-2|Раздел для магистров ] ] Для проверки очень важно , чтобы вы использовали шаблон по [ [ https : //drive.google.com/file/d/1KK7fZkAl9eWNzCQlIHm6S4NynwxhkuV9/view ? usp=share_link|ссылке ] ] ( это не стандартный шаблон ВУЗа ) + чтобы вы корректно использовали стили для оформления работы ( Заголовок 2 для названий глав , Заголовок 3 - для подразделов глав , Заголовок 4 - для подподразделов глав ) . Если использовать неправильный шаблон , то вы получите очень много замечаний и вам придется много исправлять . Также нельзя использовать Google Docs для редактирования - они затирают стили и вам потом придется их вручную по всему документу исправлять . Проверка включает в себя как базовую проверку корректности ( наличие необходимых разделов и структура , оформление текста , количество страниц ) , так и проверка на типовые ошибки по содержанию . Насколько завершенной должна быть пояснительная записка и можно ли будет ее потом исправлять : * В ряде случаев у вас есть возможность вносить исправления в пояснительную записку - это можно понять , сверившись с датой вашей защиты из соотвествующего документа [ [ https : //se.moevm.info/doku.php/diplomants : start| '' Порядок предоставления документов ... '' ] ] . Если у вас дата нормоконтроля стоит позже даты окончания преддипломной практики , значит у вас есть время на доп.правки , в противном случае времени у вас нет . * Документ должен иметь высокую степень готовности : * Готовы все главы ( доп.раздел может быть не готов в полной мере , но автоматическая проверка будет писать замечания и к нему ) * Заполнены все поля шаблона ( выделенные красным ) * Оформление полностью соответствует требованиям * В крайнем случае , можно присылать версию текста ВКР , не согласованную с руководителем ( где не исправлены все замечания ) . * Никаких подписей в тексте ВКР не требуется . Как выглядит алгоритм проверки : * Вы добиваетесь * * полного прохождения автоматической проверки * * ( выполнены все критерии ) . * Только после этого , преподаватель включается в работу и пишет свои замечания в таблице и оценку . * Вы исправляете замечания , загружете материал в автоматическую проверку и процесс повторяется . Оценка 0-3 баллов * 0-2 балла за автоматическую проверку : * если количество набранных баллов системы менее 0.5 , то баллы_в_таблице = 0 * если количество набранных баллов системы более 0.9 , то баллы_в_таблице = 2 * иначе баллы_в_таблице = баллы_системы * 2 * 0-1 балл за проверку преподавателем Какого рода ошибки чаще всего находят преподаватели : * проблемы на первых трех листах ( год , указание должности зав.каф . ( надо указывать зав . каф . МОЭВМ А.А . Лисс ) ) * странности со шрифтами в оглавлении ( слишком большие / маленькие , не TNR ) * мелкие шрифты на рисунках ( если поставить масштаб страницы так , чтобы он соответствовал А4 и при этом вы не можете прочитать текст на рисунке - это проблема . все надписи на всех рисунках должны быть различимы ) * плохо различимые кривые на графиках , отсутствие маркеров ( если кривых на графике больше одной , нужно ставить маркеры разной формы ) * инородные элементы в тексте работы * рисунки не несут полезной нагрузки ( например , скриншоты сайтов , стопкадры с видео ... ) - создают воду * исходный код в основной части ( кроме работ связанных с компиляторами , синтаксическим анализом , инструментам разработки и тд ) - создают воду В качестве даты сдачи задания ( для предотвращения просрочки этапа ) считается //дата первой проверки , для которой баллы_системы > = 0.5// . Срок сдачи * Магистры * * до 23:59 07.05.24 по Московскому времени * * . * Бакалавры * * до 10:00 13.05.24 по Московскому времени * * . ==== Предоставление отзыва руководителя по преддипломной практике ==== Предоставьте ссылку на скан отзыва с подписью и оценкой руководителя . Данный отзыв может подписать как формальный руководитель от ВУЗа , так и руководитель с производства / консультант . Шаблон отзыва https : //docs.google.com/document/d/1en39is7quiKPS0C0JZNwsMroB13mCRV8/edit ? usp=sharing & ouid=110155712590252196860 & rtpof=true & sd=true Шаблоны для загруженных руководителей ( если у вас много дипломников и вы не успеваете им подготовить отзывы ) https : //drive.google.com/drive/folders/1Co_H5bVzqVHy-gNCPinO5MYz4fA5DjD2 Оценка 0-5 баллов . * * Уточнение * * : если у вас возникают сложности с получением скана подписанного отзыва ДО дедлайна , вы можете написать М.М . Заславскому письмо с текстом отзыва и поставить в копию руководителя ( в качестве замены предоставления скана документа - но и здесь нужно уложится в дедлайн ) . Любые просьбы поставить дату задним числом , пототму что вы не рассчитали дату / накладка и тд ( * * озвученные после дедлайна * * ) будут проигнорированы . Пожалуйста , следите за сроками внимательно . Срок сдачи * Магистры * * до 14:00 14.05.24 по Московскому времени * * . * Бакалавры * * до 14:00 14.05.24 по Московскому времени * * . ===== Отправка заданий и таблица ===== Отправка заданий через форму - https : //forms.gle/aGZwsCHXYgkZvNtn7 Таблица с успехами - https : //docs.google.com/spreadsheets/d/1xBhHC6xChN3Jpg7de_1RnCvvI9iX5-084CzZHq4IEAI/edit ? resourcekey # gid=722009865 ===== Перевод в пятибальную оценку ===== Баллы за все задания суммируются и образуют десятибалльную оценку , которая переводится в пятибалльную систему по схеме . * > = 3.0 & & < 7.0 баллов - `` Удовлетворительно '' * > = 7.0 & & < 8.5 баллов - `` Хорошо '' * > = 8.5 баллов - `` Отлично '' diplomants/start/diploma_attestation.txt · ",
                "Преддипломная практика ( весенний семестр 4 и 6 курса ) - Old revisions  Дипломникам » Дипломникам » Преддипломная практика ( весенний семестр 4 и 6 курса ) diplomants : start : diploma_attestation Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/21 15:53 Преддипломная практика ( весенний семестр 4 и 6 курса ) mark +255 B ( current ) 2024/02/21 14:53 Преддипломная практика ( весенний семестр 4 и 6 курса ) mark +17 B 2024/02/21 12:53 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление отзыва руководителя по преддипломной практике ] mark ±0 B 2024/02/21 12:52 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Прохождение автоматизированной предзащиты ] mark -1 B 2024/02/21 12:52 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Идея ] mark ±0 B 2024/02/21 08:24 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Прохождение автоматизированной предзащиты ] mark ±0 B 2024/02/21 08:24 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление отзыва руководителя по преддипломной практике ] mark ±0 B 2024/02/21 08:23 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) ] mark ±0 B 2024/02/21 08:23 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Идея ] mark ±0 B 2024/02/21 06:59 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Прохождение автоматизированной предзащиты ] mark ±0 B 2024/02/19 12:21 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Отправка заданий и таблица ] mark +11 B 2024/02/15 13:44 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) ] mark -12 B 2023/05/12 14:57 Преддипломная практика ( весенний семестр 4 и 6 курса ) mark +200 B 2023/05/10 08:19 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Прохождение автоматизированной предзащиты ] mark +4 B 2023/05/10 08:16 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Идея ] mark +123 B 2023/05/05 15:12 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) ] mark +260 B 2023/05/05 15:07 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление финального текста ВКР ( готового для проверки на антиплагиат ) ] mark +185 B 2023/05/05 08:41 Преддипломная практика ( весенний семестр 4 и 6 курса ) mark +1.1 KB 2023/05/04 10:55 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление отзыва руководителя по преддипломной практике ] mark +212 B 2023/05/04 00:03 Преддипломная практика ( весенний семестр 4 и 6 курса ) dmitry.ivanov +426 B 2023/04/25 07:34 Преддипломная практика ( весенний семестр 4 и 6 курса ) – [ Предоставление отзыва руководителя по преддипломной практике ] mark -356 B Show differences between selected revisions less recent > > diplomants/start/diploma_attestation.txt · ",
                "Преддипломная практика ( весенний семестр 4 и 6 курса ) - "
            ]
        },
        {
            "name": "Допуск до защиты ВКР (проверка демонстрационных материалов)",
            "url": "/doku.php/diplomants:start:slides_checklist_etu",
            "date": "\"2023/05/30 08:47\"",
            "data": [
                "Требования к презентациям для защиты и видео доклада  Дипломникам » Дипломникам » Требования к презентациям для защиты и видео доклада diplomants : start : slides_checklist_etu Table of Contents Требования к презентациям для защиты и видео доклада Записи консультаций по подготовке презентаций Форма отправки материалов Таблица успехов Рекомендуемый шаблон оформления презентации Как проходит проверка презентаций Сроки и дедлайны Оценка по итогам проверки Критерии проверки презентаций Что любит спрашивать комиссия и как не подставить себя в слайдах Указания по подготовке видео доклада Ответы на часто задаваемые вопросы Инструкция для проверяющих Требования к презентациям для защиты и видео доклада Записи консультаций по подготовке презентаций https : //www.youtube.com/playlist ? list=PLplYTvoIyfooopbvPn3RcX4hBD2FPiaKc Форма отправки материалов Отправляйте презентации ( и исправления ) в соответствующей активности http : //e.moevm.info/course/view.php ? id=54 Таблица успехов https : //docs.google.com/spreadsheets/d/1YbHU3Z3K4_lnYYVXOv35z_VFoVSE0Np4A8uA-3G_twg/edit ? resourcekey # gid=145597525 Рекомендуемый шаблон оформления презентации https : //docs.google.com/presentation/d/19lLrLoUcOrpjdUezDD4u0mmUdAXcErRczm8WCSYDHJs/edit ? usp=sharing Как проходит проверка презентаций В этом учебном году мы еще немного автоматизировали процедуру допуска студентов к защитам дипломных работ . Для того , чтобы получить допуск на защиту вам необходимо : В курсе http : //e.moevm.info/course/view.php ? id=54 загрузить вашу презентацию и добиейтесь того , чтобы автоматизированная проверка презентаций присудила вам не менее 0.9 балл ( == выполнение 13/14 критериев ) . Это количество баллов автоматически означает допуск на защиту с формулировкой Презентация допущена к защите с рекомендацией комиссии снизить оценку . Меньшее количество баллов означает оценку Презентация не допущена к защите . Чтобы преподаватели успели вас проверить ( в ином случае проверка не гарантируется ) , просим соблюдать сроки отправок . После того , как вы пройдете предыдущий шаг , преподаватель ответственный за вашу проверку получит уведомление и напишет в таблице ( ссылка выше ) свой вердикт . Если с презентацией все хорошо , то вам ставится оценка Презентация допущена к защите и для вас процедура допуска успешно завершена . Если по содержанию презентации будут замечания , то преподаватель оставит их в таблице и вам надо будет повторно загрузить исправленнную презентацию в курс Результаты проверки презентации из Преддипломной практики ( http : //se.moevm.info/doku.php/diplomants : start : diploma_attestation # % D0 % BF % D1 % 80 % D0 % BE % D1 % 85 % D0 % BE % D0 % B6 % D0 % B4 % D0 % B5 % D0 % BD % D0 % B8 % D0 % B5_ % D0 % B0 % D0 % B2 % D1 % 82 % D0 % BE % D0 % BC % D0 % B0 % D1 % 82 % D0 % B8 % D0 % B7 % D0 % B8 % D1 % 80 % D0 % BE % D0 % B2 % D0 % B0 % D0 % BD % D0 % BD % D0 % BE % D0 % B9_ % D0 % BF % D1 % 80 % D0 % B5 % D0 % B4 % D0 % B7 % D0 % B0 % D1 % 89 % D0 % B8 % D1 % 82 % D1 % 8B ) будут учтены . Пожалуйста , не откладывайте на последний момент получение допуска ! На всякий случай - фраза “ Это будет сказано в речи ” не годится в качестве исправления для замечания : ) Ваша презентация как документ должна максимально понятно доносить суть работы до комиссии и без вашей речи . Оценку можно улучшить путем исправления замечаний . Добавлять запасные слайды после пройденной проверки МОЖНО . Не пройденый контроль презентации может быть основанием для недопуска на защиту ! Сроки и дедлайны Вам необходимо пройти контроль не позднее чем за один рабочий день до даты вашей защиты . Оценка по итогам проверки По результатам оценивания вы можете получить один из трех вердиктов : Презентация допущена к защите - выполнены все критерии из раздела “ Содержание слайдов ” и “ Оформление слайдов ” . Презентация допущена к защите с рекомендацией комиссии снизить оценку - выполнены все критерии из раздела “ Содержание слайдов ” , критерии “ Оформление слайдов ” выполнены лишь частично . Презентация не допущена к защите - прочие случаи . Критерии проверки презентаций Содержание слайдов Критерии проверки : Количество основных слайдов - бакалавры : не более 12 , магистры : не более 15 ( +/- 2 слайда допускается в исключительных случаях ) . Основные слайды - это все слайды , идущие до слайда с заголовком “ Запасны слайды ” . Все слайды , кроме титульного должны иметь номера в правом нижнем углу . Заголовки слайдов занимают не более двух строк . Есть титульный слайд на котором указаны : тема работы ФИО автора , группа ФИО руководителя , должность , ученая степень ( если есть ) ФИО консультанта , должность , ученая степень , название огранизации На одном из слайдов в начале презентации описывается актуальность работы . Есть слайд « Цель и задачи » на котором написана цель работ и список задач ( 3-5 штук ) , для достижения указанной цели . На каждую задачу ( и достигнутый по ней результат ) есть отдельный слайд или слайды , которые его демонстрируют . Заголовки слайдов , демонстрирующих результат должны быть такими , чтобы была понятна связь между элементами списка и демонстрирующим его слайдом ( ми ) . Если формулировка задачи по тексту презентации встречается только два раза ( слайд Задачи и слайд Заключение ) , то эта задача в работе не решена . Есть слайд “ Апробация работы ” , где приведены ( в зависимости от того , каких результатов вы достигли ) библиографические ссылки на опубликованные статьи / информация о докладах на конференциях и семинарах , участие в конкурсах/грантах с дипломным проектом , ссылки на репозиторий ( если он открытый ) или ссылки на работающую / опубликованное в Интернет приложение ( если исходный код недоступен ) , ссылки на докер-образ ( или иной аналогичный пакет ) , информация о внедрении ( где , когда , кем , акты если есть ) - http : //odiplom.ru/lab/akt-o-vnedrenii.html . Есть слайд “ Заключение ” , в котором кратко приводятся основные результаты решения каждой задачи со слайда « Цель и задачи » , приведены направления дальнейшей разработки или улучшения программы . В работе используется сквозная терминология - не допускается использовать разные понятия для обозначения ваших результатов . Система / программа / программная система / программный комплекс / прототип / метод / алгоритм / приложение это разные вещи ! Скриншоты разработанной системы занимают не более одного основного слайда . Указанные в презентации ссылки корректно открываются . Ссылки на ваши результаты ( репо , докер… ) содержат ваши результаты : ) Дополнительные требования для студентов ПИ и ПМ , в работе которых есть разработка ПО : Если тема вашей работы - разработка ИГРЫ , то в слайдах должно быть максимум деталей о разработке , технически сложных задачах и тд . Вопросы ( гейм ) дизайна , сюжета , и прочие вещи , не относящиеся к специальности ( а они не относятся ) , должны занимать не более одного основного слайда . В работе есть слайд , иллюстрирующий наличие программной разработки , например схема архитектуры системы ( используйте UML ) , диаграмма используемых классов и т.д . В работе есть слайд , где явно указаны используемые технологии вашего решения ( какие языки программирования , библиотеки , фреймворки , стандарты ) . В презентации допускается ( и приветствуется ) использование “ запасных ” слайдов , расположенных после слайда с заголовком “ Запасные слайды ” с ответами на возможные вопросы и дополнительными материалами , которые не входят в основную часть ( таблицы , графики и тд ) . Оформление слайдов В презентации отсутствуют личные местоимения 1 и 2ого лица ( я , мы , наш , наши , нами - https : //ru.wikipedia.org/wiki/Личные_местоимения ) и весь текст написан в безличной форме ( “ Было разработано ” , “ Исследование показало ” ) . Если в абзаце одно предложение , то ставить точку не нужно . На всех слайдах используется белый либо светлый фон ( критерий проверки - презентация должна хорошо отображаться при низкой контрастности ) . Шрифты : Цвета шрифтов максимально контрастные . В тексте слайдов используется не более 3 типов шрифта . Таблицы Если количество ячеек больше 36 , то необходимо заменить на график/диаграмму или вынести в запасные слайды . Присутствует заголовок , единицы измерения величин в колонках . Изображения Изображения используют контрастную цветовую гамму . Изображения не замылены , имеют высокое разрешение ( мелкие детали различимы ) . Схемы : Блок-схемы должны приводиться в вертикальном виде , либо в виде псевдокода . Схемы с большой детализацией должны иметь визуальное выделение ( цветом , линией ) наиболее важных элементов/областей/связей . Графики и диаграммы Указаны названия осей , единицы измерений , легенда ( названия кривых ) , название графика , сетка при необходимости . Кривые отдельных зависимостей различимы и не сливаются . Формулы Набраны с помощью специальных инструментов ( MathType , LaTex ) . Параметрам из формулы даны пояснения под формулой . Подписи к изображениям / таблицам / схемам Если на слайде несколько подобных объектов , то необходимо добавить подписи , либо обозначения ( рисунок 1 , таблица Б ) . Если на слайде всего один подобный объект , то его можно не подписывать при условии , что заголовок слайда содержит его название . В презентации отсутствуют орфографические ошибки . Что любит спрашивать комиссия и как не подставить себя в слайдах Что любят спрашивать Практически в любой теме комиссию сильно интересует есть ли аналоги и какие ( а они есть всегда ) ; чем ваше решение от них отличается ; Если тема не сказать , что очень понятная ( 95 % наших тем ) , комиссии будет интересно : для каких еще задач можно применить ваши результаты ( смежные области и отрасли ) ; в чем практическая значимость вашего решения ( что станет лучше на практике - например , система будет работать быстрее / точнее … . ) ; Если в работе упоминаются алгоритмы , то комиссия захочет узнать их сложность . Если вы проводили эксперименты , то комиссии станет интересно , в каких условиях вы провели измерения ( характеристики компьютера ) , как обработали данные , а также - как они сопоставляются с аналогами . Если в ходе экспериментов , вы измеряли точность работы чего-то , то комиссии будет интересно узнать , как выглядят ошибочные случаи работы системы и чем можно их объяснить . Если вы делаете систему для массового пользователя ( например , ПО для студентов ) , комиссию заинтересуют вопросы системных требований для сервера / устройства , где ваше ПО будет работать ( например , сколько потребуется памяти на 1000 пользователей … . ) ; вопросов кроссплатформенности ( например , вы пишите мобильное приложение для студентов на Android - вопрос в том , как обеспечить его доступность на IOS ) ; Если у вас есть слово ТЕСТИРОВАНИЕ , используйте его правильно . ТЕСТИРОВАНИЕ это в первую очередь написание тестов , остальные варианты проверки корректности / качества работы программы им не являются , например - измерения точности / производительности / пропускной способности и тд . Если по каким-то причинам , в вашей работе есть опрос пользователей или аналогичная активность ( например , оценка удобства ) , то вам необходим слайд с описанием процедуры опроса : список участников , статистика по полу , возрасту технология опроса ( что они делали , как их опрашивали … . ) Советы : Если тема вашего диплома включает в себя разработку ИГРЫ : Излагайте те аспекты разработки , которые ИМЕЮТ ОТНОШЕНИЕ К СПЕЦИАЛЬНОСТИ . Например , геймдизайн , игровые механики , визуальная и аудио составляющая - не имеют отношения и только отнимают у комиссии время . А вот если вы придумали свои алгоритмы / методы для генерации уровней , алгоритмы анимации , словом что-то имеющее ТЕХНИЧЕСКУЮ / МАТЕМАТИЧЕСКУЮ сложность - вот это уже интересно . Старайтесь в обзоре аналогов рассматривать именно конкурентов за решение проблемы ( алгоритмы , фреймворки , движки ) , а не другие игры подобных жанров . Помните , что фокус нашей кафедры это не геймдев , а программное и математическое обеспечение : ) Указания по подготовке видео доклада Не актуально ! Как записывать видео : Zoom Убедитесь , что у вас включена опция “ Record thumbnails when sharing ” https : //go.zoom.us/profile/setting ? tab=recording Создайте митинг . Включите микрофон , видео , расшарьте экран ( это необходимо сделать до начала записи ) . Нажмите кнопку Record . Выполните доклад . Завершите митинг . Дождитесь сохранения видео . https : //obsproject.com/ Требования к видео : Видео выложено на Google Drive или Яндекс Диск . На момент отправки видео можно просматривать по ссылке ( видео полностью обработано сервисом ) . На видео одновременно отображается и презентация , и видео с веб-камеры . Голова докладчика постоянно в кадре , лицо отчетливо видно . Повседневно деловой ( или более официальный ) стиль одежды . Избегайте одежды в полоску и клетку - она очень плохо смотрится в кадре . В кадре присутствует только один человек ( докладчик ) . Докладчик не читает , а говорит своими словами . Докладчика отчетливо слышно , нет посторонних звуков . Рекомендованная длительность видео 8-10 минут . В видео отсутствует монтаж ( можно обрезать ролик в начале и в конце ) . Советы как сократить длительность видео : Ускорьте на 1.05 ( но не больше ) . Не здоровайтесь с комиссией , не озвучивайте ваше имя и фамилию , руководителя , группу . Сократите время на слайде с обзором - не перечисляйте каждый из аналогов , сосредоточтесь на общих выводах из обзора . Не читайте все результаты из апробации - озвучьте один самый важный . Ответы на часто задаваемые вопросы Что делать , если задач в ВКР меньше 4 / больше 5 ? Задачи в презентации не должны дословно повторять задачи из ВКР . Поэтому вы можете их объединить / сжать ( например , заменить две задачи одной более общей формулировкой ) . Что делать , если слайдов получилось больше требуемого количества и непонятно как их ужимать ? С высокой вероятностью можно избавиться от : Исторической справки , Примеров кода , Переносите , все что не нужно в дополнительные слайды . Инструкция для проверяющих Выбираем очередную работу сверху списка на листе “ Порядок ” Открываем по ссылке из колонки “ Слайды ” саму работу в системе проверки Оцениваем выполнение критериев к содержанию и оформлению . Критерии содержания первичны , среди них наиболее приоритетны критерии однозначного и явного раскрытия задач . Подробно об оценивании написано в данном документе выше . Пишем комментарии / замечания на листе “ Оценки ” в колонке “ Комментарий ” Выставляем оценку на лист “ Оценки ” , колонка “ Оценка презентация ” Если работа была уже проверена системой на баллы > 0.9 и в “ Оценке ” стоит “ Допущен с рекомендацией … ” , то оценку снижаем только в случаях , когда презентация и правда не дотягивает до уровня выхода на защиту Выделяем соответствующую ячейку в колонке “ Дата проверки ” и нажимаем CTRL+ ; чтобы в этой ячейке появились текущие дата и время Наша задача в процессе проверки - помочь с презентацией и подачей материалов на защите ( усилить понятность и положительное впечатление ) , а не переделать диплом ( на это времени нет ) . diplomants/start/slides_checklist_etu.txt · ",
                "Требования к презентациям для защиты и видео доклада - ",
                "",
                "✎ Требования к презентациям для защиты и видео доклада  Дипломникам » Дипломникам » Требования к презентациям для защиты и видео доклада diplomants : start : slides_checklist_etu This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ===== Требования к презентациям для защиты и видео доклада ===== ==== Записи консультаций по подготовке презентаций ==== https : //www.youtube.com/playlist ? list=PLplYTvoIyfooopbvPn3RcX4hBD2FPiaKc ==== Форма отправки материалов ==== Отправляйте презентации ( и исправления ) в соответствующей активности http : //e.moevm.info/course/view.php ? id=54 ==== Таблица успехов ==== https : //docs.google.com/spreadsheets/d/1YbHU3Z3K4_lnYYVXOv35z_VFoVSE0Np4A8uA-3G_twg/edit ? resourcekey # gid=145597525 ==== Рекомендуемый шаблон оформления презентации ==== https : //docs.google.com/presentation/d/19lLrLoUcOrpjdUezDD4u0mmUdAXcErRczm8WCSYDHJs/edit ? usp=sharing ==== Как проходит проверка презентаций ==== В этом учебном году мы еще немного автоматизировали процедуру допуска студентов к защитам дипломных работ . Для того , чтобы получить допуск на защиту вам необходимо : - В курсе http : //e.moevm.info/course/view.php ? id=54 загрузить вашу презентацию и добиейтесь того , чтобы автоматизированная проверка презентаций присудила вам не менее * * 0.9 балл * * ( == выполнение 13/14 критериев ) . Это количество баллов автоматически означает допуск на защиту с формулировкой * * Презентация допущена к защите с рекомендацией комиссии снизить оценку * * . Меньшее количество баллов означает оценку * * Презентация не допущена к защите * * . Чтобы преподаватели успели вас проверить ( в ином случае проверка не гарантируется ) , просим соблюдать * * сроки отправок * * . - После того , как вы пройдете предыдущий шаг , преподаватель ответственный за вашу проверку получит уведомление и напишет в * * таблице ( ссылка выше ) * * свой вердикт . - Если с презентацией все хорошо , то вам ставится оценка * * Презентация допущена к защите * * и для вас процедура допуска успешно завершена . - Если по содержанию презентации будут замечания , то преподаватель оставит их в таблице и вам надо будет повторно загрузить исправленнную презентацию в курс Результаты проверки презентации из Преддипломной практики ( http : //se.moevm.info/doku.php/diplomants : start : diploma_attestation # % D0 % BF % D1 % 80 % D0 % BE % D1 % 85 % D0 % BE % D0 % B6 % D0 % B4 % D0 % B5 % D0 % BD % D0 % B8 % D0 % B5_ % D0 % B0 % D0 % B2 % D1 % 82 % D0 % BE % D0 % BC % D0 % B0 % D1 % 82 % D0 % B8 % D0 % B7 % D0 % B8 % D1 % 80 % D0 % BE % D0 % B2 % D0 % B0 % D0 % BD % D0 % BD % D0 % BE % D0 % B9_ % D0 % BF % D1 % 80 % D0 % B5 % D0 % B4 % D0 % B7 % D0 % B0 % D1 % 89 % D0 % B8 % D1 % 82 % D1 % 8B ) будут учтены . Пожалуйста , не откладывайте на последний момент получение допуска ! На всякий случай - фраза `` Это будет сказано в речи '' не годится в качестве исправления для замечания : ) Ваша презентация как документ должна максимально понятно доносить суть работы до комиссии и без вашей речи . Оценку можно улучшить путем исправления замечаний . Добавлять запасные слайды после пройденной проверки * * МОЖНО * * . * * Не пройденый контроль презентации может быть основанием для недопуска на защиту ! * * ==== Сроки и дедлайны ==== Вам необходимо __ * * пройти * * __ контроль не позднее чем за __ * * один рабочий день до даты вашей защиты * * __ . ==== Оценка по итогам проверки ==== По результатам оценивания вы можете получить один из трех вердиктов : * * * Презентация допущена к защите * * - выполнены все критерии из раздела `` Содержание слайдов '' и `` Оформление слайдов '' . * * * Презентация допущена к защите с рекомендацией комиссии снизить оценку * * - выполнены все критерии из раздела `` Содержание слайдов '' , критерии `` Оформление слайдов '' выполнены лишь частично . * * * Презентация не допущена к защите * * - прочие случаи . ==== Критерии проверки презентаций ==== === Содержание слайдов === Критерии проверки : - Количество основных слайдов - * * бакалавры : не более 12 * * , * * магистры : не более 15 * * ( +/- 2 слайда допускается в исключительных случаях ) . Основные слайды - это все слайды , идущие до слайда с заголовком `` Запасны слайды '' . - Все слайды , кроме титульного * * должны иметь номера в правом нижнем углу * * . - Заголовки слайдов занимают не более двух строк . - Есть * * титульный слайд * * на котором указаны : - тема работы - ФИО автора , группа - ФИО руководителя , должность , ученая степень - ( если есть ) ФИО консультанта , должность , ученая степень , название огранизации - На одном из слайдов в начале презентации описывается * * актуальность * * работы . - Есть слайд * * « Цель и задачи » * * на котором написана цель работ и список задач ( 3-5 штук ) , для достижения указанной цели . - __ * * На каждую задачу ( и достигнутый по ней результат ) есть отдельный слайд или слайды , которые его демонстрируют * * __ . Заголовки слайдов , демонстрирующих результат должны быть такими , чтобы была понятна связь между элементами списка и демонстрирующим его слайдом ( ми ) . Если формулировка задачи по тексту презентации встречается только два раза ( слайд Задачи и слайд Заключение ) , то эта задача в работе не решена . - Есть слайд * * '' Апробация работы '' * * , где приведены ( в зависимости от того , каких результатов вы достигли ) - библиографические ссылки на опубликованные статьи / информация о докладах на конференциях и семинарах , - участие в конкурсах/грантах с дипломным проектом , - ссылки на репозиторий ( если он * * открытый * * ) или ссылки на работающую / опубликованное в Интернет приложение ( если исходный код недоступен ) , - ссылки на докер-образ ( или иной аналогичный пакет ) , - информация о внедрении ( где , когда , кем , акты если есть ) - http : //odiplom.ru/lab/akt-o-vnedrenii.html . - Есть слайд * * '' Заключение '' * * , в котором - кратко приводятся основные результаты решения каждой задачи со слайда * * « Цель и задачи » * * , - приведены направления дальнейшей разработки или улучшения программы . - В работе используется * * сквозная терминология * * - не допускается использовать разные понятия для обозначения ваших результатов . Система / программа / программная система / программный комплекс / прототип / метод / алгоритм / приложение это разные вещи ! - * * Скриншоты * * * * разработанной системы занимают не более одного основного слайда * * . - Указанные в презентации ссылки корректно открываются . Ссылки на ваши результаты ( репо , докер ... ) содержат ваши результаты : ) Дополнительные требования для студентов ПИ и ПМ , в работе которых есть разработка ПО : - Если тема вашей работы - разработка ИГРЫ , то в слайдах должно быть максимум деталей о разработке , технически сложных задачах и тд . Вопросы ( гейм ) дизайна , сюжета , и прочие вещи , не относящиеся к специальности ( а они не относятся ) , должны занимать не более одного основного слайда . - В работе есть слайд , иллюстрирующий наличие программной разработки , например * * схема архитектуры системы * * ( используйте UML ) , * * диаграмма используемых классов * * и т.д . - В работе есть слайд , где явно указаны используемые технологии вашего решения ( какие языки программирования , библиотеки , фреймворки , стандарты ) . В презентации * * допускается ( и приветствуется ) использование `` запасных '' слайдов * * , расположенных после слайда с заголовком `` Запасные слайды '' с ответами на возможные вопросы и дополнительными материалами , которые не входят в основную часть ( таблицы , графики и тд ) . === Оформление слайдов === - * * В презентации отсутствуют личные местоимения 1 и 2ого лица * * ( я , мы , наш , наши , нами - [ [ https : //ru.wikipedia.org/wiki/Личные_местоимения ] ] ) и весь * * текст написан в безличной форме * * ( `` Было разработано '' , `` Исследование показало '' ) . - Если в абзаце одно предложение , то ставить точку не нужно . - На всех слайдах используется белый либо светлый фон ( критерий проверки - презентация должна хорошо отображаться при низкой контрастности ) . - Шрифты : - Цвета шрифтов максимально контрастные . - В тексте слайдов используется не более 3 типов шрифта . - Таблицы - Если количество ячеек больше 36 , то необходимо заменить на график/диаграмму или вынести в запасные слайды . - Присутствует заголовок , единицы измерения величин в колонках . - Изображения - Изображения используют контрастную цветовую гамму . - Изображения не замылены , имеют высокое разрешение ( мелкие детали различимы ) . - Схемы : - Блок-схемы должны приводиться в вертикальном виде , либо в виде псевдокода . - Схемы с большой детализацией должны иметь визуальное выделение ( цветом , линией ) наиболее важных элементов/областей/связей . - Графики и диаграммы - Указаны названия осей , единицы измерений , легенда ( названия кривых ) , название графика , сетка при необходимости . - Кривые отдельных зависимостей различимы и не сливаются . - Формулы - Набраны с помощью специальных инструментов ( MathType , LaTex ) . - Параметрам из формулы даны пояснения под формулой . - Подписи к изображениям / таблицам / схемам - Если на слайде несколько подобных объектов , то необходимо добавить подписи , либо обозначения ( рисунок 1 , таблица Б ) . - Если на слайде всего один подобный объект , то его можно не подписывать при условии , что заголовок слайда содержит его название . - В презентации отсутствуют орфографические ошибки . ==== Что любит спрашивать комиссия и как не подставить себя в слайдах ==== Что любят спрашивать - Практически в любой теме комиссию сильно интересует - есть ли аналоги и какие ( а они есть всегда ) ; - чем ваше решение от них отличается ; - Если тема не сказать , что очень понятная ( 95 % наших тем ) , комиссии будет интересно : - для каких еще задач можно применить ваши результаты ( смежные области и отрасли ) ; - в чем практическая значимость вашего решения ( что станет лучше на практике - например , система будет работать быстрее / точнее .... ) ; - Если в работе упоминаются алгоритмы , то комиссия захочет узнать их сложность . - Если вы проводили эксперименты , то комиссии станет интересно , в каких условиях вы провели измерения ( характеристики компьютера ) , как обработали данные , а также - как они сопоставляются с аналогами . - Если в ходе экспериментов , вы измеряли точность работы чего-то , то комиссии будет интересно узнать , как выглядят ошибочные случаи работы системы и чем можно их объяснить . - Если вы делаете систему для массового пользователя ( например , ПО для студентов ) , комиссию заинтересуют вопросы - системных требований для сервера / устройства , где ваше ПО будет работать ( например , сколько потребуется памяти на 1000 пользователей .... ) ; - вопросов кроссплатформенности ( например , вы пишите мобильное приложение для студентов на Android - вопрос в том , как обеспечить его доступность на IOS ) ; - Если у вас есть слово ТЕСТИРОВАНИЕ , используйте его правильно . ТЕСТИРОВАНИЕ это в первую очередь написание тестов , остальные варианты проверки корректности / качества работы программы им не являются , например - измерения точности / производительности / пропускной способности и тд . - Если по каким-то причинам , в вашей работе есть опрос пользователей или аналогичная активность ( например , оценка удобства ) , то вам необходим слайд с описанием процедуры опроса : - список участников , статистика по полу , возрасту - технология опроса ( что они делали , как их опрашивали .... ) Советы : - Если тема вашего диплома включает в себя разработку ИГРЫ : - Излагайте те аспекты разработки , которые ИМЕЮТ ОТНОШЕНИЕ К СПЕЦИАЛЬНОСТИ . Например , геймдизайн , игровые механики , визуальная и аудио составляющая - не имеют отношения и только отнимают у комиссии время . А вот если вы придумали свои алгоритмы / методы для генерации уровней , алгоритмы анимации , словом что-то имеющее ТЕХНИЧЕСКУЮ / МАТЕМАТИЧЕСКУЮ сложность - вот это уже интересно . - Старайтесь в обзоре аналогов рассматривать именно конкурентов за решение проблемы ( алгоритмы , фреймворки , движки ) , а не другие игры подобных жанров . Помните , что фокус нашей кафедры это не геймдев , а программное и математическое обеспечение : ) ==== Указания по подготовке видео доклада ==== Не актуально ! Как записывать видео : - Zoom - Убедитесь , что у вас включена опция `` Record thumbnails when sharing '' https : //go.zoom.us/profile/setting ? tab=recording - Создайте митинг . - Включите микрофон , видео , расшарьте экран ( это необходимо сделать до начала записи ) . - Нажмите кнопку Record . - Выполните доклад . - Завершите митинг . - Дождитесь сохранения видео . - https : //obsproject.com/ Требования к видео : - Видео выложено на * * Google Drive * * или * * Яндекс Диск * * . - На момент отправки видео можно просматривать по ссылке ( * * видео полностью обработано сервисом * * ) . - На видео одновременно отображается * * и презентация , и видео с веб-камеры * * . - Голова докладчика постоянно в кадре , * * лицо отчетливо видно * * . - * * Повседневно деловой * * ( или более официальный ) стиль одежды . * * Избегайте одежды в полоску и клетку * * - она очень плохо смотрится в кадре . - В кадре присутствует * * только один человек * * ( докладчик ) . - * * Докладчик не читает * * , а говорит своими словами . - Докладчика * * отчетливо слышно * * , нет посторонних звуков . - Рекомендованная длительность видео * * 8-10 минут * * . - В видео * * отсутствует монтаж * * ( можно обрезать ролик в начале и в конце ) . Советы как сократить длительность видео : - Ускорьте на 1.05 ( но не больше ) . - Не здоровайтесь с комиссией , не озвучивайте ваше имя и фамилию , руководителя , группу . - Сократите время на слайде с обзором - не перечисляйте каждый из аналогов , сосредоточтесь на общих выводах из обзора . - Не читайте все результаты из апробации - озвучьте один самый важный . ==== Ответы на часто задаваемые вопросы ==== - Что делать , если задач в ВКР меньше 4 / больше 5 ? - Задачи в презентации не должны дословно повторять задачи из ВКР . Поэтому вы можете их объединить / сжать ( например , заменить две задачи одной более общей формулировкой ) . - Что делать , если слайдов получилось больше требуемого количества и непонятно как их ужимать ? - С высокой вероятностью можно избавиться от : - Исторической справки , - Примеров кода , - Переносите , все что не нужно в дополнительные слайды . ==== Инструкция для проверяющих ==== - Выбираем очередную работу сверху списка на листе `` Порядок '' - Открываем по ссылке из колонки `` Слайды '' саму работу в системе проверки - Оцениваем выполнение критериев к содержанию и оформлению . Критерии содержания первичны , среди них наиболее приоритетны критерии однозначного и явного раскрытия задач . Подробно об оценивании написано в данном документе выше . - Пишем комментарии / замечания на листе `` Оценки '' в колонке `` Комментарий '' - Выставляем оценку на лист `` Оценки '' , колонка `` Оценка презентация '' - Если работа была уже проверена системой на баллы > 0.9 и в `` Оценке '' стоит `` Допущен с рекомендацией ... '' , то оценку снижаем только в случаях , когда презентация и правда не дотягивает до уровня выхода на защиту - Выделяем соответствующую ячейку в колонке `` Дата проверки '' и нажимаем CTRL+ ; чтобы в этой ячейке появились текущие дата и время Наша задача в процессе проверки - помочь с презентацией и подачей материалов на защите ( усилить понятность и положительное впечатление ) , а не переделать диплом ( на это времени нет ) . diplomants/start/slides_checklist_etu.txt · ",
                "Требования к презентациям для защиты и видео доклада - Old revisions  Дипломникам » Дипломникам » Требования к презентациям для защиты и видео доклада diplomants : start : slides_checklist_etu Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/05/30 08:47 Требования к презентациям для защиты и видео доклада mark +37 B ( current ) 2023/05/22 08:58 Требования к презентациям для защиты и видео доклада mark +1.9 KB 2023/05/18 14:09 Требования к презентациям для защиты и видео доклада – [ Как проходит проверка презентаций ] mark -228 B 2023/05/18 14:08 Требования к презентациям для защиты и видео доклада – [ Форма отправки материалов ] mark -5 B 2023/05/18 08:12 Требования к презентациям для защиты и видео доклада – [ Как проходит проверка презентаций ] mark ±0 B 2023/05/18 07:15 Требования к презентациям для защиты и видео доклада mark -1 B 2023/05/16 07:13 Требования к презентациям для защиты и видео доклада – [ Таблица успехов ] mark -2 B 2023/05/16 07:09 Требования к презентациям для защиты и видео доклада – [ Форма отправки материалов ] mark -1 B 2022/12/10 09:08 Требования к презентациям для защиты и видео доклада – external edit 127.0.0.1 ±0 B 2022/07/05 07:40 Требования к презентациям для защиты и видео доклада – [ Черновик нового алгоритма проверки ] mark -76 B 2022/06/10 13:37 Требования к презентациям для защиты и видео доклада mark +227 B 2022/06/06 07:40 Требования к презентациям для защиты и видео доклада – [ Как проходит проверка презентаций ] mark +115 B 2022/05/26 08:30 Требования к презентациям для защиты и видео доклада mark +221 B 2022/05/19 13:44 Требования к презентациям для защиты и видео доклада – [ Форма отправки материалов ] mark +1 B 2022/05/19 13:44 Требования к презентациям для защиты и видео доклада mark +350 B 2022/04/27 14:16 Требования к презентациям для защиты и видео доклада mark +62 B 2022/04/27 14:13 Требования к презентациям для защиты и видео доклада – [ Как проходит проверка презентаций и видео ] mark +408 B 2022/04/27 14:10 Требования к презентациям для защиты и видео доклада mark -985 B 2022/04/27 14:09 Требования к презентациям для защиты и видео доклада mark +26 B 2022/04/05 07:38 Требования к презентациям для защиты и видео доклада mark +59 B 2022/01/13 08:19 Требования к презентациям для защиты и видео доклада – [ Черновик нового алгоритма проверки ] mark +254 B Show differences between selected revisions less recent > > diplomants/start/slides_checklist_etu.txt · ",
                "Требования к презентациям для защиты и видео доклада - "
            ]
        }
    ],
    "5 курс": [
        {
            "name": "Машинное обучение",
            "url": "/doku.php/courses:ml",
            "date": "\"2023/09/15 12:49\"",
            "data": []
        },
        {
            "name": "Технологии автоматизации разработки ПО",
            "url": "/doku.php/courses:devops",
            "date": "\"2024/02/09 15:29\"",
            "data": [
                "Технологии автоматизации разработки ПО  Курсы » Технологии автоматизации разработки ПО courses : devops Table of Contents Технологии автоматизации разработки ПО Коммуникация и начало работы Материалы курса Технологии автоматизации разработки ПО Коммуникация и начало работы Ответы на вопросы , анонсы и общение - на discord-сервере https : //discord.gg/bcCUayk48t Регистрация на курс https : //forms.gle/ruDTxdK2b1GXqSGy9 Материалы курса Презентации лекций Видеозаписи лекций Видео-записи лекций 2024 Видео-записи лекций 2023 Видео-записи лекций 2022 Таблица рейтинга Проект - варианты заданий и правила выполнения Критерии выставления оценок по итогам курса courses/devops.txt · ",
                "Технологии автоматизации разработки ПО - ",
                "",
                "Проект - варианты заданий и правила выполнения  Курсы » Технологии автоматизации разработки ПО » Проект - варианты заданий и правила выполнения courses : devops : project Table of Contents Проект - варианты заданий и правила выполнения Общие требования Варианты заданий Расшифровка условий задания Варианты средней сложности Варианты высокой сложности Правила оценивания Правила работы в репозитории По работе в selenium Проект - варианты заданий и правила выполнения Общие требования Список будет пополнятся : ) Dockerfile : Минимальная версия докера Docker version 19.03.13 , build 4484c46d9d Базовый образ ubuntu:22.04 Не использовать Expose При установке любых пакетов и программ ( в том числе в requirements ) ВСЕГДА указывать версии Ограничить установку зависимостей apt одной строкой ( один RUN ) Если настройка одной части приложения состоит из нескольких команд → необходимо разместить их в одном слое ( в одном RUN ) Docker-compose : Минимальная версия docker compose version 1.27.4 , build 40524192 Все должно собиратся по команде docker-compose build без sudo Не использовать тип сети HOST Не отрывать лишних ( непредусмотренных заданием ) портов Не использовать порты хост-машины ⇐1024 Варианты заданий https : //docs.google.com/spreadsheets/d/1Tk7py40c2guXg82FIlYvp5BF9DYnMFcatnOCnKyLXH4/edit # gid=0 Подсказки по условиям вашего задания - ниже . Расшифровка условий задания Построение тестов Проверка на соответствие стилю кодирования / бьютификакция - подключаем проверку стиля кодирования ( технологии ниже ) и встраиваем ее в цепочку запуска Проверка на pep8 - используем https : //pypi.org/project/pep8/ Форматирование Python ( yapf ) - https : //github.com/google/yapf Форматирование Python ( black ) - https : //github.com/psf/black Форматирование Python ( flake8 ) - https : //github.com/PyCQA/flake8 Форматирование HTML , JS ( prettier ) - https : //prettier.io Форматирование Python ( pindent ) - http : //svn.python.org/projects/python/trunk/Tools/scripts/pindent.py Форматирование Python ( pybetter ) - https : //github.com/lensvol/pybetter Форматирование Python ( ssort ) - https : //github.com/bwhmather/ssort Форматинование Pyhton ( usort ) - https : //github.com/facebook/usort Проверка бьютификатором для HTML - https : //pypi.org/project/html-linter/ Причесывание бьютификатором HTML - https : //pypi.org/project/css-html-prettify/ Проверка бьютификатором для JS - https : //pypi.org/project/pyjslint/ Статический анализ - подключаем статическую проверку ( через pylint ) и встраиваем ее в цепочку запуска Анализ по 10 существующим критериям - выберите по 10 уникальных критериев проверки , настройте запуск на них и допустите все десять ошибок в коде проекта : ) Создание своего критерия и проверка только по нему - проверяем на наличие переменных , название которых совпадает с вашим именем Интеграционные тесты - пишем интеграционные тесты ( через requests ) и встраиваем их в цепочку запуска Проверка на коды возврата Проверка на заголовки Проверка на загрузку файла Selenium - пишем selenium тесты и встраиваем их в цепочку запуска ( нельзя использовать для selenium отдельный контейнер , реализуйте тесты в рамах контейнера tester ) . См . описание ниже . Docker Внешний SSH доступ в контейнеры - организуем доступ через протокол SSH контейнер одним из следующих способов : или по ключу в каталоге с проектом , или генерируем пароль для доступа и сообщаем его при сборке / запуске , или генерируем новую пару ключе и выводим их в файлы . Порт для SSH должен быть доступен снаружи docker-compose конфигурации . В app - по публичному ключу ( существующему ) В tester - по публичному ключу ( существующему ) В app и tester - по публичному ключу ( существующему ) В app - по паролю В tester - по паролю В app и tester - по паролю В app - по сгенерированной в процессе сборки паре ключей ( ключи выводим в файл ) В tester - по сгенерированной в процессе сборки паре ключей ( ключи выводим в файл ) В app и tester - по сгенерированной в процессе сборки паре ключей ( ключи выводим в файл ) Вывод логов работы tester - задание о том , куда и как выводить логи тестирования в контейнере tester Каждый этап тестирования - в docker log ( stdout + stderr ) и в отдельный файл оба потока по каждому виду тестирования Совместно выводим логи тестирования ( stdout + stderr ) так , чтобы их видел и docker logs , и они собирались в файле . Каждый этап тестирования - в docker log ( stdout + stderr ) и в общие файлы ( отдельно - для stdout , отдельно - для stderr ) - Совместно выводим логи тестирования ( stdout + stderr ) так , чтобы их видел docker logs , но при этом в один файл сохраняем stdout логов , в другой - stderr . Каждый этап тестирования - в docker log ( stdout + stderr ) + добавить к записям лога timestamp - помимо вывода в docker log нужно также сделать , чтобы перед каждой записью в логе стоял timestamp ( или текущее дата и время ) Docker-compose Передача параметров в конфигурацию через .env , какие параметры передаем - нужно сделать как пример env файла , так и смаппить ( А кое где и написать скрипты настройки ) параметры на нужное поведение Порт для веб-сервера - публичный порт , на котором слушает веб-сервер Список этапов тестирования для запуска - список шагов из пункта “ Построение тестов ” , которые будут запущены . Если не задано , запускаем все этапы . Если задано - то только указанные . Публичный SSHключ для доступа в контейнер ( ы ) - это отдельный ключ , не связанный с заданием “ Внешний SSH доступ в контейнеры ” из предыдущего раздела . Ключ отладки для Flask - флаг отладочной работы ( debug ) для Flask приложения Органичения ресурсов - ограничения ресурсов для контейнеров в docker-compose.yml ОЗУ - ограничьте доступную каждому из контейнеров ОЗУ до объема 100 + НОМЕР_ВАРИАНТА * 10 МБ Ядра процессора - ограничьте доступные в каждом контейнере количество ядер ЦПУ до ( 1 + НОМЕР_ВАРИАНТА % 2 ) ( остаток от деления номера вашего варианта на два ) Максимальное Количество процессов - ограничьте до количества НОМЕР_ВАРИАНТА Selenium-тесты Задача в написании Selenium-тестов - написать автотесты для нескольких форм ИС ИОТ . Тестовый инстанс находится по адресу https : //dev.digital.etu.ru/trajectories-test/ . Тест должен включать в себя следующие шаги : Авторизация через ETU ID . Используйте ваш логин/пароль из ЛК ЛЭТИ . Укажите их в .env-файле , коммитить в репозиторий не нужно Вы должны получить в системе права администратора . Если не получите - пингуйте нас в Discord . В системе все персональные данные заменены на сгенерированные . Если ваш вариант включает в себя работу с ОПОП , РП или формой “ Распределение документов ” , авторизуйтесь за пользователя id=1305 ( Schimmel Вадим August ) на форме “ Авторизация за другого пользователя ” . У этого пользователя есть все права на все документы . Проверьте функционирование формы , указанной в задании : Инструкции по формам есть по ссылке : https : //digital.etu.ru/doku.php ? id=navigation : iot Большинство форм включают в себя сохранение какого-то состояния ( вкладки документа , выдача прав и т.п. ) . В таком случае задача - ввести в форму какие-то значения ( не обязательно осмысленные ) , сохранить , обновить страницу и проверить , что внесенные данные сохранены . В работе с документами - можете создать новый документ или взять существующий в статусе “ черновик ” . Если создаете новый , не забудьте удалить . В работе с документами - берите документы с кафедрой , соотвествующей вашему положению в таблице “ Варианты заданий ” ( см . ниже ) . Так мы избежим конфликтов из-за одновременного выполнения тестов . В работе с пользователями - берите пользователей , у которых фамилия соответствует вашей сгенерированной ( можно посмотреть сверху в сайдбаре ) . Перечень кафедр Кафедра , в которой вы работаете = ( ваш номер в “ Варианты заданий ” ) % 40 + 1 . Кафедры : каф.АМ каф.ЛИНС каф.ЭПУ каф.ИИСТ каф.ВМ каф.МНЭ каф.РАПС каф.ЭП каф.ЭУТ каф.ФЛ каф.ИМ каф.ТВ каф.МОЭВМ каф.МСК каф.БЖД каф.СО каф.ВТ каф.САПР каф.ФЭТ каф.Фот каф.МВЭ каф.ПМИГ каф.ИНЯЗ каф.ТОЭ каф.СП каф.ПЭ каф.ТОР каф.БТС каф.РС каф.САУ каф.ИКГП каф.ЭТПТ каф.РЯ каф.МИТ каф.ФХ каф.РЭС каф.ИЗОС каф.АПУ каф.ИС каф.ФВиС Это не все кафедры ЛЭТИ , только те , по которым есть более 100 РП . Варианты средней сложности Вам необходимо реализовать docker-compose конфигурацию из двух узлов ( не больше и не меньше ) : app - контейнер с существующим демонстрационным веб-приложением ( https : //github.com/moevm/devops-examples/tree/main/EXAMPLE_APP ) . Устанавливать приложение необходимо скачивая репозиторий https : //github.com/moevm/devops-examples и копируя файлы из него при сборке вашего контейнера : ) Чтобы все заработало , вам придется потратить время и поразбираться - из коробки может не работать . Возможно , вам для выполнения заданий потребуются фиксы в исходник - делайте для них патчи ( https : //man7.org/linux/man-pages/man1/patch.1.html ) Корнем дерева процессов выступает запущенное веб-приложение tester - контейнер для запуска всех тестов ( состав и особенности тестов задаются в таблице вариантов ) Корнем дерева процессов выступает стандартный python http сервер ( python -m http.server 3000 ) Этот сервер должен быть запущен в каталоге контейнера , где будет происходить работа тестовых скриптов Тестовые скрипты запускаются через docker exec Оба контейнера должны использовать написанные вами образы , собираемые из локальных Dockerfile . Шаблоны для имен Dockerfile : Dockerfile_app Dockerfile_tester Помимо Dockerfile , вам также необходимо сделать файл README.md , содержащий примеры команд для запуска тестов и проверки всей конфигурации . Это сильно ускорит проверку : ) Параметры конфигурации задаются в таблице вариантов + общие требования ( http : //se.moevm.info/doku.php/courses : devops : project # общие_требования ) . Варианты высокой сложности 1 . Автоматизация тестирования курсовых по Android Идея - разработать набор github actions , которые будут по состоянию репозитория проверять ( базово ) соответствие этапам выполнения работы и генерировать / отображать статус в readme . Подробности об этапах : https : //se.moevm.info/doku.php/staff : courses : application_development_for_mobile_platforms : course_work : topics Проверяем : Макет и UC ( есть вики страница , файл макета загружен в репо ) UI на заглушках ( если задан нужный тег- проверяем наличие исходников андроид проекта , его собираемость через github actions , .gitignore , название пакета ) Юнит-тесты ( тег , сборка и запуск ) App is ready ( тег , требования , запуск , запуск стресстестов ) Оценка сложности UI вашего приложения ( вики станица и ее содержимое ) Пояснительная записка ( наличие файлов ) Интеграционные тесты ( тег , сборка и запуск ) Используем в качестве технологий github actions . Сдаем отдельным репо . 2 . Проверка корректности учебных работ на языке Python ( командная строка ) Идея - автоматизировать процесс проверки лабораторных и курсовых работ . Для проверки кода - pylint , для тестирования работы в командной строке https : //github.com/cucumber/aruba , для профилирования работы - valgrind . Формат выполнения github actions . Сдаем отдельным репо . Этапы проверки Успешная проверка на явные синтаксические проблемы через линтер ( не запустится , нет комментов , невменяемые имена переменных… . ) Успешное тестирование работы на заранее известных примерах аргументов командной строки ( == приложение не падает с заранее известными аргументами ) Стресс-тестирование аргументов командной строки ( проверка , что если подавать почти рандомные аргументы , приложение не сломается . Аргументы необходимо генерировать рандомно , но в соответствии с описанием ожидаемой структуры ) Стресс-тестирование stdin Профилирование работы по памяти и времени ( valgrind + time ) 3 . Проверка корректности учебных работ на языке С ( командная строка ) Аналогично теме 2 , но компилируем в gcc ( и проверяем что все ок с компиляцией ) + другие линтеры . Правила оценивания Оценка за проект складывается из следующих критериев ( пропорционально степени выполнения вашего варианта задания ) : ( 0-10 баллов ) Требования к организации тестов из вашего варианта ( 0-10 баллов ) Требования к работе в Docker ( 0-10 баллов ) Требования к работе в составе Docker-Compose Подробно о процедуре проверки https : //docs.google.com/document/d/1iqn_jtQ7yP_jgMv1a-jw3qriWTVHDyAeEPAnQT51tl8/edit Правила работы в репозитории Все работы сдаются только и исключительно в виде PR в репозиторий курса . Подробно : https : //github.com/moevm/devops-1h2024/blob/main/README.md По работе в selenium Если у вас сложности : Примеры скриптов и тестов https : //github.com/moevm/devops-examples/tree/main/selenium_tests Курс https : //stepik.org/course/575 Старая , но актуальная лекция про Selenium https : //www.youtube.com/watch ? v=gLj6BMmI69I courses/devops/project.txt · ",
                "Критерии выставления оценок по итогам курса  Курсы » Технологии автоматизации разработки ПО » Критерии выставления оценок по итогам курса courses : devops : mark Table of Contents Критерии выставления оценок по итогам курса Отчет по проекту Оценка Критерии выставления оценок по итогам курса Отчет по проекту Шаблон оформления отчета http : //eltech.ru/assets/files/3004_3_ShABLON-kursovika.doc Отчет необходимо загрузить в форматах docx/odt + pdf ( два файла ) Отчет необходимо назвать по шаблону Группа_Фамилия_Инициалы Необходимые разделы отчета : Постановка задачи Описание Dockerfile / ( с комментариями и обоснованиями , почему решили сделать так ) Описание скриптов запуска тестов Описание Docker-compose конфигурации Заключение Если по каким-то причинам вы готовите отчет , но сделать проект у вас не получилось - опишите помимо постановки задачи кратко , какими инструментами для выполнения работы вам необходимо было бы пользоватся и дайте ссылки на их сайты . Оценка Необходимое ( но не достаточное ) условия получения любой оценки выше “ Не удовлетворительно ” - наличие отчета по проекту , оформленного согласно правилам выше и загруженного в репозиторий . Оценка по курсу выставляется по балльной системе как совокупность выполнения следующих заданий ( 0-100 ) ( 0-30 баллов пропорционально степени прохождения ) Прохождение онлайн-курса https : //stepik.org/course/123300/ . Платить ни за что не нужно - необходимо выполнить ТОЛЬКО бесплатные тестовые задания . ( 0-30 баллов пропорционально степени прохождения ) Прохождение онлайн-курса https : //stepik.org/course/1612/ . Необходимо и достаточно выполнить задания модуля 2 “ Контейнеризация и Docker ” . ( 0-30 баллов ) Выполнение проекта http : //se.moevm.info/doku.php/courses : devops : project ( 0-10 баллов ) Бонус за раннюю сдачу проекта . Начисляется тем , кто присылает готовый к проверке PR раньше 1 мая . Количество баллов пропорционально тому , насколько заранее была прислана работа . Формула в таблице успехов . ( -20 - 0 баллов ) Штраф за позднюю сдачу проекта . Начисляется тем , кто присылает готовый PR после 1 мая . Количество баллов пропорционально тому , насколько поздно была прислана работа . Формула в таблице успехов . Штраф вычитается из итоговой суммы баллов за проект ; меньше 0 баллов за проект получено быть НЕ может . Штраф за списывание - вплоть до полного обнуления баллов за проект . Вступите в классы на степике по ссылкам ниже - в противном случае Ваши успехи в прохождении курсов потеряются и не будут учтены в итоговом рейтинге ! https : //stepik.org/join-class/643d1dcabfc9c1b15b65b5fd51c46d6956d17f6f https : //stepik.org/join-class/dfd8d5642074825c97e477ee397b8e9364d845ab По прохождению онлайн-курсов : завершить прохождение необходимо не позже 10:00 01.06.2023 по Московскому времени . Платить за онлайн-курсы не нужно , учитываются только задания , доступные для прохождения бесплатно . По отправке PR - прислать PR с отчетом / с отчетом и работой на проверку до в 14:00 01.06.2023 по Москве . Проверка присланного позже не гарантируется . ( при сдаче в сессию ) Баллы конвертируются в пятибалльную систему : > = 80 Отлично > = 70 Хорошо > = 60 Удовлетворительно ( при сдаче в день качества и доп.сессию ) Баллы конвертируются в пятибалльную систему : > = 89 Отлично > = 82 Хорошо > = 60 Удовлетворительно courses/devops/mark.txt · ",
                "✎ Технологии автоматизации разработки ПО  Курсы » Технологии автоматизации разработки ПО courses : devops This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Технологии автоматизации разработки ПО ====== ===== Коммуникация и начало работы ===== * Ответы на вопросы , анонсы и общение - на discord-сервере https : //discord.gg/bcCUayk48t * Регистрация на курс https : //forms.gle/ruDTxdK2b1GXqSGy9 ===== Материалы курса ===== * [ [ https : //drive.google.com/drive/folders/1_74znt6XXP0zxoYTADWLOA5cBQ412gI2|Презентации лекций ] ] * [ [ https : //www.youtube.com/playlist ? list=PL_loHmHW7aR5j9zCATszZpLJfO1-mDNyD|Видеозаписи лекций ] ] * [ [ https : //www.youtube.com/playlist ? list=PL_loHmHW7aR5j9zCATszZpLJfO1-mDNyD|Видео-записи лекций 2024 ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfoptfiDbolvLN-A9UHNuvbJ-|Видео-записи лекций 2023 ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfoq3gBij-QesOYQZrNO90tzX|Видео-записи лекций 2022 ] ] * [ [ https : //docs.google.com/spreadsheets/d/18rMYenFWipWc7WsyoWunnJpaCwgb8OlP5xWJDlCxCpQ/edit ? usp=sharing|Таблица рейтинга ] ] * [ [ courses : devops : project|Проект - варианты заданий и правила выполнения ] ] * [ [ courses : devops : mark|Критерии выставления оценок по итогам курса ] ] courses/devops.txt · ",
                "Технологии автоматизации разработки ПО - Old revisions  Курсы » Технологии автоматизации разработки ПО courses : devops Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/09 15:29 Технологии автоматизации разработки ПО – [ Материалы курса ] azarevich.artem +127 B ( current ) 2024/02/06 19:43 Технологии автоматизации разработки ПО – [ Коммуникация и начало работы ] azarevich.artem ±0 B 2024/02/06 19:42 Технологии автоматизации разработки ПО – [ Материалы курса ] azarevich.artem -2 B 2023/02/17 06:51 Технологии автоматизации разработки ПО – [ Коммуникация и начало работы ] azarevich.artem +30 B 2023/02/13 13:40 Технологии автоматизации разработки ПО – [ Материалы курса ] mark +127 B 2023/02/05 18:36 Технологии автоматизации разработки ПО korytov.pavel +109 B 2022/12/10 09:08 Технологии автоматизации разработки ПО – external edit 127.0.0.1 ±0 B 2022/02/09 12:01 Технологии автоматизации разработки ПО mark +297 B 2022/01/27 13:46 Технологии автоматизации разработки ПО – [ Материалы курса ] mark +118 B 2022/01/27 13:45 Технологии автоматизации разработки ПО – [ Материалы курса ] mark +1 B 2022/01/27 13:44 Технологии автоматизации разработки ПО – created mark +586 B Show differences between selected revisions courses/devops.txt · ",
                "Технологии автоматизации разработки ПО - "
            ]
        },
        {
            "name": "Инструменты для анализа данных: R, Pandas",
            "url": "/doku.php/courses:pandas_r",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Инструменты для анализа данных : R , Pandas  Курсы » Инструменты для анализа данных : R , Pandas courses : pandas_r Table of Contents Инструменты для анализа данных : R , Pandas Расписание дистанционных занятий Репозиторий с примерами и презентациями с лекций Оценивание по курсу Инструменты для анализа данных : R , Pandas Расписание дистанционных занятий Занятия проходят по второй неделе четверга , в 17:20 . Ссылка на zoom-конференцию есть на почте группы . Репозиторий с примерами и презентациями с лекций data-vis Оценивание по курсу Необходимо пройти курс по R. Дедлайн прохождения : 27.12.2021 . Вы можете набрать 5 баллов за прохождение этого курса : 15 - 17 баллов курса : 1 балл , 18 - 34 : 2 балла , 35 - 52 : 3 балла , 53 - 70 : 4 балла , больше 70 : 5 баллов В конце семестра вы будете писать контрольную работу , в которой будет несколько заданий на Pandas . Вы сможете максимально набрать в ней 6 баллов . Баллы за курс конвертируются в оценку : < 3 баллов - оценка неудовлетворительно 3 , 4 , 5 баллов - оценка удовлетворительно 6 , 7 , 8 , 9 баллов - оценка хорошо 10 , 11 баллов - оценка отлично . courses/pandas_r.txt · ",
                "Инструменты для анализа данных : R , Pandas - ",
                "",
                "✎ Инструменты для анализа данных : R , Pandas  Курсы » Инструменты для анализа данных : R , Pandas courses : pandas_r This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Инструменты для анализа данных : R , Pandas ====== ==== Расписание дистанционных занятий ===== Занятия проходят по второй неделе четверга , в 17:20 . Ссылка на zoom-конференцию есть на почте группы . ==== Репозиторий с примерами и презентациями с лекций ==== [ [ https : //github.com/moevm/data-vis|data-vis ] ] ==== Оценивание по курсу ==== Необходимо пройти [ [ https : //stepik.org/join-class/8ec9390a055c91cb5f6f88a3ce185f0b9394c9b6|курс по R ] ] . Дедлайн прохождения : 27.12.2021 . Вы можете набрать 5 баллов за прохождение этого курса : * 15 - 17 баллов курса : 1 балл , * 18 - 34 : 2 балла , * 35 - 52 : 3 балла , * 53 - 70 : 4 балла , * больше 70 : 5 баллов В конце семестра вы будете писать контрольную работу , в которой будет несколько заданий на Pandas . Вы сможете максимально набрать в ней 6 баллов . Баллы за курс конвертируются в оценку : * < 3 баллов - оценка неудовлетворительно * 3 , 4 , 5 баллов - оценка удовлетворительно * 6 , 7 , 8 , 9 баллов - оценка хорошо * 10 , 11 баллов - оценка отлично . courses/pandas_r.txt · ",
                "Инструменты для анализа данных : R , Pandas - Old revisions  Курсы » Инструменты для анализа данных : R , Pandas courses : pandas_r Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Инструменты для анализа данных : R , Pandas ( external edit ) ( current ) 2021/09/23 13:40 Инструменты для анализа данных : R , Pandas tatyana.berlenko -18 B 2021/09/23 13:40 Инструменты для анализа данных : R , Pandas tatyana.berlenko +1.5 KB 2021/09/23 13:23 Инструменты для анализа данных : R , Pandas – created tatyana.berlenko +85 B Show differences between selected revisions courses/pandas_r.txt · ",
                "Инструменты для анализа данных : R , Pandas - "
            ]
        },
        {
            "name": "Анализ и интерпретация данных",
            "url": "/doku.php/courses:data_analysis_and_interpretation:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Анализ и интерпретация данных  Курсы » Анализ и интерпретация данных courses : data_analysis_and_interpretation : start Table of Contents Анализ и интерпретация данных Материалы Практические работы Разное Списки групп Анализ и интерпретация данных Материалы Программа Учебные материалы Экзамен Практические работы Практическая работа №1 : Основы работы с языком R Практическая работа №2 : Подготовка статистических данных Практическая работа №3 : Изучение дискриминантного анализа Практическая работа №4 : Исследование методов кластер-анализа Практическая работа №5 : Исследование методов факторного анализа Практическая работа №6 : Исследование методов многомерного шкалирования Разное Дополнительные задания Списки групп 2019 ( 4381 ) courses/data_analysis_and_interpretation/start.txt · ",
                "Анализ и интерпретация данных - ",
                "",
                "Программа  Курсы » Анализ и интерпретация данных » Программа courses : data_analysis_and_interpretation : lectures Table of Contents Программа 1 . Введение в анализ данных 2 . Классификация данных 3 . Обучаемые классификаторы . Детерминистский подход 4 . Кластерный анализ 5 . Методы снижения размерности 6 . Факторный анализ 7 . Многомерное шкалирование Программа 1 . Введение в анализ данных Проблема обработки данных Матрица данных Гипотеза компактности и скрытых факторов Структура матрицы данных и задачи обработки Матрица объект-объект и признак-признак , расстояние и близость Изменение признаков Основные типы шкал 2 . Классификация данных Постановка задачи Статистические методы классификации Постановка задачи классификации как статистической задачи при известных вероятностных распределениях Построение классификации для нормального распределения Числовые примеры Оценка качества классификации Классификация на основе оценки апостериорной вероятности Классификация двух нормальных распределений с неравными матрицами ковариаций Классификация нормально распределённых векторов при неизвестных параметрах распределения Задача статистической классификации для количества классов больше 2 Линейная дискриминантная функция Фишера 3 . Обучаемые классификаторы . Детерминистский подход Общие свойства линейных дискриминантных функций в детерминистской подстановке Персептронный алгоритм получения линейных решающих правил Правила поиска решения , основанные на минимизации градиента функции качества Формальный вывод персептронного алгоритма 4 . Кластерный анализ Постановка задачи группировки данных Пример Критерии качества разбиения на классы Основные типы кластерных процедур . Основные задачи кластерного анализа Построение последовательной процедуры итеративной оптимизации Базовая процедура кластеризации ( базовая минимальная квадратичная ошибка ) Параллельная процедура . Базовые изоданные Описание процедуры : Базовые изоданные Алгоритм k-внутригрупповых средних Иерархические процедуры группировки Агломеративная процедура Статистические модели группировки Алгоритм автоматической классификации на основе использования кластер-анализа 5 . Методы снижения размерности Методы отбора признаков по заданному критерию Метод главных компонент 6 . Факторный анализ Модель факторного анализа Структура факторных уравнений Неоднозначность факторного решения Метод главных факторов Метод центроидных факторов 7 . Многомерное шкалирование Дистанционная модель для различий Модель Торгерсона Поворот Объективные повороты Ручные повороты Размерность Интерпретация courses/data_analysis_and_interpretation/lectures.txt · ",
                "Учебные материалы  Курсы » Анализ и интерпретация данных » Учебные материалы courses : data_analysis_and_interpretation : materials Table of Contents Учебные материалы Список литературы Для оформления практических работ Полезные ссылки Программное обеспечение Учебные материалы Список литературы Барсегян , А.А. , Куприянов М. С. и др . Технологии анализа данных : Data Mining , Visual Mining , Text Minning , OLAP Барсегян , А.А. , Куприянов М. С. и др . Методы и модели анализа данных : OLAP и Data Mining Вуколов Э. А. Основы статистического анализа : практикум по статистическим методам и исследованию операций с использованием пакетов STATISTICA и EXCEL . Боровиков В. П. STATISTICA . Искусство анализа данных на компьютере . Халафян А. А. STATISTICA 6 . Статистический анализ данных . Для оформления практических работ Для корректного отображения отчётов в формате .ODT в LibreOffice необходимо установить шрифты Times New Roman и Courier New . Это можно сделать , прописав в консоли ( для Ubuntu ) следующую команду : sudo apt install ttf-mscorefonts-installer Требования к оформлению научно-технических отчётов ( Распоряжение от 09.11.2015 № 3003 ) Шаблон оформления практических работ ( формат .DOCX ) Шаблон оформления практических работ ( формат .ODT ) Полезные ссылки Наборы данных для практических работ ( archive.ics.uci.edu ) Наборы данных для практических работ ( kaggle ) Stepik − Основы программирования на R Stepik − Анализ данных в R Stepik − Анализ данных в R. Часть 2 Программное обеспечение R RStudio courses/data_analysis_and_interpretation/materials.txt · ",
                "Экзамен  Курсы » Анализ и интерпретация данных » Экзамен courses : data_analysis_and_interpretation : exam Table of Contents Экзамен Список экзаменационных вопросов Перечень экзаменационных задач Экзамен Список экзаменационных вопросов Проблема обработки данных . Матрица данных . Гипотеза компактности и скрытых факторов . Структура матрицы данных и задачи обработки . Матрица объект-объект и признак-признак . Расстояние и близость . Измерение признаков . Отношения и их представление . Основные проблемы измерений . Основные типы шкал . Проблема адекватности . Классификация данных : общая постановка задачи . Решающие функции и основные подходы к их построению . Классификация данных как статистическая задача . Классификация в случае двух нормальных распределений с равными матрицами ковариаций . Примеры построения решающих функции для нормальных распределений с равными диагональными матрицами ковариаций . Ошибки классификации для случая двух нормальных распределений с равными матрицами ковариаций . Апостриорная вероятность отнесения данных к классу ( на основе теоремы Байеса ) для случая многомерных нормальных распределений . Классификация при количестве классов больше двух ( нормальное распределение с равными матрицами ковариаций ) . Классификация для случая двух нормальных распределений с разными матрицами ковариаций . Линейный дискриминант Фишера . Пошаговый дискриминантный анализ . Кластерный анализ : общая постановка задачи , определение расстояний между объектами и кластерами , критерии кластеризации . Последовательная процедура итеративной оптимизации в задачах кластер-анализа . Параллельная процедура кластеризации . Алгоритм k-внутригрупповых средних . Алгоритм автоматической классификации на основе алгоритма адаптивного выбора подклассов ( АВП ) . Иерархическая группировка . Обучаемые классификаторы : детерминистский подход . Вероятность получения линейного разделения классов . Построение линейных решающих правил персептронного типа – обучение с коррекцией ошибок . Построение линейных решающих функции методом градиентной минимизации функции качества . Алгоритмы оценки информативности признаков . Метод главных компонент для выбора признаков . Факторный анализ : общая модель . Структура факторных уравнений . Неоднозначность факторного решения . Метод главных факторов . Метод центроидных факторов . Проблема оценки значений факторов и виды факторных моделей . Оценки общностей и вращение факторов . Многомерное шкалирование . Перечень экзаменационных задач Выполнить центрирование и нормирование матрицы данных . Построить байесовское решающее правило для двух классов для нормального распределения . Построить решающее правило для классификации двух классов на основе апостериорных вероятностей . Найти уравнение линии равной плотности вероятностей $ f ( x ) = C $ , для двумерного нормального распределения . Построить решающую функцию для классификации 2-х нормальных классов Найти расстояние Махалонобиса для двух классов . Найти выражение для средней ошибки классификации этих классов с использованием байесовской решающей функции . Построить решающее правило для классификации двух классов с разными матрицами ковариации . Написать первые $ n $ шагов персептронной процедуры обучения для классификации двух классов $ X_1 $ , $ X_2 $ , состоящих из векторов заданных построчно в матрицах $ X_1 $ , $ X_2 $ . Определить расстояние между двумя кластерами $ C_1 $ , $ C_2 $ по методу ближайшего соседства . Написать $ n $ шагов процедуры кластеризации по методу k-средних . Произвести иерархическую кластеризацию данных , заданных построчно в матрице $ C $ . Найти выражения главных компонент для набора данных с заданной матрицей ковариации $ \\Sigma $ . courses/data_analysis_and_interpretation/exam.txt · ",
                "Практическая работа №1 : Основы работы с языком R  Курсы » Анализ и интерпретация данных » Практическая работа №1 : Основы работы с языком R courses : data_analysis_and_interpretation : task1 Table of Contents Практическая работа №1 : Основы работы с языком R Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Таблица `` Социологический опрос '' Содержание отчёта Практическая работа №1 : Основы работы с языком R Цель работы Изучить приёмы работы со средой RStudio , научиться создавать программы на языке R , формировать и обрабатывать с их помощью статистические данные , а также пользоваться контекстной помощью . Основные теоретические положения R – язык программирования для статистической обработки данных и работы с графикой , а также свободная программная среда вычислений с открытым исходным кодом в рамках проекта GNU . R широко используется как статистическое программное обеспечение для анализа данных и фактически стал стандартом для статистических программ . R поддерживает широкий спектр статистических и численных методов и обладает хорошей расширяемостью с помощью пакетов . Пакеты представляют собой библиотеки для работы специфических функций или специальных областей применения . В базовую поставку R включен основной набор пакетов , а всего по состоянию на 2017 год доступно более 11778 пакетов . Ещё одна особенность R – возможность создания качественной графики , которая может включать математические символы . RStudio – свободная среда разработки программного обеспечения с открытым исходным кодом для языка программирования R , который предназначен для статистической обработки данных и работы с графикой . RStudio написана на языке программирования C++ и использует фреймворк Qt для графического интерфейса пользователя . Постановка задачи Используя средства языка R провести анализ таблицы данных « Социологический опрос » , получить необходимые результаты , сделать выводы . Порядок выполнения работы Создать таблицу данных « Социологический опрос » из 6 случаев и 4 переменных с помощью конструкции data.frame ( ) . Имена переменных задать следующие : name ( ФИО ) , sex ( Пол ) , age ( Возраст ) , education ( Образование ) , income ( Доход ) . Переменные Пол и Образование представить как факторные . Проверить , что эти переменные действительно факторные любым удобным способом с соответствующим сообщением в консоли . Добавить в таблицу новую переменную income_20 ( Доход_20 ) , значения которой равны Доход + премия в размере 20 % от Дохода . Рассчитать среднее значение Дохода и вывести его на экран . Используя инструменты R построить столбчатую диаграмму для Возраста и Дохода . Добавить в таблицу новую переменную income_S ( Доход_С ) , значения которой равны Доход + Доход_20 . Добавить новую переменную income_M ( Доход_М ) . Необходимо найти максимальный доход и для каждого респондента определить , сколько процентов от максимального дохода составляет его доход . Рассчитать среднее значение дохода в зависимости от пола . Удалить переменную income_20 . Составить таблицу 1000×3 , содержащую в качестве первой переменной значения значения $ x_i \\in [ 0 , \\,2\\pi ] $ ( $ x_i $ изменяется с постоянным шагом ) , в качестве второй – значения $ \\sin x_i $ и в качестве третьей – значения $ \\sin x_i + X $ , где $ X \\sim \\mathcal N ( 0 , \\,0.005 ) $ . Создать новый dataframe , в котором будут сохранены только первые 100 строк и последние 50 строк таблицы из п . 10 . Используя инструменты R вывести первые 5 строчек датафрейма из п . 11 . Используя инструменты R вывести последние 5 строчек датафрейма из п . 11 . Нарисовать 2 синусоиды , используя данные из п . 10 . Таблица `` Социологический опрос '' name sex age education income John Davis Male 21 Secondary 125 Angela Williams Female 23 Higher 345 Janice Markhammer Female 40 - 50 Bullwinkle Moose Male 35 Secondary 399 Mary Rayburn Female 18 Secondary 136 Greg Knox Male 20 Higher 120 Содержание отчёта courses/data_analysis_and_interpretation/task1.txt · ",
                "Практическая работа №2 : Подготовка статистических данных  Курсы » Анализ и интерпретация данных » Практическая работа №2 : Подготовка статистических данных courses : data_analysis_and_interpretation : task2 Table of Contents Практическая работа №2 : Подготовка статистических данных Цель работы Основные теоритические положения Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №2 : Подготовка статистических данных Цель работы Подготовить данные для работы с R на базе искомого набора статистических данных . Основные теоритические положения Рассмотрим традиционный способ представления результатов эксперимента – матрицу данных . Пусть исследователь располагает совокупностью из $ N $ наблюдений над состоянием исследуемого явления . При этом явление описано набором из $ n $ характеристик , значения которых тем или иным способом измерены в ходе эксперимента . Данные характеристики носят название признаков , показателей или параметров . Такая информация представляется в виде двухмерной таблицы чисел $ \\mathbf X $ размерности $ N \\times n $ или в виде матрицы $ X $ размерности $ N \\times n $ : $ $ X = \\begin { pmatrix } x_ { 11 } & \\ldots & x_ { 1j } & \\ldots & x_ { 1n } \\\\ \\ldots & \\ldots & \\ldots & \\ldots & \\ldots\\\\ x_ { i1 } & \\ldots & x_ { ij } & \\ldots & x_ { in } \\\\ \\ldots & \\ldots & \\ldots & \\ldots & \\ldots\\\\ x_ { N1 } & \\ldots & x_ { Nj } & \\ldots & x_ { Nn } \\\\ \\end { pmatrix } $ $ Строки матрицы $ X $ соответствуют наблюдениям или , другими словами , объектам наблюдения . В качестве объектов наблюдения выступают , например : в социологии – респонденты ( анкетируемые люди ) , в экономике – предприятия , виды продукции и т.д . Столбцы матрицы $ X $ соответствуют признакам , характеризующим изучаемое явление . Как правило , это наиболее легко измеряемые характеристики объектов . Например , предприятие характеризуется численностью , стоимостью основных фондов , видом выпускаемой продукции и т.д . Очевидно , что элемент $ X_ { ij } $ представляет собой значение признака $ j $ , измеренное на объекте $ i $ . Часто матрица данных $ X $ приводится к стандартной форме следующим преобразованием ( для элементов матрицы в стандартной форме используется обозначение $ x ' $ ) : $ $ x'_j = \\frac { x_ { ij } - \\bar x_j } { \\sigma_j } , $ $ $ $ \\bar x_j = \\frac1N\\sum_ { i = 1 } ^Nx_ { ij } , $ $ $ $ \\sigma_j^2 = \\frac1N\\sum_ { i = 1 } ^N ( x_ { ij } - \\bar x_j ) ^2 , \\ , i = 1 .. N , \\ , j = 1 .. n , $ $ где $ \\bar x_j $ , $ \\sigma_j^2 $ – среднее и дисперсия по столбцу с номером $ j $ , после которого стандартная матрица $ X ' $ обладает следующими свойствами : $ $ \\overline { x'_j } = \\frac1N\\sum_ { i = 1 } ^Nx ' _ { ij } = 0 , $ $ $ $ ( \\sigma'_j ) ^2 = \\frac1N\\sum_ { i = 1 } ^N ( x ' _ { ij } ) ^2 = 1 , \\ , i = 1 .. N , \\ , j = 1 .. n. $ $ Зачастую признаки , описывающие некоторый объект , имеют существенно различный физический смысл . Это приводит к тому , что величины в различных столбцах исходной матрицы трудно сопоставлять между собой , например , килограмм и метр . Поэтому получение стандартизованной матрицы можно понимать как приведение всех признаков к некоторой единой условной физической величине , выраженной в одних и тех же условных единицах . Постановка задачи Выбрав набор данных , одобренный преподавателем , подготовить данные для последующей работы с помощью инструментов R. Порядок выполнения работы Содержание отчёта courses/data_analysis_and_interpretation/task2.txt · ",
                "Практическая работа №3 : Изучение дискриминантного анализа  Курсы » Анализ и интерпретация данных » Практическая работа №3 : Изучение дискриминантного анализа courses : data_analysis_and_interpretation : task3 Table of Contents Практическая работа №3 : Изучение дискриминантного анализа Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Практическая работа №3 : Изучение дискриминантного анализа Цель работы Ознакомиться с методами дискриминантного анализа на основе языка R. Основные теоретические положения Дискриминантный анализ используется для принятия решения о том , какие переменные различают ( дискриминируют ) две или более возникающие совокупности ( группы ) . Например , некий исследователь в области образования может захотеть исследовать , какие переменные относят выпускника средней школы к одной из трех категорий : ( 1 ) поступающий в колледж , ( 2 ) поступающий в профессиональную школу или ( 3 ) отказывающийся от дальнейшего образования или профессиональной подготовки . Для этой цели исследователь может собрать данные о различных переменных , связанных с учащимися школы . После выпуска большинство учащихся естественно должно попасть в одну из названных категорий . Затем можно использовать Дискриминантный анализ для определения того , какие переменные дают наилучшее предсказание выбора учащимися дальнейшего пути . Медик может регистрировать различные переменные , относящиеся к состоянию больного , чтобы выяснить , какие переменные лучше предсказывают , что пациент , вероятно , выздоровел полностью ( группа 1 ) , частично ( группа 2 ) или совсем не выздоровел ( группа 3 ) . Биолог может записать различные характеристики сходных типов ( групп ) цветов , чтобы затем провести анализ дискриминантной функции , наилучшим образом разделяющей типы или группы . Функции классификации . Функции классификации предназначены для определения того , к какой группе наиболее вероятно может быть отнесен каждый объект . Имеется столько же функций классификации , сколько групп . Каждая функция позволяет вам для каждого образца и для каждой совокупности вычислить веса классификации по формуле : $ $ S_i = c_i + \\sum_ { j = 1 } ^mw_ { ij } x_j . $ $ В этой формуле индекс $ i $ обозначает соответствующую совокупность , а индекс $ j $ обозначает переменную ; $ c_i $ являются константами для $ i $ -ой совокупности , $ w_ { ij } $ – веса для $ j $ -ой переменной при вычислении показателя классификации для $ i $ -ой совокупности ; $ x_j $ - наблюдаемое значение для соответствующего образца $ j $ -ой переменной . Величина $ S_i $ является результатом показателя классификации . Переменные с наибольшими регрессионными коэффициентами вносят наибольший вклад в дискриминацию . Расстояние Махаланобиса является мерой расстояния между двумя точками в пространстве , определяемым двумя или более коррелированными переменными . Например , если имеются всего две некоррелированных переменные , то можно нанести точки ( образцы ) на стандартную диаграмму рассеяния . Расстояние Махаланобиса между точками будет в этом случае равно расстоянию Евклида , т.е . расстоянию , измеренному , например , рулеткой . Если имеются три некоррелированные переменные , то для определения расстояния вы можно по-прежнему использовать рулетку ( на 3М диаграмме ) . При наличии более трех переменных вы не можете более представить расстояние на диаграмме . Также и в случае , когда переменные коррелированы , то оси на графике могут рассматриваться как неортогональные ( они уже не направлены под прямыми углами друг к другу ) . В этом случае простое определение расстояния Евклида не подходит , в то время как расстояние Махаланобиса является адекватно определенным в случае наличия корреляций . Для расчёта ошибок классификации удобнее всего представить расстояние Махалонобиса , как симметричную матрицу с нулевой главной диагональю : $ $ R = \\begin { pmatrix } 0 & r_ { 12 } ^2 & \\ldots & r_ { 1M } ^2\\\\ r_ { 21 } ^2 & 0 & \\ldots & r_ { 2M } ^2\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ r_ { M1 } ^2 & r_ { M2 } ^2 & \\ldots & 0 \\end { pmatrix } , $ $ $ r_ { ij } = r_ { ji } $ , $ r_ { ii } = 0 $ . Элементы матрицы можно найти как : $ $ r_ { ij } ^2 = ( \\mu_i - \\mu_j ) ^T\\Sigma^ { -1 } ( \\mu_i - \\mu_j ) , $ $ где $ \\mu_i $ и $ \\mu_j $ – вектора математических ожиданий для первого и второго класса соответственно , $ \\Sigma $ – ковариационная матрица . Вероятность ошибки можно определить следующим образом : $ $ P ( i \\mid j ) = \\Phi\\left ( -\\frac { r_ { ij } } 2\\right ) = 1 - \\Phi\\left ( \\frac { r_ { ij } } 2\\right ) , $ $ где $ \\Phi ( \\cdot ) $ – функция ошибок . Пошаговый анализ с включением . В пошаговом анализе дискриминантных функций модель дискриминации строится по шагам . Точнее , на каждом шаге просматриваются все переменные и находится та из них , которая вносит наибольший вклад в различие между совокупностями . Эта переменная должна быть включена в модель на данном шаге , и происходит переход к следующему шагу . Пошаговый анализ с исключением . Можно также двигаться в обратном направлении , в этом случае все переменные будут сначала включены в модель , а затем на каждом шаге будут устраняться переменные , вносящие малый вклад в предсказания . Тогда в качестве результата успешного анализа можно сохранить только “ важные ” переменные в модели , то есть те переменные , чей вклад в дискриминацию больше остальных . Эта пошаговая процедура « руководствуется » соответствующим значением $ F $ для включения и соответствующим значением $ F $ для исключения . Значение $ F $ статистики для переменной указывает на ее статистическую значимость при дискриминации между совокупностями , то есть , она является мерой вклада переменной в предсказание членства в совокупности . Постановка задачи Порядок выполнения работы Варианты заданий Модель представляет собой набор многомерных векторов $ \\vec x = ( x_1 , \\dots , x_m ) $ , $ m = 2 , 3 $ , имеющих заданные вектора математических ожиданий $ \\mu_i $ , $ i = \\overline { 1 .. M } $ и заданные ковариационные матрицы ( одинаковые по классам ) , которые имеют вид $ \\Sigma = \\mathop { \\mathrm { diag } } \\nolimits\\ { \\sigma_1 , \\dots , \\sigma_m\\ } $ . Компоненты векторов имеют нормальное распределение . Количество классов равно $ M = 2 , 3 $ . № варианта Размерность $ m $ Объём выборки $ N $ по классу Вектора $ \\mu_i $ Значения $ \\sigma_i $ Количество классов $ M $ 1 2 100 $ \\mu_1 = ( 1 , \\,2 ) ^T \\\\ \\mu_2 = ( 1 , \\ , -2 ) ^T $ $ \\sigma_1 = 1 \\\\ \\sigma_2 = 1 $ 2 2 2 300 $ \\mu_1 = ( 1.5 , \\,3 ) ^T \\\\ \\mu_2 = ( 3 , \\,4 ) ^T \\\\ \\mu_3 = ( -1.5 , \\ , -1 ) ^T $ $ \\sigma_1 = 1 \\\\ \\sigma_2 = 1 $ 3 3 3 150 $ \\mu_1 = ( 1 , \\,1 , \\,1 ) ^T \\\\ \\mu_2 = ( 2 , \\,2 , \\,2 ) ^T $ $ \\sigma_1 = 0.5 \\\\ \\sigma_2 = 1 \\\\ \\sigma_3 = 0.5 $ 2 4 3 150 $ \\mu_1 = ( 1 , \\,1 , \\,1 ) ^T \\\\ \\mu_2 = ( 2.5 , \\,2.5 , \\,2.5 ) ^T \\\\ \\mu_3 = ( 4 , \\,4 , \\,4 ) ^T $ $ \\sigma_1 = 0.5 \\\\ \\sigma_2 = 1 \\\\ \\sigma_3 = 2 $ 3 5 2 200 $ \\mu_1 = ( -0.5 , \\,2 ) ^T \\\\ \\mu_2 = ( -1 , \\,4 ) ^T $ $ \\sigma_1 = 1.5 \\\\ \\sigma_2 = 1 $ 2 6 2 250 $ \\mu_1 = ( 1 , \\,1 ) ^T \\\\ \\mu_2 = ( 4 , \\,2.5 ) ^T \\\\ \\mu_3 = ( -1 , \\,3 ) ^T $ $ \\sigma_1 = 1.3 \\\\ \\sigma_2 = 0.8 $ 3 7 3 100 $ \\mu_1 = ( 0 , \\,0 , \\,0 ) ^T \\\\ \\mu_2 = ( 3 , \\,3 , \\,3 ) ^T $ $ \\sigma_1 = 1.5 \\\\ \\sigma_2 = 1 \\\\ \\sigma_3 = 2 $ 2 8 3 150 $ \\mu_1 = ( 4 , \\,4.5 , \\,3.7 ) ^T \\\\ \\mu_2 = ( 5.2 , \\,4.9 , \\,4.1 ) ^T \\\\ \\mu_3 = ( 2.2 , \\,3.9 , \\,3.8 ) ^T $ $ \\sigma_1 = 0.3 \\\\ \\sigma_2 = 0.5 \\\\ \\sigma_3 = 0.6 $ 3 9 2 250 $ \\mu_1 = ( 1.5 , \\,1 ) ^T \\\\ \\mu_2 = ( 3 , \\,2.7 ) ^T $ $ \\sigma_1 = 1 \\\\ \\sigma_2 = 1.2 $ 2 10 2 180 $ \\mu_1 = ( -0.9 , \\,2.7 ) ^T \\\\ \\mu_2 = ( 0 , \\ , -5 ) ^T \\\\ \\mu_3 = ( -1 , \\ , -1 ) ^T $ $ \\sigma_1 = 0.25 \\\\ \\sigma_2 = 2 $ 3 11 3 200 $ \\mu_1 = ( -1 , \\,2 , \\ , -3 ) ^T \\\\ \\mu_2 = ( 2 , \\ , -1 , \\,0 ) ^T $ $ \\sigma_1 = 0.75 \\\\ \\sigma_2 = 0.3 \\\\ \\sigma_3 = 1.6 $ 2 12 3 200 $ \\mu_1 = ( -1 , \\ , -1 , \\ , -1 ) ^T \\\\ \\mu_2 = ( 0 , \\,0 , \\,0 ) ^T \\\\ \\mu_3 = ( 2 , \\,2 , \\,2 ) ^T $ $ \\sigma_1 = 1 \\\\ \\sigma_2 = 0.5 \\\\ \\sigma_3 = 1 $ 3 Содержание отчёта courses/data_analysis_and_interpretation/task3.txt · ",
                "Практическая работа №4 : Исследование методов кластер-анализа  Курсы » Анализ и интерпретация данных » Практическая работа №4 : Исследование методов кластер-анализа courses : data_analysis_and_interpretation : task4 Table of Contents Практическая работа №4 : Исследование методов кластер-анализа Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №4 : Исследование методов кластер-анализа Цель работы Ознакомиться с методами кластер-анализа на основе языка R. Основные теоретические положения Термин кластерный анализ ( впервые понятие введено математиком Р. Трионом , 1939 ) в действительности включает в себя набор различных алгоритмов классификации . Общий вопрос , задаваемый исследователями во многих областях , состоит в том , как организовать наблюдаемые данные в наглядные структуры , т.е . развернуть таксономии . Например , биологи ставят цель разбить животных на различные виды , чтобы содержательно описать различия между ними . В соответствии с современной системой , принятой в биологии , человек принадлежит к приматам , млекопитающим , амниотам , позвоночным и животным . Заметьте , что в этой классификации , чем выше уровень агрегации , тем меньше сходства между членами в соответствующем классе . Человек имеет больше сходства с другими приматами ( т.е . с обезьянами ) , чем с « отдаленными » членами семейства млекопитающих ( например , собаками ) и т.д . Фактически , кластерный анализ является не столько обычным статистическим методом , сколько « набором » различных алгоритмов « распределения объектов по кластерам » . Существует точка зрения , что в отличие от многих других статистических процедур , методы кластерного анализа используются в большинстве случаев тогда , когда вы не имеете каких-либо априорных гипотез относительно классов , но все еще находитесь в описательной стадии исследования . Следует понимать , что кластерный анализ определяет « наиболее возможно значимое решение » . Деревья кластеризации . Назначение алгоритма построения деревьев кластеризации заключается в постепенном объединении объектов в достаточно большие кластеры , используя меры расстояния и сходства между объектами . На первом шаге каждый объект является кластером . При переходе к следующему шагу группы объектов объединяются в кластеры на основе меры расстояния и выбранного метода . На каждом следующем шаге процедура повторяется для наиболее « близких » друг к другу кластеров . Использующиеся меры расстояния между объектами : Евклидово расстояние : $ d ( x , \\ , y ) = \\|\\mathbf x + \\mathbf y\\| = \\sqrt { \\sum_i ( x_i - y_i ) ^2 } $ . Манхэттенское расстояние ( расстояние городских кварталов ) : $ d ( x , \\ , y ) = \\sum_i|x_i - y_i| $ . Расстояние Чебышева : $ d ( x , \\ , y ) = \\max|x_i - y_i| $ . Использующиеся способы объединения кластеров : Одиночная связь ( метод ближайшего соседа ) . В этом методе расстояние между двумя кластерами определяется расстоянием между двумя наиболее близкими объектами ( ближайшими соседями ) в различных кластерах ; Полная связь ( метод наиболее удаленных соседей ) . В этом методе расстояния между кластерами определяются наибольшим расстоянием между любыми двумя объектами в различных кластерах , то есть « наиболее удаленными соседями » . Невзвешенное попарное среднее . В этом методе расстояние между двумя различными кластерами вычисляется как среднее расстояние между всеми парами объектов в них . Метод Варда . Метод минимизирует сумму квадратов для любых двух ( гипотетических ) кластеров , которые могут быть сформированы на каждом шаге . Метод k-means ( k-средних ) . Предположим , уже имеются гипотезы относительно числа кластеров ( по наблюдениям или по переменным ) . Можно указать системе образовать ровно три кластера так , чтобы они были настолько различны , насколько это возможно . Это именно тот тип задач , которые решает алгоритм метода k-means . В общем случае метод k-means строит ровно k различных кластеров , расположенных на возможно больших расстояниях друг от друга . Постановка задачи Порядок выполнения работы Содержание отчёта courses/data_analysis_and_interpretation/task4.txt · ",
                "Практическая работа №5 : Исследование методов факторного анализа  Курсы » Анализ и интерпретация данных » Практическая работа №5 : Исследование методов факторного анализа courses : data_analysis_and_interpretation : task5 Table of Contents Практическая работа №5 : Исследование методов факторного анализа Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №5 : Исследование методов факторного анализа Цель работы Ознакомиться с методами факторного анализа на основе языка R. Основные теоретические положения Главными целями факторного анализа являются сокращение числа переменных ( редукция данных ) и определение структуры взаимосвязей между переменными , т.е . классификация переменных . Поэтому факторный анализ используется или как метод сокращения данных или как метод классификации . Предположим , что вы проводите ( до некоторой степени « глупое » ) исследование , в котором измеряете рост ста людей в дюймах и сантиметрах . Таким образом , у вас имеются две переменные . Если далее вы захотите исследовать , например , влияние различных пищевых добавок на рост , будете ли вы продолжать использовать обе переменные ? Вероятно , нет , т.к . рост является одной характеристикой человека , независимо от того , в каких единицах он измеряется . Теперь предположим , вы хотите измерить удовлетворенность людей жизнью , для чего составляете вопросник с различными пунктами ; среди других вопросов задаете следующие : удовлетворены ли люди своим хобби ( пункт 1 ) и как интенсивно они им занимаются ( пункт 2 ) . Результаты преобразуются так , что средние ответы ( например , для удовлетворенности ) соответствуют значению 100 , в то время как ниже и выше средних ответов расположены меньшие и большие значения , соответственно . Две переменные ( ответы на два разных пункта ) коррелированы между собой . Из высокой коррелированности двух этих переменных можно сделать вывод об избыточности двух пунктов опросника . Зависимость между переменными можно обнаружить с помощью диаграммы рассеяния . Полученная путем подгонки линия регрессии дает графическое представление зависимости . Если определить новую переменную на основе линии регрессии , изображенной на этой диаграмме , то такая переменная будет включить в себя наиболее существенные черты обеих переменных . Итак , фактически , вы сократили число переменных и заменили две одной . Отметим , что новый фактор ( переменная ) в действительности является линейной комбинацией двух исходных переменных . Пример , в котором две коррелированные переменные объединены в один фактор , показывает главную идею факторного анализа или , более точно , анализа главных компонент ( это различие будет обсуждаться позднее ) . Если пример с двумя переменными распространить на большее число переменных , то вычисления становятся сложнее , однако основной принцип представления двух или более зависимых переменных одним фактором остается в силе . В основном процедура выделения главных компонент подобна вращению , максимизирующему дисперсию ( варимакс ) исходного пространства переменных . Например , на диаграмме рассеяния вы можете рассматривать линию регрессии как ось X , повернув ее так , что она совпадает с прямой регрессии . Этот тип вращения называется вращением , максимизирующим дисперсию , так как критерий ( цель ) вращения заключается в максимизации дисперсии ( изменчивости ) « новой » переменной ( фактора ) и минимизации разброса вокруг нее . Напомним , что анализ главных компонент является методом сокращения или редукции данных , т.е . методом сокращения числа переменных . Возникает естественный вопрос : сколько факторов следует выделять ? Отметим , что в процессе последовательного выделения факторов они включают в себя все меньше и меньше изменчивости . Решение о том , когда следует остановить процедуру выделения факторов , главным образом зависит от точки зрения на то , что считать малой « случайной » изменчивостью . Это решение достаточно произвольно , однако имеются некоторые рекомендации , позволяющие рационально выбрать число факторов . Постановка задачи Порядок выполнения работы Содержание отчёта courses/data_analysis_and_interpretation/task5.txt · ",
                "Практическая работа №6 : Исследование методов многомерного шкалирования  Курсы » Анализ и интерпретация данных » Практическая работа №6 : Исследование методов многомерного шкалирования courses : data_analysis_and_interpretation : task6 Table of Contents Практическая работа №6 : Исследование методов многомерного шкалирования Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Содержание отчёта Практическая работа №6 : Исследование методов многомерного шкалирования Цель работы Ознакомиться с методами многомерного шкалирования на основе языка R. Основные теоретические положения Многомерное шкалирование ( МНШ ) можно рассматривать как альтернативу факторному анализу . Целью последнего , вообще говоря , является поиск и интерпретация « латентных ( т.е . непосредственно не наблюдаемых ) переменных » , дающих возможность пользователю объяснить сходства между объектами , заданными точками в исходном пространстве признаков . Для определенности и краткости , далее , как правило , будем говорить лишь о сходствах объектов , имея ввиду , что на практике это могут быть различия , расстояния или степени связи между ними . В факторном анализе сходства между объектами ( например , переменными ) выражаются с помощью матрицы ( таблицы ) коэффициентов корреляций . В методе МНШ дополнительно к корреляционным матрицам , в качестве исходных данных можно использовать произвольный тип матрицы сходства объектов . Таким образом , на входе всех алгоритмов МНШ используется матрица , элемент которой на пересечении её i-й строки и j-го столбца , содержит сведения о попарном сходстве анализируемых объектов ( объекта i и объекта j ) . На выходе алгоритма МНШ получаются числовые значения координат , которые приписываются каждому объекту в некоторой новой системе координат ( во « вспомогательных шкалах » , связанных с латентными переменными , откуда и название МНШ ) , причем размерность нового пространства признаков существенно меньше размерности исходного ( за это собственно и идет борьба ) . Логику МНШ можно проиллюстрировать на следующем простом примере . Предположим , что имеется матрица попарных расстояний ( т.е . сходства некоторых признаков ) между крупными американскими городами . Анализируя матрицу , стремятся расположить точки с координатами городов в двумерном пространстве ( на плоскости ) , максимально сохранив реальные расстояния между ними . Полученное размещение точек на плоскости впоследствии можно использовать в качестве приближенной географической карты США . В общем случае метод МНШ позволяет таким образом расположить « объекты » ( города в данном примере ) в пространстве некоторой небольшой размерности ( в данном случае она равна двум ) , чтобы достаточно адекватно воспроизвести наблюдаемые расстояния между ними . В результате можно « измерить » эти расстояния в терминах найденных латентных переменных . Так , в данном примере можно объяснить расстояния в терминах пары географических координат Север/Юг и Восток/Запад . Постановка задачи Порядок выполнения работы Содержание отчёта courses/data_analysis_and_interpretation/task6.txt · ",
                "Дополнительные задания  Курсы » Анализ и интерпретация данных » Дополнительные задания courses : data_analysis_and_interpretation : additional_task Дополнительные задания Перечень заданий Обзор методов DATA MINING : найти бесплатные приложения . Сделать пример использования Обзор методов многомерного шкалирования . Реализовать алгоритм Сэммона . Показать применение на модели данных , полученной с помощью PRTOOLS . Реализовать на MATLAB ( или любом другом удобном для вас языке программирования ) метод главных компонент для многомерного шкалирования данных в размерность 2 ( пример для данных IRIS ) . Реализовать на MATLAB ( или любом другом удобном для вас языке программирования ) алгоритм кластеризации АВП . Проверить на собственных данных . Провести в интернете обзор методов кластер анализа и реализовать 2 метода . Реализовать на MATLAB программу кластер-анализа с использованием toolbox STATS , подготовить описание возможностей STATS для задач АИД . Подготовить реферат по теме « Распознавание образов » . Привести примеры реализации алгоритмов . courses/data_analysis_and_interpretation/additional_task.txt · ",
                "✎ Анализ и интерпретация данных  Курсы » Анализ и интерпретация данных courses : data_analysis_and_interpretation : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Анализ и интерпретация данных ====== ===== Материалы ===== * [ [ lectures ] ] * [ [ materials ] ] * [ [ exam ] ] ===== Практические работы ===== * [ [ task1 ] ] * [ [ task2 ] ] * [ [ task3 ] ] * [ [ task4 ] ] * [ [ task5 ] ] * [ [ task6 ] ] ===== Разное ===== * [ [ additional_task ] ] ===== Списки групп ===== * [ [ https : //docs.google.com/spreadsheets/d/114Qbtla5waYL2n8yTMIkpC5Kbx6qATiNROLkDf9NW3Y/edit ? usp=sharing|2019 ( 4381 ) ] ] courses/data_analysis_and_interpretation/start.txt · ",
                "Анализ и интерпретация данных - Old revisions  Курсы » Анализ и интерпретация данных courses : data_analysis_and_interpretation : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Анализ и интерпретация данных ( external edit ) ( current ) 2019/11/20 09:58 Анализ и интерпретация данных – [ Практические работы ] andrey.suchkov +49 B 2019/11/20 09:57 Анализ и интерпретация данных – [ Разное ] andrey.suchkov -55 B 2019/11/20 09:57 Анализ и интерпретация данных – [ Списки групп ] andrey.suchkov +82 B 2019/11/20 09:55 Анализ и интерпретация данных – [ Списки групп ] andrey.suchkov -14 B 2019/11/20 09:55 Анализ и интерпретация данных – [ Списки групп ] andrey.suchkov +31 B 2019/11/20 09:54 Анализ и интерпретация данных – [ Списки групп ] andrey.suchkov +1 B 2019/11/20 09:54 Анализ и интерпретация данных – [ Списки групп ] andrey.suchkov +20 B 2019/09/26 17:11 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -341 B 2019/09/26 17:11 Анализ и интерпретация данных – ↷ Page moved and renamed from courses : data_analysis_and_interpretation to courses : data_analysis_and_interpretation : start andrey.suchkov +838 B 2019/07/12 19:26 Анализ и интерпретация данных – [ Практические работы ] andrey.suchkov -48 B 2019/07/02 09:56 Анализ и интерпретация данных – [ Материалы ] andrey.suchkov -3 B 2019/07/02 09:56 Анализ и интерпретация данных – [ Практические работы ] andrey.suchkov -1 B 2019/07/02 09:56 Анализ и интерпретация данных – [ Практические работы ] andrey.suchkov +1 B 2019/04/26 12:59 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2019/04/26 12:59 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2019/04/26 12:59 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2019/04/26 12:59 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2019/04/26 12:58 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2019/04/26 12:58 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B 2019/04/26 12:58 Анализ и интерпретация данных – ↷ Links adapted because of a move operation andrey.suchkov -1 B Show differences between selected revisions less recent > > courses/data_analysis_and_interpretation/start.txt · ",
                "Анализ и интерпретация данных - "
            ]
        },
        {
            "name": "Анализ, моделирование и оптимизация систем",
            "url": "/doku.php/courses:system_analysis_modeling_and_optimization:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Анализ , моделирование и оптимизация систем  Курсы » Анализ , моделирование и оптимизация систем courses : system_analysis_modeling_and_optimization : start Table of Contents Анализ , моделирование и оптимизация систем Материалы Практические работы Разное Анализ , моделирование и оптимизация систем Материалы Учебные материалы Практические работы Практическая работа №1 : Моделирование и исследование случайных величин и последовательностей Практическая работа №2 : Моделирование центра массового обслуживания Практическая работа №3 : Моделирование системы массового обслуживания с ограниченной очередью Практическая работа №4 : Планирование и проведение факторных экспериментов Практическая работа №5 : Структурная оптимизация многопроцессорной системы обработки данных Разное Индивидуальные домашние задания courses/system_analysis_modeling_and_optimization/start.txt · ",
                "Анализ , моделирование и оптимизация систем - ",
                "",
                "Учебные материалы  Курсы » Анализ , моделирование и оптимизация систем » Учебные материалы courses : system_analysis_modeling_and_optimization : materials Table of Contents Учебные материалы Список литературы Основная литература Дополнительная литература Методические пособия Для оформления практических работ Программное обеспечение Учебные материалы Список литературы Основная литература Советов Б. Я. , Яковле С. А. Моделирование систем . Учебник . – М. : Высшая школа , вып . 3 , 2001 . Романцев В. В. , Яковлев С. А. Моделирование систем массового обслуживания : учеб . пособие / СПб ГЭТУ ( ЛЭТИ ) , 1995 . Романцев В. В. Аналитические модели систем массового обслуживания : учеб . пособие / СПб ГЭТУ ( ЛЭТИ ) , 1998 . Ивченко Г. И. , Каштанов В. А. , Коваленко И. Н. Теория массового обслуживания . – М. : Высш . шк. , 1982 . Овчаров Л. А. Прикладные задачи теории массового обслуживания . – М. : Машиностроение , 1969 . Хинчин А. Я. Работы по математической теории массового обслуживания . – М. : Физматгиз , 1963 . Кофман А. , Крюон Р. Массовое обслуживание . Теория и приложения . – М. : Мир , 1965 . Основы теории вычислительных систем / Под ред . С. А. Майорова . – М. : Высш . шк. , 1978 . Дополнительная литература Волкова В. Н. , Козлова В. Н. Системный анализ и принятие решений . – М. : Высшая школа , 2004 . Лоу А. М. , Кельтон В. Д. Имитационное моделирование = Simulation modeling and analysis : переводное издание / 3-е изд . – СПб . : Питер ; Киев : BHV , 2004 . Методические пособия Анализ , моделирование и оптимизация систем . Основы теории систем и системного анализа Аналитические модели систем массового обслуживания : Учебное пособие Моделирование случайных векторов и процессов Для оформления практических работ Для корректного оформления отчётов в формате .ODT в LibreOffice необходимо установить шрифты Times New Roman и Courier New . Это можно сделать , прописав в консоли ( для Ubuntu ) следующую команду : sudo apt install ttf-mscorefonts-installer Требования к оформлению научно-технических отчётов ( Распоряжение от 09.11.2015 № 3003 ) Шаблон оформления практических работ ( формат .DOCX ) Шаблон оформления практических работ ( формат .ODT ) Программное обеспечение GPSS World Программа PL.EXE courses/system_analysis_modeling_and_optimization/materials.txt · ",
                "Практическая работа №1 : Моделирование и исследование случайных величин и последовательностей  Курсы » Анализ , моделирование и оптимизация систем » Практическая работа №1 : Моделирование и исследование случайных величин и последовательностей courses : system_analysis_modeling_and_optimization : task1 Table of Contents Практическая работа №1 : Моделирование и исследование случайных величин и последовательностей Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Пример выполнения задания Практическая работа №1 : Моделирование и исследование случайных величин и последовательностей Цель работы Напоминание свойств и способа построения случайной величины , освоение её моделирования . Основные теоретические положения Случайная величина – величина , которая в результате опыта может принять то или иное значение , причем неизвестно заранее , какое именно . Примеры случайных величин : число попаданий при трех выстрелах ; угол , под которым упадет подброшенная монетка . Случайная величина может быть дискретной или непрерывной . Дискретная случайная величина – случайная величина , которая принимает отдельные , изолированные возможные значения с определенными вероятностями . Законом распределения дискретной случайной величины называют соответствие между возможными значениями и их вероятностями ; его можно задать таблично , аналитически ( в виде формулы ) и графически . Пример : Вероятность , что на кубике выпадет число 1 : $ $ \\mathbb P ( A = 1 ) = \\frac16. $ $ Вероятность , что на кубике выпадет число 2 или 4 : $ $ \\mathbb P ( A = 2 \\lor A = 4 ) = \\frac16 + \\frac16 = \\frac13. $ $ Непрерывная случайная величина – случайная величина , которая может принимать все значения из некоторого конечного или бесконечного промежутка . В отличие от дискретных случайных величин вероятность отдельного значения для непрерывной случайной величины равна нулю ( так как множество возможных исходов бесконечно ) : $ $ \\mathbb P ( A = c ) = 0 , $ $ для любого $ c $ множества действительных чисел . Поэтому вводят вероятность случайной величины быть меньше указанного значения . Полученную функцию называют функцией распределения : $ $ F_A ( t ) = \\mathbb P ( A < t ) . $ $ Пример : Вероятность угадать загаданное вещественное число в интервале $ [ 0 , 1 ] $ равна 0 . Вероятность того , что загаданное вещественное число будет лежать в интервале $ [ 0 , t ] $ , $ t \\in ( 0 , 1 ) $ , если оно было загадано на интервале $ [ 0 , 1 ] $ , будет равна $ t $ . Над случайными величинами можно выполнять арифметические операции . Результатом такой операции будет новая случайная величина со своей функцией распределения . Дано : Случайная величина , и ее функция распределения : $ $ X \\sim F_X ( t ) . $ $ Другая случайная величина получена от первой воздействием некоторой функции : $ $ Y = g ( X ) . $ $ Найти : Функцию распределения случайной величины $ Y $ . Решение : По определению функция распределения случайной величины $ Y $ : $ $ F_Y ( t ) = \\mathbb P ( Y < t ) . $ $ По условию определено , каким образом связаны случайные величины $ X $ и $ Y $ , значит $ $ \\mathbb P ( Y < t ) = \\mathbb P ( g ( X ) < t ) . $ $ При взятии под скобками от обоих частей неравенства функцию , обратную $ g $ , неравенство не изменится . Следовательно , $ $ \\mathbb P ( g ( X ) < t ) = \\mathbb P ( X < g^ { -1 } ( t ) ) . $ $ Получена связь функций распределений двух случайных величин : $ $ F_Y ( t ) = F_X ( g^ { -1 } ( t ) ) . $ $ Постановка задачи Пользуясь датчиками , генерирующими последовательность случайных чисел , распределенных по равномерному закону , смоделировать : Случайную величину , распределенную по равномерному случайному закону на интервале $ [ 0 , \\alpha ] $ , где $ \\alpha $ – заданный параметр : Случайную величину , распределенную по показательному закону с параметром $ \\lambda $ : Случайную величину , распределенную по треугольному закону с параметрами $ a = 0 $ , $ b = \\beta $ , $ c = 0 $ , где $ \\beta $ – заданный параметр : У полученных случайных величин построить гистограммы , рассчитать математическое ожидание и дисперсию . Порядок выполнения работы Используя пакет GPSS или другие программные средства составить программу для исследования стандартных датчиков псевдослучайных ( далее случайных ) чисел с квазиравномерным ( далее равномерным ) , экспоненциальным и треугольным законами распределения . Оцениваемые параметры : математическое ожидание и СКО случайных чисел и качественная оценка плотности распределения . Выбрать объем выборки , исходя из заданной точности оценки математического ожидания и СКО , и провести моделирование . Варианты заданий № варианта Параметр $ \\alpha $ Параметр $ \\lambda $ Параметр $ \\beta $ 1 70 1/150 90 2 110 1/20 170 3 130 1/130 170 4 200 1/190 120 5 70 1/180 90 6 180 1/190 200 7 10 1/50 170 8 20 1/200 190 9 60 1/200 140 10 200 1/90 190 11 20 1/150 70 12 110 1/130 110 13 80 1/100 110 14 130 1/50 80 15 90 1/50 160 16 190 1/130 80 17 170 1/40 200 18 130 1/60 20 19 70 1/190 30 20 110 1/190 140 21 120 1/110 30 22 80 1/110 190 23 40 1/200 180 24 100 1/120 10 25 60 1/170 10 26 100 1/200 160 27 80 1/40 10 28 20 1/160 110 29 160 1/60 130 30 200 1/110 20 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Результаты моделирования с использованием программы . Необходимые рисунки и таблицы с краткими выводами . Общий вывод по проделанной работе . Код программы . Пример выполнения задания task1.GPS 10 SIMULATE 20 RMULT 15,900,28 30 GENERATE 1 40 E1 FVARIABLE -50 # LOG ( ( RN1+1 ) /1000 ) 50 E2 FVARIABLE ( RN2+1 ) 60 E3 FVARIABLE 300 # ( 1-1 # SQR ( ( RN3 ) /1000 ) ) 70 TAB1 TABLE V $ E1,50,50,20 80 TAB2 TABLE V $ E2,50,50,20 90 TAB3 TABLE V $ E3,50,50,20 100 TABULATE TAB4 110 TABULATE TAB3 120 TABULATE TAB2 130 TABULATE TAB1 140 TERMINATE 1 150 START 1000 courses/system_analysis_modeling_and_optimization/task1.txt · ",
                "Практическая работа №2 : Моделирование центра массового обслуживания  Курсы » Анализ , моделирование и оптимизация систем » Практическая работа №2 : Моделирование центра массового обслуживания courses : system_analysis_modeling_and_optimization : task2 Table of Contents Практическая работа №2 : Моделирование центра массового обслуживания Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Пример выполнения задания Практическая работа №2 : Моделирование центра массового обслуживания Цель работы Изучение модели обслуживания заявок с неограниченной очередью . Основные теоретические положения Дана следующая модель системы обслуживания , представленная на рис . 1 . Назовём потоком заявок ( обслуживания ) такой процесс , который генерирует ( обслуживает ) заявки в случайный момент времени . Соответственно , интенсивностью потока назовём среднее количество событий потока , происходящих в единицу времени . Пусть поток заявок имеет интенсивность , равную $ \\lambda $ , а поток обслуживания – $ \\mu $ , причём , $ \\mu > \\lambda $ . Приведённой интенсивностью $ \\rho $ назовём отношение интенсивностей потоков и заявок обслуживания : $ $ \\rho = \\frac { \\lambda } { \\mu } . $ $ Время нахождения заявки в системе складывается из времени ожидания в очереди и среднего времени обслуживания . Среднее время обслуживания одной заявки очевидно выражается через интенсивность потока обслуживания , а также через математическое ожидание случайной величины – времени , когда заявка в системе будет обработана : $ $ \\bar t_ { об } = \\frac1 { \\mu } = \\int\\limits_ { \\mathbb R } t \\cdot f ( t ) \\ , dt , $ $ где $ f ( t ) $ – плотность закона распределения случайной величины в потоке обслуживания . Отношение корня дисперсии времени обслуживания к его среднему называется коэффициентом вариации времени обслуживания : $ $ \\vartheta = \\frac { \\sigma_ { t_ { об } } } { \\bar t_ { об } } = \\frac1 { \\bar t_ { об } } \\sqrt { \\int_ { \\mathbb R } t^2 f ( t ) \\ , dt - \\bar t_ { об } ^2 } . $ $ С помощью этого коэффициента вариации можно теоретически рассчитать среднее число заявок в очереди и среднее время ожидания в очереди : $ $ \\bar r = \\frac { \\rho^2 ( 1 + \\vartheta^2 ) } { 2 ( 1 - \\rho ) } , $ $ $ $ \\bar t_ { ож } = \\frac { \\rho^2 ( 1 + \\vartheta^2 ) } { 2\\lambda ( 1 - \\rho ) } $ $ Очевидно , что среднее время ожидания в очереди может быть вычислено с помощью деления среднего числа заявок в очереди на среднюю скорость обработки ( интенсивность потока заявок $ \\lambda $ ) . Постановка задачи Необходимо смоделировать систему обслуживания заявок с неограниченной очередью с пуассоновским потоком заявок ( время отправки сообщения – случайная величина , распределенная по экспоненциальному закону ) и тремя различными потоками обслуживания ( время обслуживания – случайная величина , распределенная по равномерному , показательному или треугольному закону ) . Провести эксперимент и выяснить практические характеристики модели . Провести теоретический расчет этих параметров . Оценить результаты . Порядок выполнения работы Используя пакет GPSS составить программу и провести моделирование центра массового обслуживания ( ЦМО ) . Провести исследования для экспоненциального закона следования заявок на входе и трех законов распределения интервалов обслуживания ( равномерного , экспоненциального и треугольного ) . Для каждой пары законов распределения ( заявок и обслуживания ) провести исследование для двух значений приведенной интенсивности $ \\rho_1 $ , $ \\rho_2 $ , ( $ 0 < \\rho_i < 1 $ ) , а также для двух значений количества заявок $ N $ , проходящих через систему . Получить в результате моделирования основные характеристики ЦМО и оформить их в виде таблиц : максимальную длину очереди , QM ; среднюю длину очереди , QA ; число заявок , поступивших на обслуживание без очереди , QZ ; среднее время пребывания заявки в очереди , включая нулевые входы , QT ; среднее время пребывания заявки в очереди ( без нулевых входов ) , QX . Получить в результате моделирования характеристики по устройству : коэффициент загрузки , FR ; среднее время обслуживания заявки , FT. Получить таблицу значений количества заявок в зависимости от времени пребывания в очереди . Рассчитать теоретические значения основных характеристик ЦМО ( среднее время пребывания заявки в очереди , среднее время обслуживания заявки ) . Оценить время переходного процесса по полученным теоретическим и практическим значениям среднего времени пребывания заявки в очереди ( для этого провести больше опытов при разных $ N $ ) . Провести 10 экспериментов ( на одном наборе данных ) для экспоненциальных законов следования заявок на входе и обслуживания , рассчитать среднее время ожидания заявки в очереди и СКО . Сравнить теоретические и практические результаты ( объяснить и обосновать ) , рассчитав доверительные интервалы для исследуемых характеристик СМО . Варианты заданий № варианта Значение $ \\rho_i $ Значение $ N_i $ 1 0.50 0.70 1000 50000 2 0.55 0.90 1500 40000 3 0.45 0.80 2000 55000 4 0.40 0.75 1500 45000 5 0.45 0.85 1750 47500 6 0.40 0.70 1000 55000 7 0.50 0.65 2000 50000 8 0.60 0.80 1000 55000 9 0.60 0.85 1500 47500 10 0.55 0.75 1000 47500 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Результаты моделирования с использованием программы . Необходимые рисунки и таблицы с краткими выводами . Общий вывод по проделанной работе . Код программы . Пример выполнения задания task2.GPS 10 SIMULATE 15 RMULT 10 20 VAR1 FVARIABLE -10 # LOG ( ( RN1+1 ) /1000 ) 25 VAR2 FVARIABLE -8 # LOG ( ( RN1+1 ) /1000 ) 30 GENERATE V $ VAR1 42 STR1 STORAGE 3 45 GATE SNF STR1 , L1 50 ENTER STR1,1 60 SEIZE 1 75 ADVANCE V $ VAR2 80 LEAVE STR1,1 90 RELEASE 1 95 TRANSFER , L2 100 L1 SAVEVALUE 1+,1 120 L2 TERMINATE 1 125 START 10 140 SHOW X1 143 SHOW FT1 147 SHOW FR1 150 SHOW SM $ STR1 160 SHOW SA $ STR1 165 SHOW SC $ STR1 170 SHOW ST $ STR1 175 SHOW SR $ STR1 courses/system_analysis_modeling_and_optimization/task2.txt · ",
                "Практическая работа №3 : Моделирование системы массового обслуживания с ограниченной очередью  Курсы » Анализ , моделирование и оптимизация систем » Практическая работа №3 : Моделирование системы массового обслуживания с ограниченной очередью courses : system_analysis_modeling_and_optimization : task3 Table of Contents Практическая работа №3 : Моделирование системы массового обслуживания с ограниченной очередью Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Содержание отчёта Пример выполнения задания Практическая работа №3 : Моделирование системы массового обслуживания с ограниченной очередью Цель работы Изучение модели обслуживания заявок с ограниченной очередью . Основные теоретические положения Для модели с ограниченной очередью формулы , описывающие состояние модели , распространятся : добавляется параметр $ m $ – длина очереди . В системе появляется еще одно событие ( кроме поступления заявки в очередь и на обработку ) – отказ от приема заявки в очередь в силу переполнения этой очереди . Вероятность этого события можно рассчитать : \\ [ p_ { отк } = \\frac { 1 - \\rho } { 1 - \\rho^ { m+2 } } \\rho^ { m+1 } , \\ ] где $ \\rho $ – приведенная интенсивность . В случае ограниченной очереди формулы средней длины очереди и среднего времени ожидания заявки в очереди также распространяются и принимают вид : \\ [ \\bar r= \\frac { \\rho^2 ( 1 - \\rho^m ( m - m\\rho + 1 ) ) ( 1 + \\vartheta^2 ) } { 2 ( 1 - \\rho^ { m+2 } ) ( 1 - \\rho ) } , \\ ] \\ [ \\bar t_ { ож } = \\frac { \\rho^2 ( 1 - \\rho^m ( m - m\\rho + 1 ) ) ( 1 + \\vartheta^2 ) } { 2\\lambda ( 1 - \\rho^ { m+2 } ) ( 1 - \\rho ) } , \\ ] где $ \\vartheta $ – коэффициент вариации времени обслуживания . Легко заметить , что \\ [ \\lim\\limits_ { m \\to \\infty } \\bar r ( m ) = \\frac { \\rho^2 ( 1 + \\vartheta^2 ) } { 2 ( 1 - \\rho ) } , \\ ] \\ [ \\lim\\limits_ { m \\to \\infty } \\bar t_ { ож } ( m ) = \\frac { \\rho^2 ( 1 + \\vartheta^2 ) } { 2\\lambda ( 1 - \\rho ) } . \\ ] Постановка задачи Необходимо смоделировать систему обслуживания заявок с неограниченной очередью с пуассоновским потоком заявок ( время отправки сообщения – случайная величина , распределенная по экспоненциальному закону ) и тремя различными потоками обслуживания ( время обслуживания – случайная величина , распределенная по равномерному , показательному или треугольному закону ) . Провести эксперимент и выяснить практические характеристики модели . Провести теоретический расчет этих параметров . Оценить результаты . Порядок выполнения работы Модифицировать программу моделирования ЦМО , введя ограниченное число мест в очереди и предусмотрев возможность подсчета числа не обслуженных заявок . Количество мест в очереди выбрать в соответствии со значением средней длины очереди , полученного в результате выполнения практической работы №2 . Провести исследование характеристик СМО с ограниченным числом мест в очереди ( для одного из вариантов практической работы №2 ) , вычислить теоретические значения основных характеристик СМО , в том числе вероятности отказа , и сравнить теоретические и экспериментальные результаты , рассчитав доверительные интервалы для исследуемых характеристик СМО . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Результаты моделирования с использованием программы . Необходимые рисунки и таблицы с краткими выводами . Общий вывод по проделанной работе . Код программы . Пример выполнения задания task3.GPS 10 SIMULATE 15 RMULT 20 20 VAR1 FVARIABLE -20 # LOG ( ( RN1+1 ) /1000 ) 30 GENERATE V $ VAR1 40 VAR2 FVARIABLE -16 # LOG ( ( RN1+1 ) /1000 ) 42 STOR1 STORAGE 3 45 GATE SNF STOR1 , L1 50 ENTER STOR1,1 60 SEIZE 1 75 ADVANCE V $ VAR2 80 LEAVE STOR1,1 90 RELEASE 1 95 TRANSFER , L2 100 L1 SAVEVALUE 1+,1 120 L2 TERMINATE 1 125 START 1000000 140 SHOW X1 150 SHOW SM $ STOR1 160 SHOW SA $ STOR1 165 SHOW SC $ STOR1 170 SHOW ST $ STOR1 175 SHOW SR $ STOR1 180 SHOW FT1 190 SHOW FR1 courses/system_analysis_modeling_and_optimization/task3.txt · ",
                "Практическая работа №4 : Планирование и проведение факторных экспериментов  Курсы » Анализ , моделирование и оптимизация систем » Практическая работа №4 : Планирование и проведение факторных экспериментов courses : system_analysis_modeling_and_optimization : task4 Table of Contents Практическая работа №4 : Планирование и проведение факторных экспериментов Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Пункт 1 . Планирование Пункт 2 . Проведение . Основной эксперимент Пункт 3 . Обработка Содержание отчёта Практическая работа №4 : Планирование и проведение факторных экспериментов Цель работы Изучение способа построения и анализа полного факторного эксперимента . Основные теоретические положения Эксперимент – действие с системой , направленное на получение отклика с помощью входного воздействия . Планирование эксперимента – комплекс мероприятий , направленных на эффективную постановку опытов . Фактор эксперимента – один варьируемый параметр из входного воздействия . План – набор значений факторов . Область планирования – подпространство , из которого выбираются значения факторов . Модель системы – закон , по которому система обрабатывает входные воздействия . Пример системы , а также пример трёхфакторного плана эксперимента представлены на рис . 1 и 2 соответственно . Полный факторный эксперимент ( ПФЭ ) – совокупность нескольких измерений , удовлетворяющих следующим условиям : Количество измерений составляет $ N = 2^k $ , где $ k $ – количество факторов . Каждый фактор принимает только два значения – верхнее и нижнее . В процессе измерения верхние и нижние значения факторов комбинируются во всех возможных сочетаниях . В данной работе рассматривается полный двухфакторный эксперимент с линейной моделью системы ( нелинейная по факторам , линейная по параметрам ) : \\ [ Y = B_0 + B_1X_1 + B_2X_2 + B_ { 12 } X_1X_2 . \\ ] Оценить параметры модели можно , например , по методу наименьших квадратов , проведя достаточное ( не меньше , чем число оцениваемых параметров ) количество экспериментов . Постановка задачи Необходимо провести полнофакторный эксперимент по заданной области планирования с помощью программы PL.EXE . Получить результаты экспериментов и по ним оценить параметры системы и сделать выводы о воспроизводимости экспериментов и адекватности модели . Порядок выполнения работы Пункт 1 . Планирование Выбрать номер варианта , запомнить значения параметров . Установить область планирования , согласно выбранному заданию . Обратите внимание , что в варианте задания указываются значения $ [ X_ { \\min } , X_ { \\max } ] $ , а в этом пункте нужно задать область в виде $ X_0 \\pm \\Delta X $ ( вводимая область должна входить в область , указанную в варианте задания ) . Установить типа плана – Полный факторный эксперимент ( ПФЭ ) . Установить планирование . Для этого указать , сколько точек необходимо и достаточно использовать в ПФЭ для данной модели . Для установки плана необходимо использовать только числа $ \\pm1 $ , обозначающие положения точки ( левый верхний угол , правый нижний и так далее ) . Указать число опытов ( не менее 2 , не более 5 ) . Провести рандомизацию . Пункт 2 . Проведение . Основной эксперимент Следует указать точку , указанную вверху экрана согласно указанной ранее области планирования и самого плана . Эту операцию проделать 3 раза . Затем запомнить таблицу всех откликов системы . Пункт 3 . Обработка Подпункт 1 . Воспроизводимость Рассчитать средние и дисперсии для полученных значений отклика системы . Для этого использовать данные из таблицы , полученной в пункте 2 . Выполнить проверку воспроизводимости ( критерий Кохрена ) . Для получения справки воспользоваться справкой по умолчанию F1 . Подпункт 2 . Модель объекта Оценить параметры модели . Обратите внимание на справку , в которой указывается способ этой оценки . Определить значимость оценок . Критерий Стьюдента ( обратите внимание , что в критерии Стьюдента используется корень из дисперсии ) . Исключить незначимые параметры . Подпункт 3 . Адекватность Определить адекватность модели по критерию Фишера . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Пошаговые результаты полнофакторного эксперимента с использованием программы . Необходимые рисунки и таблицы с краткими выводами . Общий вывод по проделанной работе . Код программы . courses/system_analysis_modeling_and_optimization/task4.txt · ",
                "Практическая работа №5 : Структурная оптимизация многопроцессорной системы обработки данных  Курсы » Анализ , моделирование и оптимизация систем » Практическая работа №5 : Структурная оптимизация многопроцессорной системы обработки данных courses : system_analysis_modeling_and_optimization : task5 Table of Contents Практическая работа №5 : Структурная оптимизация многопроцессорной системы обработки данных Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Содержание отчёта Пример выполнения задания Практическая работа №5 : Структурная оптимизация многопроцессорной системы обработки данных Цель работы Освоение навыков распределения нагрузки в многопроцессорной вычислительной системе . Основные теоретические положения Многопроцессорная вычислительная система обработки данных ( МПСОД ) , состоящая из однотипных процессов , предназначена для решения заданного набора задач ( ЗНЗ ) обработки связанных между собой данных . Модель , описывающая информационные связи между задачами $ X_i $ , $ i = 1 .. m $ , задана в виде группы в ярусно-параллельной форме и представлена на рис . 1 . Время решения ЗНЗ при параллельно-последовательной обработке данных в МПСОД , как это следует из графа ( см . рис . 1 ) , ограничено сверху некоторыми пороговым критическим значением $ T_ { кр } $ и определяется длиной критического пути графа . Таким образом , оптимальное число процессов МПСОД можно определить из соотношения : \\ [ K_ { пр } \\leqslant \\left\\lceil\\frac { T_о } { T_ { кр } } \\right\\rceil , \\ ] где $ T_о $ – время решения ЗНЗ с использованием одного процессора : \\ [ T_о = \\sum\\limits_ { i=1 } ^m\\tau_i , \\ ] где $ \\tau_i $ – время решения $ i $ -ой задачи . Сложность и трудоемкость решения задач структурной оптимизации зависит от размерности графа ( числа вершин ) . В случае не высокой размерности может быть использован метод полного перебора путей в графе . При большом числе вершин графа используют , как правило , метод динамического программирования . Постановка задачи Определить оптимальное число процессов $ K_ { пр } $ для МПСОД , граф решения ЗНЗ которой приведен на рис . 1 , и построить график загрузки каждого процессора , чтобы достигнуть значения $ T_ { кр } $ . Значения $ \\tau_i $ , $ i = 1 .. m $ , выбираются студентами самостоятельно в диапазоне 10 ÷ 100 условных единиц . Порядок выполнения работы С помощью метода динамического программирования определить критическое значение $ T_ { кр } $ . Определить количество процессоров , необходимое для выполнения задач в многопроцессорной системе . Построить график загрузки всех процессоров , учитывая , что приступить к новой задаче можно только в том случае , если выполнены все работы , лежащие на пути к выбранной задаче . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Рассчёт оптимального числа процессов . График загрузки каждого процесса с пояснениями . Общий вывод по проделанной работе . Код программы . Пример выполнения задания Дана МПСОД , граф решения ЗНЗ которой приведен на рис . 2 . Очевидно , что критическим путем будет $ X_2 \\to X_3 \\to X_5 $ и $ $ T_ { кр } = 20 + 30 + 30 = 80 . $ $ Тогда оптимальное число процессоров в системе составит $ $ K_ { кр } = \\left\\lceil\\frac { T_о } { T_ { кр } } \\right\\rceil = \\left\\lceil\\frac { 10 + 30 + 20 + 20 + 10 + 30 } { 80 } \\right\\rceil = \\left\\lceil\\frac { 120 } { 80 } \\right\\rceil = 2 . $ $ График загрузки процессоров будет выглядеть следующим образом : Время Доступные задачи Процессор 1 Процессор 2 0-10 $ X_1 $ , $ X_2 $ $ X_2 $ $ X_1 $ 10-20 Простой процессора 20-30 $ X_3 $ , $ X_4 $ $ X_3 $ $ X_4 $ 30-40 Простой процессора 40-50 50-60 $ X_5 $ $ X_5 $ 60-70 70-80 courses/system_analysis_modeling_and_optimization/task5.txt · ",
                "Индивидуальные домашние задания  Курсы » Анализ , моделирование и оптимизация систем » Индивидуальные домашние задания courses : system_analysis_modeling_and_optimization : ihw Индивидуальные домашние задания Перечень заданий Сформулируйте сущность системного подхода в исследовании систем и стадии ( этапы ) системных исследований . Проведите сравнительный анализ основных характеристик аналитических и имитационных моделей . Приведите классификацию динамических моделей систем от размерности пространства состояний модели и вида задания времени ( непрерывное , дискретное ) . Приведите аналитические модели для определения вероятности состояний в непрерывных Марковских цепях . Приведите аналитическую модель рекуррентного потока Пальма и вывод плотности распределения интервалов смены состояний в простейшем потоке . Сформулируйте основные свойства простейшего потока и приведите выражения для Пуассоновского потока . Используя метод обратной функции , приведите аналитические модели для простейшего потока и потока с треугольным законом распределения интервалов смены состояний . Постройте граф состояний одноканальной СМО с отказами и приведите аналитическую модель для расчёта вероятностей состояний . Приведите аналитические модели для расчёта характеристик одноканальной СМО с отказами . Постройте граф состояний многоканальной СМО с отказами и приведите аналитическую модель для расчёта вероятностей состояний . Приведите аналитические модели для расчёта характеристик многоканальных СМО с отказами . Постройте граф состояний одноканальной СМО с бесконечной очередью и приведите аналитическую модель для расчёта вероятностей состояний . Приведите аналитические модели для расчёта характеристик одноканальной СМО с бесконечной очередью . С использованием аналитических моделей проведите исследование условий достижения равновесного состояния в СМО . Постройте граф состояний одноканальной СМО с ограниченной очередью и приведите аналитические модели для расчёта характеристик СМО . Постройте граф состояний многоканальной СМО с очередью и приведите аналитические модели для расчёта характеристик СМО . Постройте граф состояний многоканальной СМО с очередью и « нетерпеливыми заявками » . Постройте граф состояний замкнутой многоканальной СМО с очередью и сформулируйте подход к анализу характеристик СМО . Проведите анализ влияния потоков « непуассоновского типа » на характеристики СМО . Оцените влияние закона распределения интервалов смены состояний в обслуживании для СМО с очередью . Приведите объяснение степени влияния закона в обслуживании при переходе от показательного закона к треугольному и равномерному . Приведите модель двухмерного случайного вектора с использованием метода условного распределения . Приведите модель многомерного случайного вектора с использованием метода линейного преобразования . Приведите модель одномерного случайного процесса с использованием метода « скользящего суммирования » . Приведите модель случайного поля с использованием метода « скользящего суммирования » . Приведите основные этапы и особенности реализации тактического планирования машинного эксперимента . Приведите основные этапы и особенности реализации стратегического планирования машинного эксперимента . Проведите обзор средств моделирования дискретных систем . Проведите обзор средств моделирования непрерывных систем . Приведите основные методы многокритериальной оптимизации систем . Приведите основные этапы и особенности реализации метода анализа иерархий . courses/system_analysis_modeling_and_optimization/ihw.txt · ",
                "✎ Анализ , моделирование и оптимизация систем  Курсы » Анализ , моделирование и оптимизация систем courses : system_analysis_modeling_and_optimization : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Анализ , моделирование и оптимизация систем ====== ===== Материалы ===== * [ [ materials ] ] ===== Практические работы ===== * [ [ task1 ] ] * [ [ task2 ] ] * [ [ task3 ] ] * [ [ task4 ] ] * [ [ task5 ] ] ===== Разное ===== * [ [ ihw ] ] courses/system_analysis_modeling_and_optimization/start.txt · ",
                "Анализ , моделирование и оптимизация систем - Old revisions  Курсы » Анализ , моделирование и оптимизация систем courses : system_analysis_modeling_and_optimization : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Анализ , моделирование и оптимизация систем ( external edit ) ( current ) 2019/09/26 17:13 Анализ , моделирование и оптимизация систем – ↷ Links adapted because of a move operation andrey.suchkov -301 B 2019/09/26 17:13 Анализ , моделирование и оптимизация систем – ↷ Page moved and renamed from courses : system_analysis_modeling_and_optimization to courses : system_analysis_modeling_and_optimization : start andrey.suchkov +616 B 2019/07/02 09:57 Анализ , моделирование и оптимизация систем – [ Разное ] andrey.suchkov -1 B 2019/07/02 09:57 Анализ , моделирование и оптимизация систем – [ Практические работы ] andrey.suchkov -5 B 2019/07/02 09:57 Анализ , моделирование и оптимизация систем – [ Материалы ] andrey.suchkov -1 B 2019/07/02 09:56 Анализ , моделирование и оптимизация систем – [ Разное ] andrey.suchkov -6 B 2019/07/02 09:55 Анализ , моделирование и оптимизация систем – [ Практические работы ] andrey.suchkov -30 B 2019/07/02 09:55 Анализ , моделирование и оптимизация систем – [ Материалы ] andrey.suchkov -6 B 2019/06/30 11:33 Анализ , моделирование и оптимизация систем – ↷ Links adapted because of a move operation andrey.suchkov +4 B 2019/06/30 11:28 Анализ , моделирование и оптимизация систем andrey.suchkov +99 B 2019/06/29 13:59 Анализ , моделирование и оптимизация систем – [ Анализ , моделирование и оптимизация систем ] andrey.suchkov +99 B 2019/05/31 17:31 Анализ , моделирование и оптимизация систем andrey.suchkov +366 B 2019/05/31 16:10 Анализ , моделирование и оптимизация систем andrey.suchkov +3 B 2019/05/31 16:03 Анализ , моделирование и оптимизация систем – created andrey.suchkov +94 B Show differences between selected revisions courses/system_analysis_modeling_and_optimization/start.txt · ",
                "Анализ , моделирование и оптимизация систем - "
            ]
        },
        {
            "name": "Программные средства разработки систем искусственного интеллекта",
            "url": "/doku.php/courses:dev_ai",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Программные средства разработки систем искусственного интеллекта  Курсы » Программные средства разработки систем искусственного интеллекта courses : dev_ai Table of Contents Программные средства разработки систем искусственного интеллекта Расписание занятий Базы знаний и упраление правилами Семантические данные и хранилища семантических данных Семантический мета-майнинг Лабораторные работы Семантические данные и семантический мета-майнинг Правила аттестации Аттестационная ведомость Программные средства разработки систем искусственного интеллекта Расписание занятий Занятия по пятницам , четные недели . Начало - 17:20 Тема : Программные средства разработки ИИ ВНИМАНИЕ ! ! ! С 12 ноября подключаться следует по новой ссылке : Подключиться к конференции Zoom https : //us04web.zoom.us/j/6213641232 ? pwd=bjVFLytsSGl6UFU4VUNpSVBOUmpWdz09 Идентификатор конференции : 621 364 1232 Код доступа : 5cueLf Данная конференция имеет ограничение по времени - 40 минут , поэтому следует переподключаться каждые 40 минут занятия по той же ссылке . Базы знаний и упраление правилами Презентация лекции : knowledge_base_rule_engine.pdf Учебные материалы ( текст лекции ) : the_text_of_knowledge_base.pdf Семантические данные и хранилища семантических данных Презентация лекции : swmantic_data_pptx_final.pdf Учебные материалы ( текст лекции ) : semantic_data_final.pdf Семантический мета-майнинг Презентация лекции : semantic_meta_mining.pdf Учебные материалы ( текст лекции ) : the_text_of_semantic_meta_mining.pdf Лабораторные работы Семантические данные и семантический мета-майнинг Лабораторная работа №1 : task-1.pdf Лабораторная работа №2 : task-2.pdf Правила аттестации Правила аттестации : attestation_rules_aitools_v1.pdf Аттестационная ведомость Ссылка на ведомость : https : //docs.google.com/spreadsheets/d/1q6DliMXdrEhg5p5ahePhUbQ3IIXIcGPYoogjDnQPMhk/edit ? usp=sharing courses/dev_ai.txt · ",
                "Программные средства разработки систем искусственного интеллекта - ",
                "",
                "✎ Программные средства разработки систем искусственного интеллекта  Курсы » Программные средства разработки систем искусственного интеллекта courses : dev_ai This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Программные средства разработки систем искусственного интеллекта ====== ===== Расписание занятий ===== Занятия по пятницам , четные недели . Начало - 17:20 Тема : Программные средства разработки ИИ ВНИМАНИЕ ! ! ! С 12 ноября подключаться следует по новой ссылке : Подключиться к конференции Zoom https : //us04web.zoom.us/j/6213641232 ? pwd=bjVFLytsSGl6UFU4VUNpSVBOUmpWdz09 Идентификатор конференции : 621 364 1232 Код доступа : 5cueLf Данная конференция имеет ограничение по времени - 40 минут , поэтому следует переподключаться каждые 40 минут занятия по той же ссылке . ===== Базы знаний и упраление правилами ===== Презентация лекции : { { : courses : smart_data : knowledge_base_rule_engine.pdf | } } Учебные материалы ( текст лекции ) : { { : courses : smart_data : the_text_of_knowledge_base.pdf | } } ===== Семантические данные и хранилища семантических данных ===== Презентация лекции : { { : courses : ml : swmantic_data_pptx_final.pdf | } } Учебные материалы ( текст лекции ) : { { : courses : ml : semantic_data_final.pdf | } } ===== Семантический мета-майнинг ===== Презентация лекции : { { : courses : smart_data : semantic_meta_mining.pdf | } } Учебные материалы ( текст лекции ) : { { : courses : smart_data : the_text_of_semantic_meta_mining.pdf | } } ====== Лабораторные работы ====== ===== Семантические данные и семантический мета-майнинг ===== Лабораторная работа №1 : { { : courses : smart_data : task-1.pdf | } } Лабораторная работа №2 : { { : courses : smart_data : task-2.pdf | } } ====== Правила аттестации ====== Правила аттестации : { { : courses : smart_data : attestation_rules_aitools_v1.pdf | } } ====== Аттестационная ведомость ====== Ссылка на ведомость : https : //docs.google.com/spreadsheets/d/1q6DliMXdrEhg5p5ahePhUbQ3IIXIcGPYoogjDnQPMhk/edit ? usp=sharing courses/dev_ai.txt · ",
                "Программные средства разработки систем искусственного интеллекта - Old revisions  Курсы » Программные средства разработки систем искусственного интеллекта courses : dev_ai Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Программные средства разработки систем искусственного интеллекта ( external edit ) ( current ) 2021/10/22 12:10 Программные средства разработки систем искусственного интеллекта i.a.kulikov -11 B 2021/10/22 12:09 Программные средства разработки систем искусственного интеллекта i.a.kulikov +151 B 2021/10/08 15:49 Программные средства разработки систем искусственного интеллекта i.a.kulikov -65 B 2021/10/08 15:44 Программные средства разработки систем искусственного интеллекта i.a.kulikov -34 B 2021/10/08 11:09 Программные средства разработки систем искусственного интеллекта i.a.kulikov +4 B 2021/10/08 11:05 Программные средства разработки систем искусственного интеллекта i.a.kulikov +533 B 2021/10/08 11:03 Программные средства разработки систем искусственного интеллекта i.a.kulikov +97 B 2021/10/08 11:02 Программные средства разработки систем искусственного интеллекта i.a.kulikov +51 B 2021/09/30 21:30 Программные средства разработки систем искусственного интеллекта i.a.kulikov +271 B 2021/09/30 21:29 Программные средства разработки систем искусственного интеллекта i.a.kulikov +996 B 2021/09/30 16:35 Программные средства разработки систем искусственного интеллекта – created mark +139 B Show differences between selected revisions courses/dev_ai.txt · ",
                "Программные средства разработки систем искусственного интеллекта - "
            ]
        },
        {
            "name": "Управление промышленной разработкой ПО",
            "url": "/doku.php/courses:mse:start",
            "date": "\"2024/02/12 11:09\"",
            "data": []
        },
        {
            "name": "Нейронные сети (магистратура) для групп 2024 года",
            "url": "/doku.php/courses:artificial_neural_networks_masters",
            "date": "\"2024/02/21 19:48\"",
            "data": [
                "Нейронные сети ( магистратура ) для групп 2024 года  Курсы » Нейронные сети ( магистратура ) для групп 2024 года courses : artificial_neural_networks_masters Table of Contents Нейронные сети ( магистратура ) для групп 2024 года Рейтинговая система Рейтинг Подготовка докладов Лабораторные работы Индивидуальные задания Лекции Расписание для сдачи лабораторных работ Расписание семинаров ( при желании студента и готовности презентации ) Расписание лекций Дополнительные материалы Список источников Нейронные сети ( магистратура ) для групп 2024 года Ссылка на видеовстречу : https : //telemost.yandex.ru/j/58634122369202 Время : с 18:30 до 20:00 ( Europe/Moscow , GMT+03:00 ) каждую 2-ю неделю ( среда ) Посещаемость лекций ( заполняет Алексей ) : https : //docs.google.com/spreadsheets/d/1H635O0wIF9DkPZ5vv3kcjNvKkZHgsc0N Рейтинговая система Правила и описание рейтинговой системы от 2023 Рейтинг 9304 9306 9310 ( прошл . год ) Подготовка докладов Требования к докладу Лабораторные работы Зависимости для лаб . работ Лабораторная работа №1 - Многоклассовая классификация цветов Лабораторная работа №2 - Бинарная классификация отраженных сигналов радара Лабораторная работа №3 - Регрессионная модель изменения цен на дома в Бостоне Лабораторная работа №4 - Распознавание рукописных символов Лабораторная работа №5 - Распознавание объектов на фотографиях Лабораторная работа №6 - Прогноз успеха фильмов по обзорам Лабораторная работа №7 - Классификация обзоров фильмов Лабораторная работа №8 - Генерация текста на основе “ Алисы в стране чудес ” Индивидуальные задания Задачи Таблица для выбора ИДЗ Лекции Образец с прошлого ( 2023 ) года Посещение 8310 ( редактор только Слепов Артем ) Посещение 8306 ( редактор только Даниил Занин ) Посещение 8304 ( редактор только Абибулаев Эльдар ) Лекция 1 Лекция 2 Лекция 3 Лекция 4 Лекция 5 Лекция 6 Лекция 7 Расписание для сдачи лабораторных работ Лабораторные проводятся каждую неделю по средам в 10:00 дистанционно : Ссылка на Discord . Для получения роли студента необходимо изменить ник по формату < номер группы > < фамилия > < имя > ( кириллицей ) . Сроки сдачи лаб . работ на максимальный балл . Ссылка на загрузку отчетов . Отчет необходимо присылать за день до защиты до 12:00 ( вторник 12:00 ) . Лаб . работа №1 - 21 февраля 2024 Лаб . работа №2 - 6 марта 2024 Лаб . работа №3 - 20 марта 2024 Лаб . работа №4 - 3 апреля 2024 Лаб . работа №5 - 17 апреля 2024 Лаб . работа №6 - 1 мая 2024 ( будет скорректированно относительно праздничных дней ) Лаб . работа №7 - 15 мая 2024 Лаб . работа №8 - 29 мая 2024 Расписание семинаров ( при желании студента и готовности презентации ) Расписание семинаров ( по вторникам в 17:20 ) : Ссылка Zoom для семинаров 1 раз в 2 недели во вторник , по 24 мая 2022 ( 8 семинаров ) 15 февраля 2022 в 17:20 1 марта 2022 в 17:20 15 марта 2022 в 17:20 29 марта 2022 в 17:20 12 апреля 2022 в 17:20 26 апреля 2022 в 17:20 10 мая 2022 в 17:20 24 мая 2022 в 17:20 Расписание лекций Расписание лекций ( по вторникам в 19:00 ) : 1 раз в 2 недели во вторник , по 24 мая 2022 ( 8 лекций ) 15 февраля 2022 в 19:00 1 марта 2022 в 19:00 15 марта 2022 в 19:00 29 марта 2022 в 19:00 12 апреля 2022 в 19:00 26 апреля 2022 в 19:00 10 мая 2022 в 19:00 24 мая 2022 в 19:00 Внимание ! Старая ссылка на Zoom больше не используется . Новая Единая ссылка на Zoom для проведения лекций от кафедры МО ЭВМ . Дополнительные материалы Материалы 1-го семинара История Нейронных сетей : Ссылка для скачивания на Google.Drive Материалы 2-го семинара Материалы о доказательстве сходимости алгоритмов обучения НС : * В.Д . Мазуров . Математические методы распознования образов Ссылка для скачивания на Google.Drive * К.В . Воронцов . Математические методы обучения по прецедентам ( теория обучения машин ) Ссылка для скачивания на Google.Drive Список источников Skansi Sandro Introduction to Deep Learning Rosebrock Adrian Deep Learning for Computer Vision with Python Гудфеллоу Ян Глубокое обучение Николенко Сергей Глубокое обучение Nielsen Michael Neural Networks and Deep Learning Molnar Christoph Interpretable Machine Learning Burkov Andriy The hundred-Page Machine Learning Book Trask Andrew Deep Learning Yaser Abu Mostafa Learning from Data Жерон Орельен Прикладное машинное обучение с помощью Scikit-Learn и TensorFlow Brownlee Jason Deep Learning With Python Chollet Francois Deep Learning with Python ЛЭТИ Цехановский , Жукова , Бутырский : Искусственные нейронные сети . Учебник Подробнее : https : //www.labirint.ru/books/906502/ ИСКУССТВЕННЫЕ НЕЙРОННЫЕ СЕТИ . Учебное пособие : https : //drive.google.com/file/d/1uC5Ip-K6dKTYoynzvTSOFryEqwCS_clU courses/artificial_neural_networks_masters.txt · ",
                "Нейронные сети ( магистратура ) для групп 2024 года - ",
                "",
                "✎ Нейронные сети ( магистратура ) для групп 2024 года  Курсы » Нейронные сети ( магистратура ) для групп 2024 года courses : artificial_neural_networks_masters This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Нейронные сети ( магистратура ) для групп 2024 года ====== Ссылка на видеовстречу : https : //telemost.yandex.ru/j/58634122369202 Время : с 18:30 до 20:00 ( Europe/Moscow , GMT+03:00 ) каждую 2-ю неделю ( среда ) Посещаемость лекций ( заполняет Алексей ) : https : //docs.google.com/spreadsheets/d/1H635O0wIF9DkPZ5vv3kcjNvKkZHgsc0N ===== Рейтинговая система ===== [ [ https : //drive.google.com/file/d/1u7qYfDfcPMytalIgf66_Mzcp5NTCnweJ|Правила и описание рейтинговой системы от 2023 ] ] ===== Рейтинг ===== [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vQkLKe4vw8SdT0vpbd-7nQQaLN8Qm8xmBG4Jg_zHtnyxY_g7SkF9eiw8Ptjn23JBGUBtmvAX6lplOlR/pubhtml|9304 ] ] [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vSiocOolPRtROxAavSpfSGdQl8EIdaIXu03U9mAN60TRRWlw63viqHSsgUJM40oXKQkikCtOHmRhjBG/pubhtml|9306 ] ] [ [ https : //docs.google.com/spreadsheets/d/e/2PACX-1vShyi1DZ35ckptzQWpSQ5skURa45vzMbmN6xuv6YwXkiAvEMiTXiQ-Zsbrak4XQYOyJBQGZuqocAcHS/pubhtml|9310 ] ] [ [ https : //docs.google.com/spreadsheets/d/1upR3klU2xB-rdKnCXHVmg1PEavwbyiir| ( прошл . год ) ] ] ===== Подготовка докладов ===== { { courses : artificial_neural_networks : doklad.pdf|Требования к докладу } } ===== Лабораторные работы ===== [ [ courses : artificial_neural_networks : dependency|Зависимости для лаб . работ ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vREMk4ojeBzQR_NuqT_zJkn-zjSwV-yuGOXlBaApqsBbcTYebg74Ms-wqMkhsMbwTYQ1uxqknI6xpq_/pub|Лабораторная работа №1 - Многоклассовая классификация цветов ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSZYJgAUu -- CTJ5pt0Esi2Wk9vVmBg1NL-rqixmcqgYPZz-5oluEJD70NMDPU5lDhv83s98Mm2ZtSQb/pub|Лабораторная работа №2 - Бинарная классификация отраженных сигналов радара ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vTOTGeUy9fZVR-cevkfWHZqkKbIOs8QnRkZRUaGABxUkE0wPVwTBLPoKUtujDyfSevvxuTsZjVGLdAV/pub|Лабораторная работа №3 - Регрессионная модель изменения цен на дома в Бостоне ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSUw9_xRrhJrH2BEafWobcdlyTq1WLmIVjucnnKTg6ohmZB8_dkSEQxiAgXEXUWwxqwoqXLanBs327q/pub|Лабораторная работа №4 - Распознавание рукописных символов ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vQfa8yw0p2GvgLD4kpCHfirSA2u7k96A7PiuvpKcWZjtA4yZuHBpUZPUi_HeKzA-DTk2k8IZSHY5j90/pub|Лабораторная работа №5 - Распознавание объектов на фотографиях ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSX7gKq1efcZ_AZa0h9cWj5RHb41WwXuBTVc5N3zUCJL3wwzTowfoUuu4c6bFJx_q6dvCanQ -- Uh00P/pub|Лабораторная работа №6 - Прогноз успеха фильмов по обзорам ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vSDiIYN79NzUl2vylMHPL6xItoTqK_QrB8yZ7_lOj796uLaKR5m5q8rp-DlJztZnP98o_iF9qDxWtHk/pub|Лабораторная работа №7 - Классификация обзоров фильмов ] ] [ [ https : //docs.google.com/document/d/e/2PACX-1vQ1MGH8NRw0nX0Y1DbRvga90CvQ3WzNdHKgWGv_-X0Jv53d54dBZWeasDMf-gLtU9PMmadBM61AI7-O/pub|Лабораторная работа №8 - Генерация текста на основе “ Алисы в стране чудес ” ] ] ===== Индивидуальные задания ===== [ [ https : //drive.google.com/file/d/1AVrcoft7O_1RgtcpJQpAZe-RvygKjw6o/view ? usp=sharing| Задачи ] ] [ [ https : //docs.google.com/spreadsheets/d/1rVf5t8Q_eV44pnQF3H8d9upypekUE0MRNWpL0yFhwFw/edit ? usp=sharing| Таблица для выбора ИДЗ ] ] ===== Лекции ===== Образец с прошлого ( 2023 ) года [ [ https : //docs.google.com/forms/d/e/1FAIpQLSfjJSjM-TSer-Dmjp0wL1N2XEQ7zccmc9OLDVXWsYi5tG__9g/viewform ? usp=sharing|Посещение 8310 ( редактор только Слепов Артем ) ] ] [ [ https : //docs.google.com/forms/d/e/1FAIpQLSfg4e5edY7-WyW1HTVDaGXjHztnWjMVdvgVTXyJT4HWri_bOQ/viewform ? usp=sharing|Посещение 8306 ( редактор только Даниил Занин ) ] ] [ [ https : //docs.google.com/forms/d/e/1FAIpQLSc3z1KvKuhG7WDzXYLnz4EepMrRUVwhynbaxl91FkUvta3PsQ/viewform ? usp=sharing|Посещение 8304 ( редактор только Абибулаев Эльдар ) ] ] { { courses : artificial_neural_networks : :lecture_1.pdf|Лекция 1 } } { { courses : artificial_neural_networks : :lecture_2.pdf|Лекция 2 } } { { courses : artificial_neural_networks : :lecture_3.pdf|Лекция 3 } } { { courses : artificial_neural_networks : :lecture_4.pdf|Лекция 4 } } { { courses : artificial_neural_networks : :lecture_5.pdf|Лекция 5 } } { { courses : artificial_neural_networks : :lecture_6.pdf|Лекция 6 } } { { courses : artificial_neural_networks : :lecture_7.pdf|Лекция 7 } } -- -- ===== Расписание для сдачи лабораторных работ ===== Лабораторные проводятся каждую неделю по средам в 10:00 дистанционно : [ [ https : //discord.gg/WJ8BussZSm|Ссылка на Discord . ] ] Для получения роли студента необходимо изменить ник по формату < номер группы > < фамилия > < имя > ( кириллицей ) . Сроки сдачи лаб . работ на максимальный балл . [ [ https : //forms.gle/7G8K1jyKpYfneP2R8|Ссылка на загрузку отчетов ] ] . Отчет необходимо присылать за день до защиты до 12:00 ( вторник 12:00 ) . Лаб . работа №1 - 21 февраля 2024 Лаб . работа №2 - 6 марта 2024 Лаб . работа №3 - 20 марта 2024 Лаб . работа №4 - 3 апреля 2024 Лаб . работа №5 - 17 апреля 2024 Лаб . работа №6 - 1 мая 2024 ( будет скорректированно относительно праздничных дней ) Лаб . работа №7 - 15 мая 2024 Лаб . работа №8 - 29 мая 2024 ===== Расписание семинаров ( при желании студента и готовности презентации ) ===== Расписание семинаров ( по вторникам в 17:20 ) : [ [ https : //us04web.zoom.us/j/73966598763 ? pwd=MzF4RWFiMTRoZ1hHUTN4aUM4VzcxUT09|Ссылка Zoom для семинаров ] ] 1 раз в 2 недели во вторник , по 24 мая 2022 ( 8 семинаров ) 15 февраля 2022 в 17:20 1 марта 2022 в 17:20 15 марта 2022 в 17:20 29 марта 2022 в 17:20 12 апреля 2022 в 17:20 26 апреля 2022 в 17:20 10 мая 2022 в 17:20 24 мая 2022 в 17:20 ===== Расписание лекций ===== Расписание лекций ( по вторникам в 19:00 ) : 1 раз в 2 недели во вторник , по 24 мая 2022 ( 8 лекций ) 15 февраля 2022 в 19:00 1 марта 2022 в 19:00 15 марта 2022 в 19:00 29 марта 2022 в 19:00 12 апреля 2022 в 19:00 26 апреля 2022 в 19:00 10 мая 2022 в 19:00 24 мая 2022 в 19:00 < note tip > //Внимание ! Старая < del > [ [ https : //us04web.zoom.us/j/75279656346 ? pwd=WUNtZzdCZ3pyMUVYMUhUaVFHSlk1dz09|ссылка на Zoom ] ] < /del > больше не используется.// -- -- Новая [ [ https : //zoom.us/j/99909419865 ? pwd=ZXFpWFVwUzlmbkxMWFU3RXE2ZEdqdz09|Единая ссылка на Zoom ] ] для проведения лекций от кафедры МО ЭВМ . : ! : -- -- < /note > ===== Дополнительные материалы ===== -- -- Материалы 1-го семинара История Нейронных сетей : [ [ https : //drive.google.com/file/d/1zhgZ1MRPB70yJ1Q5-mgZRyfDFkQ1Q5bX/view ? usp=sharing|Ссылка для скачивания на Google.Drive ] ] -- -- Материалы 2-го семинара * * Материалы о доказательстве сходимости алгоритмов обучения НС : * * * В.Д . Мазуров . Математические методы распознования образов [ [ https : //drive.google.com/file/d/1N46xc1RGMEpS9Tj5hp6R5cksIBdyx6hf/view ? usp=sharing|Ссылка для скачивания на Google.Drive ] ] * К.В . Воронцов . Математические методы обучения по прецедентам ( теория обучения машин ) [ [ https : //drive.google.com/file/d/12qEVbt-QsFBm62aRI-QVaaVwgN7Mzcp3/view ? usp=sharing|Ссылка для скачивания на Google.Drive ] ] -- -- ===== Список источников ===== -- -- * //Skansi Sandro// Introduction to Deep Learning * //Rosebrock Adrian// Deep Learning for Computer Vision with Python * //Гудфеллоу Ян// Глубокое обучение * //Николенко Сергей// Глубокое обучение * //Nielsen Michael// Neural Networks and Deep Learning * //Molnar Christoph// Interpretable Machine Learning * //Burkov Andriy// The hundred-Page Machine Learning Book * //Trask Andrew// Deep Learning * //Yaser Abu Mostafa// Learning from Data * //Жерон Орельен// Прикладное машинное обучение с помощью Scikit-Learn и TensorFlow * //Brownlee Jason// Deep Learning With Python * //Chollet Francois// Deep Learning with Python -- -- * * ЛЭТИ * * * Цехановский , Жукова , Бутырский : Искусственные нейронные сети . Учебник Подробнее : https : //www.labirint.ru/books/906502/ * ИСКУССТВЕННЫЕ НЕЙРОННЫЕ СЕТИ . Учебное пособие : https : //drive.google.com/file/d/1uC5Ip-K6dKTYoynzvTSOFryEqwCS_clU courses/artificial_neural_networks_masters.txt · ",
                "Нейронные сети ( магистратура ) для групп 2024 года - Old revisions  Курсы » Нейронные сети ( магистратура ) для групп 2024 года courses : artificial_neural_networks_masters Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/02/21 19:48 Нейронные сети ( магистратура ) для групп 2024 года – [ Нейронные сети ( магистратура ) для групп 2024 года ] alexey.subbotin -11 B ( current ) 2024/02/21 03:31 Нейронные сети ( магистратура ) для групп 2024 года – [ Нейронные сети ( магистратура ) для групп 2024 года ] alexey.subbotin +14 B 2024/02/18 09:58 Нейронные сети ( магистратура ) для групп 2024 года – [ Нейронные сети ( магистратура ) для групп 2024 года ] alexey.subbotin -63 B 2024/02/18 09:56 Нейронные сети ( магистратура ) для групп 2024 года – [ Лекции ] alexey.subbotin +52 B 2024/02/18 09:49 Нейронные сети ( магистратура ) для групп 2024 года – [ Нейронные сети ( магистратура ) для групп 2024 года ] alexey.subbotin +222 B 2024/02/12 07:16 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov +134 B 2024/02/11 10:30 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov -220 B 2024/02/07 15:33 Нейронные сети ( магистратура ) для групп 2024 года – [ Нейронные сети ( магистратура ) для групп 8304 , 8306 и 8310 , 2023 года ] alexey.subbotin +159 B 2023/02/21 11:51 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov +207 B 2023/02/18 08:10 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov +196 B 2023/02/18 08:06 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov +146 B 2023/02/11 12:35 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov +146 B 2023/02/10 16:12 Нейронные сети ( магистратура ) для групп 2024 года – [ Список источников ] alexey.subbotin +13 B 2023/02/10 16:11 Нейронные сети ( магистратура ) для групп 2024 года – [ Список источников ] alexey.subbotin +6 B 2023/02/10 16:11 Нейронные сети ( магистратура ) для групп 2024 года – [ Список источников ] alexey.subbotin +349 B 2023/02/09 08:59 Нейронные сети ( магистратура ) для групп 2024 года timur.zhangirov -477 B 2023/02/08 15:17 Нейронные сети ( магистратура ) для групп 2024 года – [ Лекции ] alexey.subbotin +34 B 2023/02/08 15:16 Нейронные сети ( магистратура ) для групп 2024 года – [ Рейтинговая система ] alexey.subbotin -17 B 2023/02/08 15:14 Нейронные сети ( магистратура ) для групп 2024 года – [ Рейтинг ] alexey.subbotin -55 B 2023/02/08 15:13 Нейронные сети ( магистратура ) для групп 2024 года – [ Рейтинговая система ] alexey.subbotin ±0 B 2023/02/08 15:12 Нейронные сети ( магистратура ) для групп 2024 года – [ Нейронные сети ( магистратура ) для групп 7304 и 7307 , 2022 года ] alexey.subbotin ±0 B Show differences between selected revisions less recent > > courses/artificial_neural_networks_masters.txt · ",
                "Нейронные сети ( магистратура ) для групп 2024 года - "
            ]
        },
        {
            "name": "blockchain",
            "url": "/doku.php/courses:blockchain",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "courses : blockchain  Курсы » blockchain courses : blockchain Ссылка на Zoom для лекций Теория Сравнение классической blockchain-системы и dag/hashgraph-системы . Доклад , схемы примеры систем , как реализовано ( например , bitcoin vs iota ) Обзоры наиболее популярных типов систем распределенного реестра : bitcoin , Ethererum/quorum , hyperledger ( разные типы : fabric , iroha , итд ) , corda ( не совсем блокчейн-система , но решает те же задачи ) , polkadot , выбрать любую другую из современных Рассказ о современной инфраструктуре организации криптовалютных систем ( обменники , миксеры , биржи , оракулы , итд ) Типы консенсусов , где как работает . Практика Ethereum/Quorum - развернуть dev-ноду , разработать смарт-контракт , выбрав применение Ethereum/Quorum - разработать listener Ethereum/Quorum - разработать Оракул Hyperledger - развернуть тестовую сеть , разработать chaincode и инвокер , настроить blockchain explorer Hyperledger - развернуть тестовую сеть , разработать blockListener , chaincode и инвокер , настроить blockchain explorer Hyperledger - развернуть тестовую сеть , поднять контракт , используя playground Bitcoin - поднять полную ноду IBM Bluemix Blockchain - поднять тестовую сеть , разработать простой контракт , используя playground Microsoft Azure Blockchain - поднять тестовую сеть , разработать простой контракт , используя playground Разработать на Ethereum/Quorum алгоритм типа фильтра Блюма Разработать собственную реализацию простого блокчейна без смарт-контрактов , язык - на выбор : Java , Python , Rust , Go , C++ Возможно как использования личного компъютера так и платформы , типа IBM Bluemix Blockchain https : //www.ibm.com/products/blockchain-platform/demos/use-cases ( см так же исходники на github , типа https : //github.com/IBM/Create-BlockchainNetwork-IBPV20 ) MS Azure Blockchain https : //azure.microsoft.com/en-us/services/blockchain-service/ # features https : //docs.microsoft.com/ru-ru/azure/blockchain/service/create-member ( 3,4,5 , 10 , 11 - самые сложные , 8-9 - самые простые ) courses/blockchain.txt · ",
                "courses : blockchain - ",
                "",
                "✎ courses : blockchain  Курсы » blockchain courses : blockchain This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . [ [ https : //zoom.us/j/99909419865 ? pwd=ZXFpWFVwUzlmbkxMWFU3RXE2ZEdqdz09 # success|Ссылка на Zoom для лекций ] ] Теория - Сравнение классической blockchain-системы и dag/hashgraph-системы . Доклад , схемы примеры систем , как реализовано ( например , bitcoin vs iota ) - Обзоры наиболее популярных типов систем распределенного реестра : bitcoin , Ethererum/quorum , hyperledger ( разные типы : fabric , iroha , итд ) , corda ( не совсем блокчейн-система , но решает те же задачи ) , polkadot , выбрать любую другую из современных - Рассказ о современной инфраструктуре организации криптовалютных систем ( обменники , миксеры , биржи , оракулы , итд ) - Типы консенсусов , где как работает . Практика - Ethereum/Quorum - развернуть dev-ноду , разработать смарт-контракт , выбрав применение - Ethereum/Quorum - разработать listener - Ethereum/Quorum - разработать Оракул - Hyperledger - развернуть тестовую сеть , разработать chaincode и инвокер , настроить blockchain explorer - Hyperledger - развернуть тестовую сеть , разработать blockListener , chaincode и инвокер , настроить blockchain explorer - Hyperledger - развернуть тестовую сеть , поднять контракт , используя playground - Bitcoin - поднять полную ноду - IBM Bluemix Blockchain - поднять тестовую сеть , разработать простой контракт , используя playground - Microsoft Azure Blockchain - поднять тестовую сеть , разработать простой контракт , используя playground - Разработать на Ethereum/Quorum алгоритм типа фильтра Блюма - Разработать собственную реализацию простого блокчейна без смарт-контрактов , язык - на выбор : Java , Python , Rust , Go , C++ Возможно как использования личного компъютера так и платформы , типа IBM Bluemix Blockchain https : //www.ibm.com/products/blockchain-platform/demos/use-cases ( см так же исходники на github , типа https : //github.com/IBM/Create-BlockchainNetwork-IBPV20 ) MS Azure Blockchain https : //azure.microsoft.com/en-us/services/blockchain-service/ # features https : //docs.microsoft.com/ru-ru/azure/blockchain/service/create-member ( 3,4,5 , 10 , 11 - самые сложные , 8-9 - самые простые ) courses/blockchain.txt · ",
                "courses : blockchain - Old revisions  Курсы » blockchain courses : blockchain Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 courses : blockchain ( external edit ) ( current ) 2021/04/10 21:10 courses : blockchain nataly.zhukova +2.8 KB 2021/04/10 21:07 courses : blockchain nataly.zhukova -123 B 2021/04/10 21:06 courses : blockchain nataly.zhukova +93 B 2021/04/10 21:05 courses : blockchain nataly.zhukova +78 B 2021/04/10 21:05 courses : blockchain nataly.zhukova +107 B 2021/04/02 11:31 courses : blockchain – created mark +31 B Show differences between selected revisions courses/blockchain.txt · ",
                "courses : blockchain - "
            ]
        },
        {
            "name": "Обучение с подкреплением",
            "url": "/doku.php/courses:reinforcement_learning",
            "date": "\"2023/02/13 06:36\"",
            "data": [
                "Обучение с подкреплением  Курсы » Обучение с подкреплением courses : reinforcement_learning Table of Contents Обучение с подкреплением Расписание занятий Правила аттестации Правила выполнения ИДЗ Аттестационная ведомость Учебные материалы Презентации лекций Лабораторные работы Обучение с подкреплением Расписание занятий Занятия по понедельникам . Начало - 09:50 Тема : Обучение с подкреплением Подключиться к конференции Zoom https : //us04web.zoom.us/j/6213641232 ? pwd=bjVFLytsSGl6UFU4VUNpSVBOUmpWdz09 Идентификатор конференции : 621 364 1232 Код доступа : 5cueLf Правила аттестации Правила аттестации : Правила выполнения ИДЗ Правила выполнения ИДЗ : Аттестационная ведомость Ссылка на ведомость : https : //docs.google.com/spreadsheets/d/1L0wqOFHYFm-TnKddLc-0_NLGRJ2rrgY_ahprTwXZyE8/edit ? usp=sharing Учебные материалы Базовый учебник : обучение_с_подкреплением_введение.pdf Презентации лекций Лекция № 1 : rl-l1.pdf Лабораторные работы Лабораторная работа №1 : rl_lr_1_v1.pdf Лабораторная работа №2 : rl_lr_2_v1.pdf Лабораторная работа №3 : rl_lr_3_v1.pdf Лабораторная работа №4 : rl_lr_4_v1.pdf Лабораторная работа №5 : rl_lr_5_v1.pdf Лабораторная работа №6 : rl_lr_6_v1.pdf Лабораторная работа №7 : rl_lr_7_v1.pdf Лабораторная работа №8 : rl_lr_8_v1.pdf Лабораторная работа №9 : rl_lr_9_v1.pdf Лабораторная работа №10 : rl_lr_10_v1.pdf courses/reinforcement_learning.txt · ",
                "Обучение с подкреплением - ",
                "",
                "✎ Обучение с подкреплением  Курсы » Обучение с подкреплением courses : reinforcement_learning This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Обучение с подкреплением ====== ===== Расписание занятий ===== Занятия по понедельникам . Начало - 09:50 Тема : Обучение с подкреплением Подключиться к конференции Zoom https : //us04web.zoom.us/j/6213641232 ? pwd=bjVFLytsSGl6UFU4VUNpSVBOUmpWdz09 Идентификатор конференции : 621 364 1232 Код доступа : 5cueLf ===== Правила аттестации ===== Правила аттестации : ===== Правила выполнения ИДЗ ===== Правила выполнения ИДЗ : ===== Аттестационная ведомость ===== Ссылка на ведомость : https : //docs.google.com/spreadsheets/d/1L0wqOFHYFm-TnKddLc-0_NLGRJ2rrgY_ahprTwXZyE8/edit ? usp=sharing ===== Учебные материалы ===== Базовый учебник : { { : courses : ml : обучение_с_подкреплением_введение.pdf | } } ===== Презентации лекций ===== Лекция № 1 : { { : courses : ml : rl-l1.pdf | } } ===== Лабораторные работы ===== Лабораторная работа №1 : { { : courses : ml : rl_lr_1_v1.pdf | } } Лабораторная работа №2 : { { : courses : ml : rl_lr_2_v1.pdf | } } Лабораторная работа №3 : { { : courses : ml : rl_lr_3_v1.pdf | } } Лабораторная работа №4 : { { : courses : ml : rl_lr_4_v1.pdf | } } Лабораторная работа №5 : { { : courses : ml : rl_lr_5_v1.pdf | } } Лабораторная работа №6 : { { : courses : ml : rl_lr_6_v1.pdf | } } Лабораторная работа №7 : { { : courses : ml : rl_lr_7_v1.pdf | } } Лабораторная работа №8 : { { : courses : ml : rl_lr_8_v1.pdf | } } Лабораторная работа №9 : { { : courses : ml : rl_lr_9_v1.pdf | } } Лабораторная работа №10 : { { : courses : ml : rl_lr_10_v1.pdf | } } courses/reinforcement_learning.txt · ",
                "Обучение с подкреплением - Old revisions  Курсы » Обучение с подкреплением courses : reinforcement_learning Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/02/13 06:36 Обучение с подкреплением – [ Презентации лекций ] i.a.kulikov +28 B ( current ) 2023/02/13 06:32 Обучение с подкреплением – [ Учебные материалы ] i.a.kulikov +70 B 2023/02/13 06:31 Обучение с подкреплением – [ Правила аттестации ] i.a.kulikov -81 B 2023/02/11 20:07 Обучение с подкреплением – [ Расписание занятий ] i.a.kulikov -27 B 2023/02/11 13:34 Обучение с подкреплением – [ Расписание занятий ] i.a.kulikov +2 B 2022/12/10 09:08 Обучение с подкреплением – external edit 127.0.0.1 ±0 B 2022/03/20 20:52 Обучение с подкреплением i.a.kulikov +341 B 2022/02/22 14:46 Обучение с подкреплением i.a.kulikov +9 B 2022/02/22 14:46 Обучение с подкреплением i.a.kulikov +494 B 2022/02/22 14:45 Обучение с подкреплением i.a.kulikov +166 B 2022/02/22 14:41 Обучение с подкреплением i.a.kulikov +81 B 2022/02/22 14:38 Обучение с подкреплением i.a.kulikov +818 B 2022/02/10 14:41 Обучение с подкреплением – created mark +61 B Show differences between selected revisions courses/reinforcement_learning.txt · ",
                "Обучение с подкреплением - "
            ]
        },
        {
            "name": "Представление знаний и системы искусственного интеллекта",
            "url": "/doku.php/courses:knowledge_representation_and_artificial_intelligence_systems:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Представление знаний и системы искусственного интеллекта  Курсы » Представление знаний и системы искусственного интеллекта courses : knowledge_representation_and_artificial_intelligence_systems : start Table of Contents Представление знаний и системы искусственного интеллекта Материалы Лабораторные работы Представление знаний и системы искусственного интеллекта Материалы Учебные материалы Экзамен Лабораторные работы Лабораторная работа №1 : Изучение основных возможностей и базовых команд среды CLIPS Лабораторная работа №2 : Построение ЭС с использованием неупорядоченных фактов ( шаблонов ) и различных типов условных элементов в антецедентах правил Лабораторная работа №3 : Изучение стратегий разрешения конфликтов в продукционных системах Лабораторная работа №4 : Реализация поиска в пространстве состояний Лабораторная работа №5 : Исследование моделей планирования действий в системах искусственного интеллекта courses/knowledge_representation_and_artificial_intelligence_systems/start.txt · ",
                "Представление знаний и системы искусственного интеллекта - ",
                "",
                "Учебные материалы  Курсы » Представление знаний и системы искусственного интеллекта » Учебные материалы courses : knowledge_representation_and_artificial_intelligence_systems : materials Table of Contents Учебные материалы Список литературы Основная литература Дополнительная литература Лекции Для оформления лабораторных работ Программное обеспечение Учебные материалы Список литературы Основная литература Пантелеев М.Г. , Родионов С.В . Модели и средства построения экспертных систем : Учеб . пособие . СПб . : Изд-во СПбГЭТУ « ЛЭТИ » , 2003 . – 68с . Частиков А.П. , Гаврилова Т.А. , Белов Д.Л . Разработка экспертных систем . Среда CLIPS : Учеб . пособие . Практикум . – СПб , БХВ-Петербург , 2003 , 608 с. Рассел С. , Норвиг П. Искусственный интеллект : современный подход , 2-е изд . : Пер . с англ . – М. : Изд . дом « Вильямс » , 2006 г. , 1408 с. Дополнительная литература Гаврилова Т. А. , Хорошевский В. Ф. Базы знаний интеллектуальных систем . Учебник . – Изд-во « Питер » . Сер . Учебники для вузов , 2000 г. , 384 с. Джексон П. Введение в экспертные системы : Уч . пособие . – М. : Изд . дом « Вильямс » , 2001 . – 624 с. Осуга С. Обработка знаний . – М. : Мир , 1989 . - 292 с. Люгер Дж . Искусственный интеллект : стратегии и методы решения сложных проблем . – М. : Изд . дом « Вильямс » , 2003 г. , 864 с. Лекции Материалы лекций Для оформления лабораторных работ Для корректного оформления отчётов в формате .ODT в LibreOffice необходимо установить шрифты Times New Roman и Courier New . Это можно сделать , прописав в консоли ( для Ubuntu ) следующую команду : sudo apt install ttf-mscorefonts-installer Требования к оформлению научно-технических отчётов ( Распоряжение от 09.11.2015 № 3003 ) Шаблон оформления лабораторных работ ( формат .DOCX ) Шаблон оформления лабораторных работ ( формат .ODT ) Программное обеспечение CLIPS courses/knowledge_representation_and_artificial_intelligence_systems/materials.txt · ",
                "Экзамен  Курсы » Представление знаний и системы искусственного интеллекта » Экзамен courses : knowledge_representation_and_artificial_intelligence_systems : exam Экзамен Список экзаменационных вопросов Эволюция систем искусственного интеллекта . Понятие интеллектуального агента . Модели представления знаний . Синтаксис и семантика логики предикатов первого порядка . Достоинства и недостатки логической модели представления знаний . Правила построения формул в логике предикатов . Примеры . Логическое следование . Принцип дедукции . Логический вывод . Метод резолюций в логике предикатов первого порядка . Примеры . Продукционные системы . Основные определения . Достоинства и недостатки продукционных систем . Управление выводом в продукционных системах . Фреймы , как модель представления знаний . Структура фрейма . Типовые указатели наследования . Управление выводом во фреймовых системах . « Демоны » и присоединенные процедуры . Семантические сети . Структура и классификация семантических сетей . Достоинства и недостатки семантических сетей . Вывод на семантических сетях . Понятие экспертной системы . Обобщенная архитектура экспертной системы . Классы задач , в которых используются экспертные системы . Этапы разработки и стадии жизненного цикла экспертных систем . Программная среда разработки экспертных систем CLIPS : назначение и основные возможности . Базовые типы данных и представление фактов . Представление и обработка продукций в CLIPS . Условные элементы типа УЭ-образец . Представление и обработка продукций в CLIPS . Условные элементы типа УЭ-проверки , УЭ-И , УЭ-ИЛИ , УЭ-НЕ . Представление и обработка продукций в CLIPS . Условные элементы типа УЭ « существует » , УЭ « для всех » , логические УЭ . Базовый цикл работы МЛВ в системе CLIPS . Логический вывод в системе CLIPS . Стратегии разрешения конфликтов « вглубь » , « вширь » , « простоты » , « сложности » . Логический вывод в системе CLIPS . Стратегии разрешения конфликтов « LEX » , « МЕА » , случайного выбора . Поиск в пространстве состояний . Формальная постановка задачи . Обобщенный алгоритм поиска . Вершины дерева поиска и состояния пространства состояний поиска . Операции над каймой . Задача планирования . Язык описания состояний и действий . Планирование на основе поиска в пространстве состояний . Планирование с помощью пропозициональной логики . Планирование действий в реальном мире . courses/knowledge_representation_and_artificial_intelligence_systems/exam.txt · ",
                "Лабораторная работа №1 : Изучение основных возможностей и базовых команд среды CLIPS  Курсы » Представление знаний и системы искусственного интеллекта » Лабораторная работа №1 : Изучение основных возможностей и базовых команд среды CLIPS courses : knowledge_representation_and_artificial_intelligence_systems : lab1 Table of Contents Лабораторная работа №1 : Изучение основных возможностей и базовых команд среды CLIPS Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы 1 . Изучение базовых команд и конструкций CLIPS 2 . Разработка демонстрационной экспертной системы Содержание отчёта Пример выполнения задания Реализация ЭС в среде CLIPS Пакетный файл Лабораторная работа №1 : Изучение основных возможностей и базовых команд среды CLIPS Цель работы Изучение основных возможностей и базовых команд среды продукционного программирования CLIPS и освоение способов разработки экспертной системы . Основные теоретические положения Среда CLIPS ( C Language Integrated Production System ) предназначена для построения экспертных систем ( ЭС ) . Она поддерживает три основных способа представления знаний : продукционные правила для представления эвристических , основанных на опыте знаний ; функции для представления процедурных знаний ; объектно-ориентированное программирование . Среда загружается запуском файла clipswin.exe . Назначение основных пунктов меню оконного интерфейса ( версия 6.3 ) , используемых при выполнении данного цикла лабораторных работ представлено в таблице ниже . Пункт Подпункт « Горячие » клавиши Назначение команды File New ^N Вызов редактора Load ^L Загрузка конструкций из файла Load Batch - Исполнение пакетного файла Execution Reset ^E Инициализация конструкций Run ^R Запуск МЛВ Step ^T Выполнение одного шага вывода Window Facts Window - Активация окна списка фактов Agenda Window - Активация окна агенды Для сброса среды CLIPS в исходное состояние используется команда ( clear ) или соответствующий пункт меню Execution . Представление базовых типов данных . В CLIPS поддерживаются восемь простейших типов данных целые числа ( integer ) , числа с плавающей запятой ( float ) , символьный ( symbol ) , строковый ( string ) , внешний адрес ( external-address ) , адрес факта ( fact-address ) , имя экземпляра ( instance-name ) и адрес экземпляра ( instance-address ) . Примеры записи числовых типов приведены ниже : Целое : 237 , 15 , +12 , -32 . С плавающей запятой : 237e3 , 15.09 , +12.0 , -32.3e-7 . Символьный тип в CLIPS – любая последовательность символов , начинающаяся с отображаемого ASCII-символа и продолжающаяся до ограничителя . Ограничителем является любой неотображаемый ASCII-символ ( пробел , табуляция , возврат каретки , перевод строки ) , кавычка , открывающая и закрывающая скобки , амперсанд ( & ) , вертикальная черта ( | ) , знак « меньше » ( < ) и тильда ( ~ ) . Строковый тип – множество отображаемых символов , заключенных в кавычки . Например : “ abcd ” , “ fgs_85 ” , “ foo # ” , “ 13485 * a ” . Другие типы в данной работе не используются . Представление фактов и работа с ними . Факты являются одной из основных форм представления информации в CLIPS-системах и используются правилами для вывода новых фактов из имеющихся . Все текущие факты в CLIPS помещаются в список фактов ( fact-list ) . По формату представления в CLIPS выделяют два типа фактов : упорядоченные и неупорядоченные . В данной работе рассматриваются только упорядоченные факты . Упорядоченный факт состоит из заключенной в скобки последовательности одного или более полей , разделенных пробелами . Поля в неупорядоченном факте могут быть любыми простейшими типами данных ( за исключением первого поля , которое должно быть символьного типа ) . Первое поле упорядоченного факта специфицирует отношение , которое применяется к остальным полям факта . Например : ( высота 100 ) ; ( включен насос ) ; ( студент Сидоров_Сергей ) ; ( однокурсники Иванов Петров Сидоров ) ; ( отец Иван Петр ) . В последнем примере отношение является , некоммутативным , поэтому необходимо определить порядок аргументов , например « Иван является отцом Петра » . Для работы с фактами используются следующие команды : assert – добавляет факт в факт-список ; retract – удаляет факт из списка ; modify – модифицирует список ; duplicate – дублирует факт . Например команда ( assert ( length 150 ) ( width 15 ) ( weight `` big '' ) ) добавляет в список фактов три факта , каждый из которых состоит из двух полей . Эти команды могут использоваться в режиме взаимодействия с пользователем или при выполнении CLIPS-программы . Некоторые команды , такие как retract , modify и duplicate , требуют , чтобы факты были идентифицированы . Для этой цели используется либо индекс факта ( fact-index ) , либо адрес факта ( fact-address ) . Индекс факта – уникальный целочисленный индекс , приписываемый факту всякий раз , когда факт добавляется ( или модифицируется ) . Индекс факты начинаются с нуля и инкрементируются при каждом новом или измененном факте . Идентификатор факта ( fact identifier ) представляет собой краткую нотацию для отображения факта . Он состоит из символа “ f ” , за которым через тире следует индекс факта . Например , f-10 ссылается на факт с индексом 10 . Для задания исходного множества фактов используется конструкция deffacts , со следующим синтаксисом : ( deffacts < имя_группы_фактов > [ `` < комментарий > '' ] < факт > * ) где < имя_группы_фактов > – идентификатор символьного типа ; < комментарий > – необязательное поле комментария ; < факт > * – произвольная последовательность фактов , записанных через разделитель . Пример использования конструкции deffacts : ( deffacts startup `` Refrigerator Status '' ( refrigerator light on ) ( refrigerator door open ) ) Факты , определенные конструкцией deffacts добавляются в список фактов всякий раз при выполнении команды reset . Для задания правил используется конструкция defrule со следующим синтаксисом : ( defrule < имя_правила > [ `` < комментарий > '' ] [ < объявление > ] < условный элемент > * ; Левая часть правила ( антецедент ) = > < действие > * ) ; Правая часть правила ( консеквент ) где < имя_правила > – идентификатор символьного типа , уникальный для данной группы правил ; < комментарий > – необязательное поле комментария ; < условный элемент > * – произвольная последовательность условных элементов ; < действие > * – произвольная последовательность действий . Пример задания правила : ( defrule R1 `` Пример задания правила '' ( days 2 ) ( works 100 ) = > ( printout t crlf `` Свободного времени нет '' crlf ) ( assert ( freetime `` no '' ) ) ) Данное правило содержит в левой части два условных элемента ( упорядоченных факта ) , а в правой – команду printout вывода сообщения и команду assert добавления нового факта . В команде printout : t – параметр определяющий стандартный режим вывода , а – crlf символ возврата курсора и перевода его на новую строку . Постановка задачи Изучение базовых команд и конструкций CLIPS осуществляется посредством использования в среде CLIPS команд clear , reset , deffacts , defrule c пошаговой активизацией правил . Демонстрационная ЭС разрабатывается для предметной области , согласованной с преподавателем и производится ее тестирование на различных комбинациях входных значений в пошаговом режиме . Порядок выполнения работы 1 . Изучение базовых команд и конструкций CLIPS Запустить систему CLIPS ( файл clipswin.exe ) . Активизировать окно просмотра текущего списка фактов ( подпункт « Facts Window » пункта « Windows » главного меню ) . Выполнить следующую последовательность действий , фиксируя после каждого шага состояние списка фактов : сбросить систему в исходное состояние командой ( clear ) ; выполнить начальную установку командой ( reset ) или комбинацией клавиш ^E ; ввести 3 любых упорядоченных факта командой ( assert ) , например : ( assert ( n n ) ( m m ) ( p p ) ) ; повторно выполнить сброс командой ( reset ) ; установить 3 ранее вводимых упорядоченных факта в качестве исходных фактов , используя конструкцию ( deffacts ) ; выполнить сброс командой ( reset ) . Активизировать дополнительно окно просмотра агенды ( подпункт « Agenda Window » пункта « Windows » главного меню ) . Выполнить следующую последовательность действий , фиксируя после каждого шага состояния списка фактов и агенды : используя конструкцию ( defrule ) , ввести три правила , такие , что антецеденты первых двух правил сопоставляются с комбинацией фактов , заданных ранее конструкцией ( deffacts ) , а консеквенты этих правил добавляют новые факты , сопоставляемые с антецедентом третьего правила . Пусть , например , X , Y и Z – факты , заданные конструкцией ( deffacts ) . Тогда структура вводимых правил может быть представлена следующим образом : X & Y = > V ; Y & Z = > W ; V & W = > U ; выполнить по шагам активизацию правил ( используя « горячую » комбинацию ^T ) . 2 . Разработка демонстрационной экспертной системы Сформировать , пользуясь редактором CLIPS , базу знаний демонстрационной ЭС и сохранить ее в файле rulebase.CLP . Предметную область экспертной системы выбрать по согласованию с преподавателем . Общее количество правил в базе знаний ( БЗ ) должно быть не менее 25 . Количество значений переменных должно выбираться таким образом , чтобы БЗ отвечала требованию полноты , т.е . содержала правила , соответствующие любым сочетаниям значений переменных в левых частях правил . Например , если переменная « свободное время » имеет 3 значения ( « отсутствует » , « мало » и « много » ) , а переменная « погода » – 2 значения ( « плохая » и « хорошая » ) , то максимальное число правил для определения переменной « действие » будет равно 6 . В качестве примера , использовать фрагмент базы знаний , содержащийся в файле rulebase.CLP . Для активизации ЭС в среде CLIPS использовать пакетный файл run_lab1.BAT , который может быть запущен с использованием пункта « Load Batch » меню « File » . Оттестировать ЭС на различных комбинациях входных значений в пошаговом режиме . Продемонстрировать работу ЭС преподавателю . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Демонстрация работы базовых команд CLIPS . Структура ЭС . Демонстрация работы ЭС . Общий вывод по проделанной работе . Код программы . Пример выполнения задания Данная ЭС вырабатывает рекомендации студенту накануне зачета и имеет четыре входные переменные ( « число дней до зачета » , « количество несделанных лабораторных работ ( в % ) » , « температура на улице » и « наличие осадков » ) , две промежуточные ( « свободное время » и « погода » ) и выходную переменную ( « рекомендуемые действия » ) . Диаграмма зависимости переменных показана на рис . 1 , в скобках указаны возможные имена переменных . Реализация ЭС в среде CLIPS rulebase.CLP ( defrule data-input ( initial-fact ) = > ( printout t crlf `` Введите число дней до зачета ( целое значение ) : `` ) ( bind ? days ( read ) ) ( if ( numberp ? days ) then ( assert ( days ? days ) ) else ( printout t `` Введите число '' crlf ) ) ( printout t crlf `` Введите число несделаных лабораторных работ ( в % ) : `` ) ( bind ? works ( read ) ) ( assert ( works ? works ) ) ) ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ( defrule R1 ( days ? days ) ( works ? works ) ( test ( and ( = ? days 1 ) ( < > ? works 0 ) ) ) = > ( printout t crlf crlf `` Свободного времени нет ! '' crlf ) ( assert ( freetime `` no '' ) ) ) ( defrule R2 ( days ? days ) ( works ? works ) ( test ( and ( = ? days 2 ) ( > = ? works 10 ) ) ) = > ( printout t crlf crlf `` Свободного времени нет ! '' crlf ) ( assert ( freetime `` no '' ) ) ) ( defrule R3 ( days ? days ) ( works ? works ) ( test ( and ( = ? days 2 ) ( < ? works 10 ) ) ) = > ( printout t crlf crlf `` Свободного времени мало ! '' crlf ) ( assert ( freetime `` a-little '' ) ) ) ( defrule R4 ( days ? days ) ( works ? works ) ( test ( and ( = ? days 3 ) ( > ? works 25 ) ) ) = > ( printout t crlf crlf `` Свободного времени нет ! '' crlf ) ( assert ( freetime `` no '' ) ) ) ; RULE : R5 ; IF : days = 3 AND works < = 25 AND works > 10 ; THEN : fretim = `` little '' ; RULE : R6 ; IF : days = 3 AND works < = 10 ; THEN : fretim = `` many '' ; RULE : R7 ; IF : days = 4 AND works < 25 ; THEN : fretim = `` many '' ; RULE : R8 ; IF : days = 4 AND works > = 25 AND works < 75 ; THEN : fretim = `` little '' ; RULE : R9 ; IF : days = 4 AND works > = 75 ; THEN : fretim = `` no '' ; RULE : R10 ; IF : days = 5 AND works < 60 ; THEN : fretim = `` many '' ; RULE : R11 ; IF : days = 5 AND works > = 60 AND works < 90 ; THEN : fretim = `` little '' ; RULE : R12 ; IF : days = 5 AND works > = 90 ; THEN : fretim = `` no '' ; RULE : R13 ; IF : days > 5 ; THEN : fretim = `` many '' Пакетный файл run_lab1.BAT ; Данный файл загружает базу знаний , ; инициализирует среду и запускает ЭС ( load rulebase.CLP ) ( reset ) ( run ) courses/knowledge_representation_and_artificial_intelligence_systems/lab1.txt · ",
                "Лабораторная работа №2 : Построение ЭС с использованием неупорядоченных фактов ( шаблонов ) и различных типов условных элементов в антецедентах правил  Курсы » Представление знаний и системы искусственного интеллекта » Лабораторная работа №2 : Построение ЭС с использованием неупорядоченных фактов ( шаблонов ) и различных типов условных элементов в антецедентах правил courses : knowledge_representation_and_artificial_intelligence_systems : lab2 Table of Contents Лабораторная работа №2 : Построение ЭС с использованием неупорядоченных фактов ( шаблонов ) и различных типов условных элементов в антецедентах правил Цель работы Основные теоретические положения Постановка задачи Типы и допустимые значения для слотов Порядок выполнения работы Варианты заданий Таблица 1 Таблица 2 Таблица 3 Таблица 4 Содержание отчёта Пример выполнения задания Лабораторная работа №2 : Построение ЭС с использованием неупорядоченных фактов ( шаблонов ) и различных типов условных элементов в антецедентах правил Цель работы Изучение примеров программирования экспертной системы с использованием неупорядоченных фактов ( шаблонов ) и различных типов условных элементов в антецедентах правил . Основные теоретические положения Неупорядоченные факты представляют собой список взаимосвязанных именованных полей , называемых слотами . Наличие имен полей позволяет осуществлять доступ к полям по именам , в отличие от упорядоченных фактов , где поля специфицируются своим местоположением в факте . Существует два типа слотов : одиночные и мультислоты . Одиночный слот ( или просто слот ) содержит единственное поле , тогда как мультислот может содержать любое число полей . Для спецификации состава неупорядоченных фактов ( содержащихся в них слотов ) используются шаблоны , которые задаются конструкцией deftemplate . Синтаксис конструкции deftemplate определен ниже : ( deftemplate < имя шаблона > [ `` < комментарий > '' ] < определение слота-1 > ... < определение слота-N > ) Пример шаблона , содержащего три одиночных слота представлен ниже : ( deftemplate object `` Шаблон объекта '' ( slot name ) ( slot location ) ( slot weight ) ) Пример конкретного неупорядоченного факта на основе данного шаблона представлен ниже : ( object ( name table ) ( location `` room '' ) ( weight 15 ) ) Синтаксис антецедентов правил . Антецедент правила состоит из последовательности условных элементов – УЭ ( conditional elements – CEs ) , которые должны удовлетворяться , чтобы правило было помещено в агенду . В CLIPS используется шесть основных типов условных элементов : УЭ на основе образца , УЭ-проверка , УЭ « И » , УЭ « ИЛИ » , УЭ « НЕ » , УЭ « существует » , УЭ « для всех » , логические УЭ . Ниже рассмотрены наиболее часто используемые типы условных элементов , необходимые для выполнения данной лабораторной работы . УЭ на основе образца ( УЭ-образец ) – основной и чаще всего используемый тип условного элемента . Он состоит из совокупности ограничений на поля , масок полей ( wildcards ) и переменных , используемых в качестве ограничений для фактов и объектов , которые сопоставляются с образцом условного элемента . УЭ-образец удовлетворяется каждой сущностью , которая удовлетворяет его ограничениям . Ограничение на поле представляет собой в общем случае совокупность ограничений , которые используются для проверки единственного поля или слота факта или объекта . Ограничение может состоять из единственного литерала или из нескольких связанных ограничений . Кроме литеральных ограничений , поддерживает три других типа ограничений : связанные ограничения ( connective constraints ) , предикатные ограничения и ограничения возвращаемым значением . Литеральное ограничение задает точное значение ( константу ) целого , вещественного , символьного или строкового типа , которое должно сопоставляться с полем . При работе с объектами литеральное ограничение задает имя экземпляра . УЭ-образец с литеральными ограничениями не содержит полей масок и переменных . Все ограничения литерального образца должны точно совпадать со всеми полями сопоставляемой сущности . Упорядоченный УЭ-образец , содержащий только литералы , имеет следующий синтаксис : ( < константа-1 > ... < константа-n > ) Пример : ( data 1 `` two '' ) УЭ-образец на основе шаблона , содержащий только литеральные ограничения , имеет следующий синтаксис : ( < имя шаблона > ( < имя слота-1 > < константа-1 > ) ... ( < имя слота-n > < константа-n > ) ) Пример литерального условного элемента для неупорядоченного факта : ( person ( name Bob ) ( age 20 ) ) . Маски полей ( wildcards ) используются в условных элементах для указания несущественности некоторого поля или группы полей , что позволяет игнорировать некоторые поля в процессе сопоставления . Считается , что маска сопоставляется с любым значением . Используются одно- и многоместные маски . Одноместная маска обозначаемая символом « ? » и сопоставляется с любым значением , занимающим точно одно поле в соответствующем месте сопоставляемой сущности . Многоместная маска обозначаемая парой символов « $ ? » и сопоставляется с любыми значениями , занимающими произвольное число полей в сопоставляемой сущности . Одно- и многоместные маски могут использоваться в одном образце в любых комбинациях . Не допускается использование многоместной маски в одноместном слоте ( содержащем единственное поле ) неупорядоченных фактов или объектов . Маски могут комбинироваться с литеральными ограничениями в одном УЭ . Пример . Образец ( data $ ? YELLOW $ ? ) будет сопоставляться со всеми упорядоченными фактами , содержащими в любом поле , кроме первого , символьное значение YELLOW . В частности , он будет сопоставляться со следующими фактами : ( data YELLOW blue red green ) ( data YELLOW red ) ( data red YELLOW ) ( data YELLOW ) ( data YELLOW data YELLOW ) Последний факт будет сопоставляться с образцом дважды , т.к . значение YELLOW содержится в нем два раза . Переменные используются для запоминания значений полей , чтобы их можно было использовать в дальнейшем в других условных элементах антецедента или в операторах консеквента правила . Таким образом , в отличие от масок , переменные позволяют « захватить » значения переменных , содержащихся в сопоставляемой сущности , для дальнейшего использования . Используются одно- и многоместные переменные со следующим синтаксисом : < одноместная переменная > : := ? < переменная > , < многоместная переменная > : := $ ? < переменная > , где < переменная > является символьным типом , но должна начинаться с буквенного символа . В имени переменой не допускается использование кавычек . При первом появлении переменная работает так же , как в маске , т.е . связывается с любым значением в данном поле ( ях ) . Последующие появления переменной требуют , чтобы поле сопоставлялось со связанным значением переменной . Имена переменных являются локальными в пределах каждого правила . Пример . Задано правило : ( defrule find-data ( data ? x $ ? y ? z ) = > ( printout t `` ? x = `` ? x `` : `` `` ? y = `` ? y `` : `` `` ? z = `` ? z crlf ) ) и следующее множество фактов : ( data 1 blue ) ( data 1 blue red ) ( data 1 blue red 6.9 ) Тогда при срабатывании правила будет выведен следующий результат : ? x = 1 : ? y = ( blue red ) : ? z = 6.9 ? x = 1 : ? y = ( blue ) : ? z = red ? x = 1 : ? y = ( ) : ? z = blue Ограничения со связками позволяют объединить несколько индивидуальных ограничений и переменных с помощью операций & ( и ) , | ( или ) , и ~ ( не ) . Старшинство операций обычное : ~ , & , | – по убыванию . Исключением является случай , когда первым ограничением является переменная , после которой следует связка & . В этом случае первая переменная трактуется как отдельное ограничение , которое также должно удовлетворяться . Например , ограничение ? x & red|blue трактуется как ? x & ( red|blue ) , а не как ( ? x & red ) |blue . Синтаксис ограничений со связками : < term-1 > & < term-2 > ... & < term-3 > , < term-1 > | < term-2 > ... | < term-3 > , ~ < term > , где < term > – одно- или многоместная переменная , константа или ограничение со связками . Примеры УЭ , содержащих ограничения со связками : ( data-A ~blue ) ( data-A ? x & ~green ) ( data-B ( value ~green|red ) ) ( data-B ( value ? x & ~red & ~green ) ) Предикатное ограничение используется в тех случаях , когда необходимо ограничить поле , основываясь на истинности некоторого булевого выражения . Для этого используется предикатная функция , возвращающая символьное значение FALSE в случае неудачи и другое значение , в случае успеха . Функция вызывается в процессе сопоставления с образцом . Если она возвращает значение FALSE , то ограничение не удовлетворяется , в противном случае – оно удовлетворяется . Предикатное ограничение задается с помощью символа « : » , за которым следует вызов предикатной функции . Предикатное ограничение может использоваться в конъюнкции с ограничением со связками , а также связанной переменной . В последнем случае переменная сначала связывается некоторым значением , а затем к ней применяется предикатное ограничение . В таком варианте предикатные ограничения часто применяются для проверки типов данных . При этом в качестве предикатных функций используются следующие встроенные функции CLIPS : ( numberp < выражение > ) – функция возвращает значение TRUE , если < выражение > имеет тип integer или float , в противном случае возвращается символ FALSE ; ( floatp < выражение > ) – функция возвращает значение TRUE , если < выражение > имеет тип float , в противном случае возвращается символ FALSE ; ( integerp < выражение > ) – функция возвращает значение TRUE , если < выражение > имеет тип integer , в противном случае возвращается символ FALSE ; ( lexemep < выражение > ) – функция возвращает значение TRUE , если < выражение > имеет тип symbol или string , в противном случае возвращается символ FALSE ; ( symbolp < выражение > ) – функция возвращает значение TRUE , если < выражение > имеет тип symbol , в противном случае возвращается символ FALSE ; ( stringp < выражение > ) – функция возвращает значение TRUE , если < выражение > имеет тип string и символ FALSE в противном случае . Примеры использования предикатных ограничений : ( data ? x & : ( numberp ? x ) ( data ? x & ~ : ( symbolp ? x ) ( data ? x & : ( > ? x ? y ) Ограничение возвращаемым значением использует в качестве ограничения поля значение , возвращаемое некоторой функцией , которая вызывается непосредственно из условного элемента . Возвращаемое значение должно быть одного из примитивных типов . Это значение подставляется непосредственно в образец на позицию , из которой была вызвана функция , как если бы оно было литеральным ограничением . При этом функция вычисляется каждый раз , когда проверяется ограничение . Данное ограничение , так же как функция сравнения , использует символ « = » . Пусть , например , в базе данных хранятся факты на основе следующего шаблона : ( deftemplate data ( slot x ) ( slot y ) ) Тогда следующий образец будет сопоставляться с фактами , у которых значение второго слота в два раза больше , чем первого : ( data ( x ? x ) ( y = ( * 2 ? x ) ) ) УЭ-проверка используется для оценки выражений в процессе сопоставления с образцом и имеет следующий синтаксис : ( test < вызов функции > ) УЭ-проверка удовлетворяется , если вызываемая в нем функция возвращает значение , отличное от FALSE , и не удовлетворяется в противном случае . Использование данного типа УЭ позволяет , в частности , проверять любые соотношения между значениями различных полей ( слотов ) фактов . Пример . В следующем правиле проверяется , что абсолютная разность между значениями фактов data и value не меньше трех : ( defrule example-1 ( data ? x ) ( value ? y ) ( test ( > = ( abs ( - ? y ? x ) ) 3 ) ) = > ... ) Постановка задачи Необходимо сформировать модельную базу данных с помощью команд deftemplate и deffacts . Далее используя только литеральные ограничения , составить правила для нахождения в БД фактов , удовлетворяющих заданным условиям . Применить УЭ-проверки в составленных правилах . Изменить сформированные правила путем добавления в антецеденты условных элементов с ограничением по возвращаемому значению . Типы и допустимые значения для слотов Имя слота Тип значения Допустимые значения name symbol любые имена age integer 17 – 22 year integer 2 – 5 spec string « hard » , « soft » , « ai » aver_mark float в интервале [ 3 ; 5 ] Порядок выполнения работы Сформировать базу данных , содержащую не менее десяти неупорядоченных фактов на основе следующего шаблона : ( deftemplate student ( slot name ) ; имя студента ( slot age ) ; возраст ( slot year ) ; год обучения ( курс ) ( slot spec ) ; специализация ( slot aver_mark ) ) ; средний балл Сохранить конструкции deftemplate и deffacts в файле . Составить в соответствии с вариантом задания правила , реализующие описанные ниже функции , с использованием заданных типов условных элементов . Правила , соответствующие различным пунктам задания , следует сохранять в разных файлах , чтобы демонстрировать их работу преподавателю по отдельности . Используя только литеральные ограничения , составить правила для нахождения в БД фактов , удовлетворяющих заданным в табл . 1 условиям , и выдачи соответствующих сообщений . Изменить сформированные в п. a. правила путем добавления в антецедент новых условий и изменения выводимых сообщений в соответствии с табл . 2 . При реализации новых УЭ использовать УЭ-проверки ( test-CE ) . Изменить сформированные в п. b. правила путем добавления в антецеденты предикатных условных элементов для проверки типов значений слотов в соответствии с табл . 3 . Изменить сформированные в п. c. правила путем добавления в антецеденты условных элементов с ограничением по возвращаемому значению . Условия ограничения для различных вариантов приведены в табл . 4 . Варианты заданий Таблица 1 № варианта Условие в антецеденте правила Сообщение , выводимое в консеквенте правила 1 Студент 2-го курса Студент 2-го курса < name > учится по специализации < spec > . 2 Возраст студента 20 лет Студент < name > учится на < year > курсе . 3 Специализация студента « ai » Студент < name > учится по специализации “ ai ” на < year > курсе . 4 Средний балл студента 4.0 Студент < name > учится на < year > курсе со средним баллом 4.0 . 5 Студент 5-го курса специализации « hard » Студент < name > учится на 5-м курсе , возраст < age > . 6 Возраст студента 18 лет Студент < name > имеет средний балл < aver_mark > . 7 Специализация студента « soft » Студент < name > учится по специализации “ soft ” на < year > курсе . 8 Средний балл студента 4.5 Студенту < name > < age > лет , он учится на < year > курсе . Таблица 2 № варианта Условие в антецеденте правила Сообщение , выводимое в консеквенте правила 1 Студент 2-го курса , средний балл не ниже 4.5 Студент < name > имеет средний балл < aver_mark > . 2 Возраст студента 20 лет , специализации « hard » или « soft » Студент < name > учится по специализации < spec > . 3 Специализация студента « ai » , возраст – не менее 20 лет Возраст студента < name > < age > лет . 4 Средний балл студента 4.0 , курс второй или четвертый Студент < name > учится на < year > курсе со средним баллом 4.0 . 5 Студент 5-го курса специализации « hard » , старше 19 лет Студент < name > учится на 5-м курсе , возраст < age > . 6 Возраст студента 18 лет , средний балл – выше 4.0 Студент < name > имеет средний балл < aver_mark > . 7 Специализация студента « soft » , не младше 4-го курса Студент < name > учится по специализации “ soft ” на < year > курсе . 8 Средний балл студента 4.5 , специализация – не « hard » Студенту < name > < age > лет , он учится по специализации < spec > . Таблица 3 № варианта Проверяемые значения Сообщение , выводимое в консеквенте правила 1 < year > , < aver_mark > Студент < name > : тип значения в слоте < year > – integer , а в слоте < aver_mark > – float . 2 < age > , < year > Студент < name > : типы значений в слотах < age > и < year > – integer . 3 < spec > , < aver_mark > Студент < name > : тип значения в слоте < spec > – string , а в слоте < aver_mark > – float . 4 < age > , < aver_mark > Студент < name > : тип значения в слоте < age > – integer , а в слоте < aver_mark > – float . 5 < year > , < spec > Студент < name > : тип значения в слоте < year > – integer , а в слоте < spec > – string . 6 < age > , < spec > Студент < name > : тип значения в слоте < age > – integer , а в слоте < spec > – string . 7 < name > , < aver_mark > Студент < name > : тип значения в слоте < name > – symbol , а в слоте < aver_mark > – float . 8 < spec > , < name > Студент < name > : тип значения в слоте < spec > – string , а в слоте < name > – symbol . Таблица 4 № варианта Условный элемент с ограничением по возвращаемому значению Сообщение , выводимое в консеквенте правила 1 Оканчивает университет в возрасте не старше 24 лет Студент < name > оканчивает университет в возрасте не старше 24 лет . 2 Поступил в университет в возрасте 17 лет Студент < name > поступил в университет в возрасте 17 лет . 3 Оканчивает университет в возрасте не младше 25 лет Студент < name > оканчивает университет в возрасте не младше 25 лет . 4 Поступил в университет в возрасте не старше 20 лет Студент < name > поступил в университет в возрасте не старше 20 лет . 5 Оканчивает университет в возрасте 22 лет Студент < name > оканчивает университет в возрасте 22 лет . 6 Поступил в университет в возрасте младше 19 лет Студент < name > поступил в университет в возрасте младше 19 лет . 7 Оканчивает университет в возрасте старше 22 лет Студент < name > оканчивает университет в возрасте старше 22 лет . 8 Поступил в университет в возрасте 18 лет Студент < name > поступил в университет в возрасте 18 лет . Возраст поступления в университет определяется по формуле : $ [ age ] - [ year ] $ . Возраст окончания : $ [ age ] + ( 5 - [ year ] ) $ . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . База данных , оформленная в виде таблицы . Результаты работы по каждому заданию с объяснением результатов . Общий вывод по проделанной работе . Код программы . Пример выполнения задания lab2_1.CLP ( deftemplate student `` Атрибуты студента '' ( slot name ) ; имя студента ( slot age ) ; возраст ( slot year ) ; год обучения ( курс ) ( slot spec ) ; специализация ( slot aver_mark ) ) ; средний балл ( deffacts students `` База данных студентов '' ( student ( name John ) ( age 20 ) ( year 3 ) ( spec `` hard '' ) ( aver_mark 4.5 ) ) ( student ( name Jane ) ( age 18 ) ( year 2 ) ( spec `` hard '' ) ( aver_mark 5.0 ) ) ( student ( name Jude ) ( age 22 ) ( year 4 ) ( spec `` soft '' ) ( aver_mark 3.8 ) ) ( student ( name Toma ) ( age 21 ) ( year 3 ) ( spec `` ai '' ) ( aver_mark 3.5 ) ) ( student ( name Joan ) ( age 19 ) ( year 4 ) ( spec `` hard '' ) ( aver_mark 4.5 ) ) ( student ( name Mark ) ( age 23 ) ( year 5 ) ( spec `` soft '' ) ( aver_mark 3.0 ) ) ( student ( name Fred ) ( age 20 ) ( year 2 ) ( spec `` ai '' ) ( aver_mark 4.0 ) ) ( student ( name Eric ) ( age 24 ) ( year 6 ) ( spec `` hard '' ) ( aver_mark 4.5 ) ) ( student ( name Mary ) ( age 20 ) ( year 3 ) ( spec `` ai '' ) ( aver_mark 3.6 ) ) ( student ( name Beth ) ( age 24 ) ( year 5 ) ( spec `` soft '' ) ( aver_mark 3.1 ) ) ) ( defrule find-student `` Задание 1 '' ; ... ) courses/knowledge_representation_and_artificial_intelligence_systems/lab2.txt · ",
                "Лабораторная работа №3 : Изучение стратегий разрешения конфликтов в продукционных системах  Курсы » Представление знаний и системы искусственного интеллекта » Лабораторная работа №3 : Изучение стратегий разрешения конфликтов в продукционных системах courses : knowledge_representation_and_artificial_intelligence_systems : lab3 Table of Contents Лабораторная работа №3 : Изучение стратегий разрешения конфликтов в продукционных системах Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Лабораторная работа №3 : Изучение стратегий разрешения конфликтов в продукционных системах Цель работы Изучение различных стратегий разрешения конфликтов в продукционных системах . Основные теоретические положения При реализации прямого вывода в продукционных базах знаний машина логических выводов сопоставляет левые части ( антецеденты ) правил с базой данных и помещает правила , антецеденты которых удовлетворяются , в агенду ( конфликтное множество ) . Агенда представляет собой список всех правил , условия которых удовлетворяются , но которые еще не были выполнены . Агенда работает аналогично стеку – правило , которое должно быть выполнено первым является верхним правилом в агенде . Когда правило становится активным ( условия в его левой части удовлетворяются ) , оно помещается в агенду в соответствии со следующими правилами : Вновь активизируемые правила помещаются над всеми правилами с более низкой значимостью ( salience ) и ниже всех правил с более высокой значимостью . Для определения места среди правил равной значимости используется текущая стратегия разрешения конфликта . Если в результате добавления или удаления факта одновременно активизируются несколько правил и шаги 1 и 2 не позволяют выполнить упорядочение , то эти правила упорядочиваются между собой произвольно ( но не случайно ) . Значимость позволяет пользователю назначать правилу приоритет , который учитывается при его выборе из агенды . Первым активизируется правило с наивысшей значимостью . Значимость может принимать целое значение в диапазоне от -10000 до +10000 . По умолчанию значимость правила равна 0 . Для явного назначения правилу значимости используется оператор : ( declare < rule- salience > ) Этот оператор может добавляться в левую часть правила и должен размещаться перед первым условным элементом , например : ( defrule test-1 ( declare ( salience 99 ) ) ( fire test-1 ) = > ( printout t `` Rule test-1 firing . '' crlf ) ) Значимости может назначаться значение в один из трех моментов : при определении правила , при активизации правила и в каждом цикле выполнения ( последние два случая соответствуют динамической значимости ) . По умолчанию значение значимости назначается только при определении правила . Для изменения такого поведения может использоваться команда set-salience-evaluation . В CLIPS поддерживается семь стратегий разрешения конфликтов : « вглубь » ( depth ) , « вширь » ( breadth ) , « простоты » ( simplicity ) , « сложности » ( complexity ) , lex , mea и случайного выбора ( random ) . По умолчанию используется стратегия вглубь . Текущая стратегия может быть установлена командой set-strategy , при этом агенда переупорядочивается на основе новой стратегии . Синтаксис команды : ( set-strategy < strategy > ) где < strategy > : := depth|breadth|simplicity|complexity|lex|mea|random . По умолчанию используется стратегия depth . Стратегия « вглубь » . Вновь активируемые правила помещаются в агенду над всеми правилами такой же значимости . Например , пусть факт f-1 активирует правила rule-1 и rule-2 , а факт f-2 активирует правила rule-3 и rule-4 . Тогда если f-1 устанавливается раньше , чем f-2 , то rule-3 и rule-4 окажутся в агенде выше правил rule-1 и rule-2 . Однако положение правила rule-1 относительно правила rule-2 и правила rule-3 относительно правила rule-4 будет произвольным . Стратегия « вширь » . Вновь активируемые правила помещаются ниже всех правил с такой же значимостью . Например , пусть факт f-1 активирует правила rule-1 и rule-2 , а факт f-2 активирует правила rule-3 и rule-4 . Тогда , если f-1 устанавливается раньше , чем f-2 , то rule-1 и rule-2 окажутся в агенде выше правил rule-3 и rule-4 . Однако , положение правила rule-1 относительно правила rule-2 и правила rule-3 относительно правила rule-4 будет произвольным . Стратегия « простоты » . Среди правил одинаковой значимости , вновь активируемые правила помещаются над всеми правилами с равной или большей специфичностью ( specificity ) . Специфичность правила определяется числом сравнений , которые должны быть выполнены в левой части правила . Каждое сравнение с константой или предварительно связанной переменной увеличивает специфичность на единицу . Каждый вызов функции , сделанный из левой части правила в условном элементе с предикатным ограничением ( : ) , ограничением возвращаемым значением ( = ) или УЭ-проверкой ( test ) увеличивает специфичность на единицу . Булевы функции « и » , « или » , « не » не увеличивают специфичность правила , но их аргументы увеличивают . Вызовы функций , выполняемые из функций не увеличивают специфичность . Например , следующее правило : ( defrule example ( item ? x ? y ? x ) ( test ( and ( numberp ? x ) ( > ? x ( + 10 ? y ) ) ( < ? x 100 ) ) ) = > ... ) имеет специфичность 5 ( считаются операторы ( item ? x ? y ? x ) , ? x , numberp , > , < ) . Стратегия « сложности » . Среди правил одинаковой значимости , вновь активируемые правила помещаются над всеми правилами с равной или меньшей специфичностью . Стратегия LEX . Для определения места правила в агенде среди правил одинаковой значимости в первую очередь используется новизна образцов , активизирующих данное правило . Каждый факт и экземпляр помечаются « временным тегом » для указания его новизны по отношению ко всем другим фактам и экземплярам в системе . Для определения местоположения правила в агенде образцы ( факты или экземпляры ) , связанные с активацией каждого правила сортируются по убыванию новизны . Правило с более поздним образцом помещается выше правил с более ранними образцами . Чтобы определить относительный порядок размещения двух правил , отсортированные временные теги этих образцов , активирующих эти правила , сравниваются попарно начиная с самых больших значений . Сравнение продолжается до тех пор , пока не будет обнаружено , что временной тег одной активации больше соответствующего временного тега другой активации . Правило с большим значением временного тега помещается в агенду выше другого правила . Если одно правило имеет больше образцов , чем другое , а все сравниваемые временные теги идентичны , то правило с большим числом временных тегов помещается выше . Если два правила имеют равную новизну , правило с более высокой специфичностью помещается выше правила с более низкой специфичностью . Стратегия MEA . Для определения места правила в агенде среди правил равной значимости в первую очередь используется временной тег образца , связанного с первым условием в правиле . Правило , у которого временной тег первого образца ( условного элемента ) больше временных тегов первых образцов других правил , помещается в агенду выше них . Если временные теги первых образцов равны , то для определения места правила используется стратегия LEX . Стратегия случайного выбора ( Random Strategy ) . Каждой активации сопоставляется случайное число , которое используется для определения ее местоположения в агенде среди активаций равной значимости . Это случайное число сохраняется , когда стратегия изменяется , так что при возврате к случайной стратегии восстанавливается тот же порядок ( среди активаций , которые находились в агенде , когда стратегия была изменена ) . Постановка задачи Исследование процесса выполнения заданного набора правил на заданном множестве фактов при различных стратегиях разрешения конфликтов . Порядок выполнения работы Cформировать с помощью конструкции deffacts исходный набор из пяти произвольных фактов ( обозначаемых как ( a ) , ( b ) , ( c ) , ( d ) и ( e ) ) . В соответствии с вариантом задания сформировать набор правил , где ( n ) , ( m ) , ( p ) , ( r ) , ( s ) и ( t ) – некоторые произвольно выбранные факты ( в квадратных скобках указана значимость правила ) . Сохранить подготовленные конструкции в файле lab3.CLP . Загрузить среду CLIPS . Активизировать окна « Facts Window » и « Agenda Window » . С помощью команды Load Constructs меню File ( или « горячей » комбинации ^L ) загрузить факты и правила из файла lab3.CLP . Выполнить начальную установку командой ( reset ) ( « горячая » комбинация – ^E ) . Зафиксировать состояние списка фактов и агенды . Выполнить в пошаговом режиме обработку правил ( « горячая » комбинация – ^T ) , фиксируя после каждого шага состояние агенды и списка фактов . Повторить действия п . 4 и 5 при различных стратегиях разрешения конфликтов . Для изменения стратегий спользовать пункт Options меню Execution . Зафиксировать и объяснить полученные результаты . Варианты заданий № варианта Набор правил 1 ( a ) ( b ) = > ( m ) [ 5000 ] ( a ) ( c ) = > ( n ) [ 6000 ] ( b ) ( c ) ( d ) = > ( p ) [ 5000 ] ( a ) ( d ) ( c ) = > ( r ) [ 6000 ] ( m ) ( n ) = > ( s ) [ 6000 ] ( n ) ( p ) ( r ) = > ( t ) [ 5000 ] 2 ( a ) ( d ) ( e ) = > ( m ) [ 5000 ] ( c ) ( d ) = > ( p ) [ 5000 ] ( c ) ( b ) ( d ) = > ( r ) [ 6000 ] ( b ) ( a ) = > ( n ) [ 6000 ] ( p ) ( m ) = > ( t ) [ 6000 ] ( r ) ( p ) ( m ) = > ( s ) [ 5000 ] 3 ( a ) ( b ) ( c ) = > ( r ) [ 5000 ] ( e ) ( c ) ( d ) = > ( p ) [ 5000 ] ( a ) ( b ) = > ( m ) [ 5000 ] ( a ) ( e ) = > ( n ) [ 5000 ] ( m ) ( n ) ( r ) = > ( s ) [ 5000 ] ( m ) ( p ) = > ( t ) [ 6000 ] 4 ( e ) ( d ) ( a ) = > ( p ) [ 8000 ] ( b ) ( d ) = > ( m ) [ 8000 ] ( a ) ( c ) = > ( n ) [ 8000 ] ( a ) ( d ) ( b ) = > ( r ) [ 8000 ] ( m ) ( p ) = > ( t ) [ 6000 ] ( a ) ( n ) ( r ) = > ( s ) [ 6000 ] 5 ( a ) ( d ) ( e ) = > ( p ) [ 6000 ] ( b ) ( c ) = > ( m ) [ 7000 ] ( d ) ( a ) = > ( n ) [ 7000 ] ( e ) ( d ) ( c ) = > ( r ) [ 6000 ] ( b ) ( n ) = > ( s ) [ 7000 ] ( n ) ( p ) ( r ) = > ( t ) [ 7000 ] 6 ( c ) ( d ) ( a ) = > ( m ) [ 4000 ] ( c ) ( e ) = > ( p ) [ 4000 ] ( c ) ( b ) ( d ) = > ( r ) [ 4000 ] ( b ) ( a ) = > ( n ) [ 4000 ] ( p ) ( c ) = > ( t ) [ 6000 ] ( a ) ( p ) ( m ) = > ( t ) [ 5000 ] 7 ( b ) ( c ) ( d ) = > ( r ) [ 3000 ] ( a ) ( b ) = > ( m ) [ 3000 ] ( e ) ( c ) ( d ) = > ( p ) [ 3000 ] ( a ) ( e ) = > ( n ) [ 3000 ] ( m ) ( e ) ( r ) = > ( t ) [ 5000 ] ( m ) ( b ) = > ( s ) [ 5000 ] 8 ( a ) ( b ) ( c ) = > ( r ) [ 2000 ] ( e ) ( c ) ( d ) = > ( p ) [ 2000 ] ( a ) ( d ) = > ( m ) [ 3000 ] ( a ) ( e ) = > ( n ) [ 3000 ] ( c ) ( n ) ( r ) = > ( t ) [ 4000 ] ( m ) ( d ) = > ( s ) [ 5000 ] Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Пошаговая обработка правил , оформленная в виде таблицы для каждой стратегии , с краткими выводами по каждой из них . Общий вывод по проделанной работе . Код программы . courses/knowledge_representation_and_artificial_intelligence_systems/lab3.txt · ",
                "Лабораторная работа №4 : Реализация поиска в пространстве состояний  Курсы » Представление знаний и системы искусственного интеллекта » Лабораторная работа №4 : Реализация поиска в пространстве состояний courses : knowledge_representation_and_artificial_intelligence_systems : lab4 Table of Contents Лабораторная работа №4 : Реализация поиска в пространстве состояний Цель работы Основные теоретические положения Введение Общие сведения Постановка задачи Порядок выполнения работы Содержание отчёта Лабораторная работа №4 : Реализация поиска в пространстве состояний Цель работы Формирование умения реализации в среде CLIPS задачи поиска в пространстве состояний и освоение способов анализа ее решения . Основные теоретические положения Введение Одной из классических задач ИИ , рассматриваемых при построении и анализе алгоритмов поиска является известная головоломка о крестьянине , которому необходимо переправить на другой берег реки волка , козу и капусту . Он располагает двуместной лодкой , т.е . может перевозить только по одному объекту . При этом нельзя оставлять на берегу волка с козой и козу с капустой , т.к . в этом случае первый из них съест второго . Общие сведения Как известно , постановка задачи поиска в пространстве состояний в общем случае предполагает описание исходного состояния , множества операторов перехода в пространстве состояний и множества целевых состояний ( процедуры определения целевого состояния ) . Рассмотрим эти компоненты для данной задачи . Представление состояний в пространстве состояний и вершин в дереве поиска Каждое состояние в пространстве состояний определяется нахождением каждого персонажа/объекта ( крестьянина ( peasant ) , волка ( wolf ) , козы ( goat ) и капусты ( cabbage ) ) на одном из двух берегов ( shore-1 или shore-2 ) . Таким образом , состояние можно представить неупорядоченным фактом , содержащим слоты для задания местоположения каждого персонажа ( объекта ) : peasant-location , wolf-location , goat-location и cabbage-location . Эти слоты могут принимать символьные значения shore-1 и shore-2 . Поскольку поиск выполняется по дереву поиска ( ДП ) , при разработке программы необходимо представлять вершины ДП . Каждая вершина ДП , помимо описания некоторого состояния , должна содержать также дополнительную информацию : ссылку на родительскую вершину , глубину вершины и последнее перемещение . Последнее перемещение определяет с кем/чем переправлялся крестьянин последний раз и может принимать следующие символьные значения : no-move , alone , wolf , goat и cabbage . Таким образом , для представления вершин ДП можно использовать неупорядоченный факт , определяемый следующим шаблоном : ( deftemplate status ( slot peasant-location ( type SYMBOL ) ( allowed-symbols shore-1 shore-2 ) ) ( slot wolf-location ( type SYMBOL ) ( allowed-symbols shore-1 shore-2 ) ) ( slot goat-location ( type SYMBOL ) ( allowed-symbols shore-1 shore-2 ) ) ( slot cabbage-location ( type SYMBOL ) ( allowed-symbols shore-1 shore-2 ) ) ( slot parent ( type FACT-ADDRESS SYMBOL ) ( allowed-symbols no-parent ) ) ( slot search-depth ( type INTEGER ) ( range 1 ? VARIABLE ) ) ( slot last-move ( type SYMBOL ) ( allowed-symbols no-move alone wolf goat cabbage ) ) ) Исходным является состояние , в котором все действующие лица ( и лодка ) находятся на первом берегу ( shore-1 ) . Соответствующая ( корневая ) вершина в ДП не имеет родительской вершины , имеет глубину 1 и не имеет последнего перемещения ( no-move ) . Таким образом , исходное состояние может быть представлено следующим фактом : ( deffacts initial-positions ( status ( search-depth 1 ) ( parent no-parent ) ( peasant-location shore-1 ) ( wolf-location shore-1 ) ( goat-location shore-1 ) ( cabbage-location shore-1 ) ( last-move no-move ) ) ) Операторы перехода в пространстве состояний Множество операторов перехода для данной задачи включает : перемещение с одного берега на другой одного крестьянина ( move-alone ) ; перемещение крестьянина с волком ( move-with-wolf ) ; перемещение крестьянина с козой ( move-with-goat ) ; перемещение крестьянина с капустой ( move-with-cabbage ) . При реализации программы в среде CLIPS операторы удобно представлять правилами . При этом в левой части правил должны распознаваться условия применимости данного оператора и фиксироваваться ( связываться ) параметры конкретного состояния : указатель ( адрес ) на текущую вершину , местонахождение действующих лиц , затрагиваемых данным оператором , и глубина поиска . В правой части правила должна порождаться новая вершина , являющаяся потомком текущей в случае применения данного оператора и устанавливаться ее параметры : глубина , новое местонахождение действующих лиц , ссылка на родительскую вершину и последнее перемещение . Новую вершину удобно порождать путем дублирования текущей с изменением значений некоторых параметров . Пример правила для перемещения крестьянина с волком : ( defrule move-with-wolf `` Правило перемещения с волком '' ? node < - ( status ( search-depth ? num ) ; фиксация адреса текущей вершины и ее глубины ( peasant-location ? ps ) ; фиксация текущего местонахождения крестьянина ( wolf-location ? ps ) ) ; волк на том же берегу , что и крестьянина ( opposite-of ? ps ? ns ) ; связывание значения противоположного берега = > ( duplicate ? node ; создать новую вершину дублированием ( search-depth = ( + 1 ? num ) ) ; установить ее глубину инкрементом текущей ( parent ? node ) ; установить в качестве родительской вершины текущую ( peasant-location ? ns ) ; установить новое местонахождение крестьянина ( wolf-location ? ns ) ; установить новое местонахождение волка ( last-move wolf ) ) ) ; установить тип последнего перемещения Для фиксации ( привязки ) текущего берега и связывания переменной ? ns значением противоположного берега в левой части правила используется условный элемент ( opposite-of ? fs ? ns ) . Значение переменной ? ns используется в правой части правила для установки нового местонахождения персонажей в результате выполнения оператора . Для использования такого элемента необходимо заранее определить отношение opposites-of между берегами с помощью конструкции : ( deffacts opposites ( opposite-of shore-1 shore-2 ) ( opposite-of shore-2 shore-1 ) ) Ограничения на возможные состояния Процесс поиска может приводить в запрещённые состояния , в которых волк ест козу или коза ест капусту . При попадании в запрещенные состояния соответствующие вершины должны удаляться . Например , волк ест козу , если он находится с ней на одном берегу и на этом берегу нет крестьянина . Соответствующее правило можно записать так : ( defrule wolf-eats-goat ? node < - ( status ( peasant-location ? s1 ) ; фиксируется адрес вершины и положение крестьянин ( wolf-location ? s2 & ~ ? s1 ) ; волк и крестьянин на разных берегах ( goat-location ? s2 ) ) ; коза на том же берегу , что и волк = > ( retract ? node ) ) ; удалить вершину Правило , определяющее состояние , в котором коза ест капусту , записывается аналогично . Необходимо также распознавать ситуации зацикливания процесса поиска , т.е . повторного попадания в уже пройденное состояние . Для этого новое состояние должно сравниваться с ранее достигнутыми . Если имеется состояние с меньшей глубиной и точно таким же местоположением всех персонажей , то новая вершина должна удаляться . Соответствующее правило представлено ниже : ( defrule circular-path ( status ( search-depth ? sd1 ) ( peasant-location ? ps ) ( wolf-location ? ws ) ( goat-location ? gs ) ( cabbage-location ? cs ) ) ? node < - ( status ( search-depth ? sd2 & : ( < ? sd1 ? sd2 ) ) ( peasant-location ? ps ) ( wolf-location ? ws ) ( goat-location ? gs ) ( cabbage-location ? cs ) ) = > ( retract ? node ) ) Первая часть антецедента этого правила сопоставляется с некоторой вершиной и фиксирует ( в переменной ? sd1 ) ее глубину , а также местоположение всех персонажей – крестьянина , волка , козы и капусты – соответственно в переменных ? ps , ? ws , ? gs и ? cs . Вторая часть антецедента сопоставляется с вершиной , имеющей большую глубину и точно такое же состояние ( местоположение персонажей ) . Адрес этой вершины фиксируется в переменной ? node , чтобы в консеквенте правила можно было удалить данную вершину . Распознавание и вывод решения Решением задачи является последовательность перемещений на лодке с берега на берег , переводящая исходное состояние в целевое . В данной задаче целевым является состояние , когда все находятся на втором берегу . При достижении целевого состояния должно быть выведено решение – последовательность перемещений . Однако каждая вершина в ДП ( в том числе целевая ) явно хранит лишь последнее перемещение и указатель на вершину-предка . Поэтому при обнаружении целевого состояния необходимо выполнить обратный проход от целевой вершины к корню ДП ( исходному состоянию ) , чтобы восстановить полную последовательность перемещений . Таким образом , необходимо иметь правило для распознавания целевого состояния и правило для построения решения – последовательности операторов ( перемещений ) переводящих исходное состояние в целевое . Для представления последовательности перемещений , приводящих в некоторое состояние , удобно использовать факт на основе следующего шаблона : ( deftemplate moves ( slot id ( type FACT-ADDRESS SYMBOL ) ( allowed-symbols no-parent ) ) ( multislot moves-list ( type SYMBOL ) ( allowed-symbols no-move alone wolf goat cabbage ) ) Соответствующий факт содержит два слота : Слот для идентификации вершины-предка . Значением слота является адрес вершины-родителя рассматриваемой вершины , или символьное значение no-parent для корневой вершины ( у нее отсутствует родитель ) . Мультислот moves-list для хранения последовательности перемещений , приводящих в данное состояние ( вершину ) . Правило распознавания целевого состояния должно активироваться , если имеется вершина , в которой все действующие лица находятся на втором берегу ( shore-2 ) . Правая часть правила должна удалять эту вершину и добавлять в базу данных факт , представляющий путь в соответствии с шаблоном moves . В этом факте слот идентификатора вершины должен указывать на вершину-предка целевой вершины , а мультислот moves-list содержать последнее перемещение из этой вершины-предка в целевую вершину . Тогда правило распознавания целевого состояния может быть записано следующим образом : ( defrule goal-test ? node < - ( status ( parent ? parent ) ( peasant-location shore-2 ) ( wolf-location shore-2 ) ( goat-location shore-2 ) ( cabbage-location shore-2 ) ( last-move ? move ) ) = > ( retract ? node ) ( assert ( moves ( id ? parent ) ( moves-list ? move ) ) ) ) Появление в базе данных факта moves инициирует процесс обратного движения по ДП к корневой вершине ( исходному состоянию ) с построением пути-решения . Правило построения решения при каждом срабатывании реализует переход к родительской вершине , добавляя в мультислот moves-list факта moves соответствующее перемещение . Пример правила построения решения : ( defrule build-solution ? node < - ( status ( parent ? parent ) ; фиксация адреса некоторой вершины ? node в ДП , ( last-move ? move ) ) ; ее вершины-родителя и последнего перемещения ? mv < - ( moves ( id ? node ) ( moves-list $ ? rest ) ) ; проверка , есть ли вершина moves ; с адресом ? node и , если `` да '' , фиксация адреса ; факта и значения его мультислота moves-list = > ( modify ? mv ( id ? parent ) ( moves-list ? move ? rest ) ) ) ; модификация факта moves путем ; расширения списка перемещений и ; обновления предка После завершения построения пути-решения , его необходимо отобразить на экране . Соответствующее правило должно сработать , когда обнаружится факт moves , не имеющий родителя ( корневая вершина ДП ) . Правило вывода решения на экран может быть задано так : ( defrule SOLUTION : :print-solution ? mv < - ( moves ( id no-parent ) ( moves-list no-move $ ? m ) ) ; для факта moves , не имеющего ; предка фиксируется его адрес ? mv и значение ? m ; мультислота moves-list – список перемещений = > ( retract ? mv ) ; факт ? mv удаляется ( printout t t `` Solution found : `` t t ) ; Печать сообщения `` Решение найдено : '' ( bind ? length ( length ? m ) ) ; ? length = длина списка перемещений ( переменной ? m ) ( bind ? i 1 ) ; ? i = 1 ( bind ? shore shore-2 ) ; ? shore = shore-2 ( while ( < = ? i ? length ) do ; Пока ? i < = ? length ( bind ? thing ( nth ? i ? m ) ) ; ? thing = значение i-го слота мультислота ? m ( тип перемещения ) ( if ( eq ? thing alone ) ; Если ? thing = alone then ( printout t `` Peasant moves alone to `` ? shore `` . '' t ) else ( printout t `` Peasant moves with `` ? thing `` to `` ? shore `` . '' t ) ) ( if ( eq ? shore shore-1 ) ; Если ? shore = shore-1 then ( bind ? shore shore-2 ) ; ? shore = shore-2 else ( bind ? shore shore-1 ) ) ; ? shore = shore-1 ( bind ? i ( + 1 ? i ) ) ) ) ; ? i = ? i + 1 Постановка задачи Необходимо построить полное дерево поиска для задачи о крестьянине , которому необходимо переправить на другой берег реки волка , козу и капусту , разработать на продукционном языке CLIPS модульную программу решения данной задачи и проанализировать ход поиска решения , выполнив программу в пошаговом режиме . Порядок выполнения работы Построить полное дерево поиска для данной задачи . Разработать , используя среду CLIPS , программу решения данной головоломки . Программа должна быть построена по модульному принципу и состоять из трех модулей : основного ( MAIN ) ; контроля ограничений ( CONSTRAINTS ) ; вывода решения ( SOLUTION ) . Для объявления модуля используется конструкция defmodule , в которой указываются экпортируемые в другие модули или экспортируемые из других модулей конструкции . Например модуль MAIN экспортирует шаблон status : ( defmodule MAIN ( export deftemplate status ) ) Модуль MAIN должен содержать : объявление шаблона состояния status ; определение факта исходного состояния – initial-positions ; определение факта отношения между берегами – opposites ; определение правил генерации пути , соответствующих четырем операторам в пространстве состояний . Имена всех конструкций модуля MAIN должны начинаться с префикса MAIN : : . Например : ( deftemplate MAIN : :status ... ) Модуль контроля ограничений CONSTRAINTS должен импортировать из модуля MAIN шаблон status : ( defmodule CONSTRAINTS ( import MAIN deftemplate status ) ) и содержать : два правила для распознавания запрещенных ситуаций wolf-eats-goat и goat-eats-cabbage ; правило для распознавания зацикливания пути – circular-path . Имена всех конструкций модуля CONSTRAINTS должны начинаться с префикса CONSTRAINTS : : . Например : ( defrule CONSTRAINTS : :goat-eats-cabbage ... ) У всех правил модуля CONSTRAINTS должно быть установлено свойство автофокусировки . Это делается так : ( defrule CONSTRAINTS : :wolf-eats-goat ( declare ( auto-focus TRUE ) ) ... ) Если свойство автофокусировки правила установлено , то всякий раз при активации правила автоматически выполняется команда фокусировки на модуле , в котором определено данное правило . Модуль вывода решения SOLUTION также должен импортировать из модуля MAIN шаблон status : ( defmodule SOLUTION ( import MAIN deftemplate status ) ) и содержать : объявление шаблона факта-решения moves ; правило распознавания целевого состояния goal-test ; правило построения пути-решения – build-solution ; правило вывода решения на экран – print-solution . Имена всех конструкций модуля SOLUTION должны начинаться с префикса SOLUTION : : . Например : ( defrule SOLUTION : :print-solution ... ) У правила распознавания целевого состояния должно быть установлено свойство автофокусировки : ( defrule SOLUTION : :goal-test ( declare ( auto-focus TRUE ) ) ... ) Выполните программу в пошаговом режиме , проанализируйте и объясните ход поиска решения . В отчете необходимо привести трассу поиска решения . Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Дерево решений . Трассировка решения , оформленная в виде таблицы , с краткими выводами . Результаты работы программы . Общий вывод по проделанной работе . Код программы . courses/knowledge_representation_and_artificial_intelligence_systems/lab4.txt · ",
                "Лабораторная работа №5 : Исследование моделей планирования действий в системах искусственного интеллекта  Курсы » Представление знаний и системы искусственного интеллекта » Лабораторная работа №5 : Исследование моделей планирования действий в системах искусственного интеллекта courses : knowledge_representation_and_artificial_intelligence_systems : lab5 Table of Contents Лабораторная работа №5 : Исследование моделей планирования действий в системах искусственного интеллекта Цель работы Основные теоретические положения Постановка задачи Порядок выполнения работы Варианты заданий Содержание отчёта Лабораторная работа №5 : Исследование моделей планирования действий в системах искусственного интеллекта Цель работы Изучение принципов описания и решения задачи планирования на основе продукционной модели с использованием механизма поиска в пространстве состояний . Основные теоретические положения Задача построения башни из блоков ( кубиков ) заключается в последовательном выборе из неупорядоченной кучи блоков и постановки их друг на друга . План решения задачи представляет собой чередование двух фаз : выбора блока из кучи и установки его в башню . При этом больший по размерам блок не может ставиться на меньший по размерам и , следовательно , на каждом шаге решения задачи необходимо выбирать из кучи самый большой блок . Каждый блок характеризуется размером , цветом и положением , поэтому для его описания можно использовать следующий шаблон : ( deftemplate block ( slot size ( type INTEGER ) ) ( slot place ( type SYMBOL ) ) ( slot color ( type SYMBOL ) ) ) Каждый блок может находиться либо в куче ( heap ) , либо в руке ( hand ) , когда он выбран из кучи , либо в башне ( tower ) . В результате решения задачи необходимо последовательно вывести информацию о действиях , составляющих план её решения и взаимное положение блоков в построенной по данному плану башне с указанием их цвета . С этой целью для блоков , находящихся в башне , необходимо определить отношение , указывающее , какой блок ( upper ) на каком ( lower ) стоит : ( deftemplate on ( slot upper ( type SYMBOL ) ) ( slot lower ( type SYMBOL ) ) ( slot place ( type SYMBOL ) ( default heap ) ) ) Если блок ставится в основание башни , слоту place присваивается значение tower , а слоты upper и lower остаются неопределенными . Если блок ставится на другой блок , слотам upper и lower должны присваиваться значения цветов соответствующих блоков . Поскольку план решения задачи представляет собой чередование фаз поиска в компоненте пространства состояний ( « куче » ) самого большого блока ( find ) и его установки в башню ( build ) , необходимо иметь факт , определяющий текущую задачу . Его можно определить с помощью следующего шаблона : ( deftemplate goal ( slot current-task ( type SYMBOL ) ) ) Для решения задачи необходимы правила для следующих действий : установки начального значения текущей задачи ; выбора из кучи самого большого блока ; установки первого блока в основание башни ; установки в башню всех последующих блоков ; определения окончания процесса , когда в куче нет больше блоков . Правило установки начального значения текущей задачи должно активироваться исходным фактом ( initial-fact ) и устанавливать в качестве текущей задачи find . Правило выбора из кучи самого большого блока должно активироваться следующими условиями : текущая задача – find ; наличие в куче блока , для которого не существует большего по размерам . Действия правила : взять найденный блок в руку ( изменить его местоположение на hand ) ; изменить текущую задачу на build . Правило установки блока в основание башни ( первого блока ) имеет следующие условия активации : текущая задача – build ; имеется блок в руке ; отсутствуют блоки в башне – нет блока , у которого значение слота place равно tower . Действия правила : изменить местоположение блока в руке на tower ; изменить текущую задачу на find . Правило установки в башню последующих блоков имеет условия активации : текущая задача – build ; имеется блок в руке ( для него надо запомнить цвет ) ; имеется блок в башне , на котором не стоит другой блок ( для него также надо запомнить цвет ) . Действия правила : модифицировать местоположение блока в руке на tower ; установить факт , что новый блок находится на блоке , который был до этого верхним ; изменить текущую задачу на find . Правило определения окончания процесса должно активироваться , когда в куче больше нет блоков и удалять из рабочей памяти факт текущей задачи . Постановка задачи Разработать и отладить на языке CLIPS программу решения задачи планирования постройки башни из блоков с пошаговым отображением плана построения башни . Порядок выполнения работы Разработать программу решения задачи планирования на языке CLIPS , реализующую описанные выше правила , в соответствии с вариантом задания , указанным в таблице . Исходное состояние должно описываться конструкцией deffacts , содержащей четыре факта , соответствующих блокам в куче . Вывод результатов на экран должен обеспечивать пошаговое отображение плана построения башни . Варианты заданий Для каждого блока в таблице через слеш указаны параметры : цвет/размер . № варианта Блок-1 Блок-2 Блок-3 Блок-4 1 синий/10 зелёный/8 красный/18 жёлтый/15 2 красный/20 коричневый/5 жёлтый/12 зелёный/8 3 жёлтый/15 красный/10 белый/25 коричневый/5 4 зелёный/10 жёлтый/14 чёрный/18 красный/11 5 коричневый/5 белый/25 синий/14 жёлтый/12 6 красный/10 чёрный/18 жёлтый/15 белый/25 7 жёлтый/12 синий/10 зелёный/8 чёрный/18 8 белый/16 красный/5 коричневый/15 синий/10 9 чёрный/18 жёлтый/15 красный/20 белый/10 Содержание отчёта Цель работы . Краткое изложение основных теоретических понятий . Постановка задачи с кратким описанием порядка выполнения работы . Пошаговый план решения задачи . Результаты работы программы с краткими выводами . Общий вывод по проделанной работе . Код программы . courses/knowledge_representation_and_artificial_intelligence_systems/lab5.txt · ",
                "✎ Представление знаний и системы искусственного интеллекта  Курсы » Представление знаний и системы искусственного интеллекта courses : knowledge_representation_and_artificial_intelligence_systems : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Представление знаний и системы искусственного интеллекта ====== ===== Материалы ===== * [ [ materials ] ] * [ [ exam ] ] ===== Лабораторные работы ===== * [ [ lab1 ] ] * [ [ lab2 ] ] * [ [ lab3 ] ] * [ [ lab4 ] ] * [ [ lab5 ] ] courses/knowledge_representation_and_artificial_intelligence_systems/start.txt · ",
                "Представление знаний и системы искусственного интеллекта - Old revisions  Курсы » Представление знаний и системы искусственного интеллекта courses : knowledge_representation_and_artificial_intelligence_systems : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Представление знаний и системы искусственного интеллекта ( external edit ) ( current ) 2019/09/26 17:12 Представление знаний и системы искусственного интеллекта – ↷ Links adapted because of a move operation andrey.suchkov -372 B 2019/09/26 17:12 Представление знаний и системы искусственного интеллекта – ↷ Page moved and renamed from courses : knowledge_representation_and_artificial_intelligence_systems to courses : knowledge_representation_and_artificial_intelligence_systems : start andrey.suchkov +658 B 2019/09/02 17:56 Представление знаний и системы искусственного интеллекта – [ Сроки сдачи лабораторных работ ] andrey.suchkov -231 B 2019/09/02 15:03 Представление знаний и системы искусственного интеллекта – [ Сроки сдачи лабораторных работ ] andrey.suchkov +1 B 2019/09/02 15:03 Представление знаний и системы искусственного интеллекта – [ Лабораторные работы ] andrey.suchkov +231 B 2019/07/02 09:59 Представление знаний и системы искусственного интеллекта – [ Лабораторные работы ] andrey.suchkov -5 B 2019/07/02 09:59 Представление знаний и системы искусственного интеллекта – [ Материалы ] andrey.suchkov -1 B 2019/07/02 09:53 Представление знаний и системы искусственного интеллекта – [ Материалы ] andrey.suchkov -6 B 2019/07/02 09:53 Представление знаний и системы искусственного интеллекта – [ Лабораторные работы ] andrey.suchkov -24 B 2019/07/02 09:52 Представление знаний и системы искусственного интеллекта – [ Лабораторные работы ] andrey.suchkov +61 B 2019/07/02 09:52 Представление знаний и системы искусственного интеллекта – [ Лабораторные работы ] andrey.suchkov -67 B 2019/07/02 09:52 Представление знаний и системы искусственного интеллекта – [ Представление знаний и системы искусственного интеллекта ] andrey.suchkov +118 B 2019/07/01 21:14 Представление знаний и системы искусственного интеллекта – created andrey.suchkov +581 B Show differences between selected revisions courses/knowledge_representation_and_artificial_intelligence_systems/start.txt · ",
                "Представление знаний и системы искусственного интеллекта - "
            ]
        },
        {
            "name": "(учебная практика и НИР)Аттестация магистрантов первого семестра обучения",
            "url": "/doku.php/diplomants:start:first_year_attestation",
            "date": "\"2023/12/27 14:53\"",
            "data": [
                "Аттестация магистрантов первого семестра обучения  Дипломникам » Дипломникам » Аттестация магистрантов первого семестра обучения diplomants : start : first_year_attestation Table of Contents Аттестация магистрантов первого семестра обучения Название и назначение практики Баллы Рекомендация по составлению отзыва руководителя Оценки за аттестацию Даты Результаты аттестации ( предварительные оценки ) Аттестация магистрантов первого семестра обучения Название и назначение практики Учебная практика ( НИР ) Обучение в магистратуре подразумевает более высокий уровень требований к содержанию и результату магистерской работы , поэтому , предполагается что над дипломом вы будете работать все два года обучения . Поэтому , смысл данной практики - начать работу над магистерской диссертацией и определится с руководителем в осеннем семестре . Данная практика будет продолжена во втором и третьем семестрах обучения в магистратуре . Предполагается , что в следующие периоды вы разовьете ваши результаты из текущего семестра . Кафедра крайне не рекомендует делать менять руководителя или тему . Эти действия приведут ( И как правило приводят ) к ухудшению качества вашего диплома и часто - к не выходу на защиту . Баллы Аттестация складывается из двух компонент : 0.8 х ( 0-5 ) баллов - отзыв руководителя НИР с оценкой и подписью . 1.2 х ( 0-5 ) баллов - обзор литературы по будущей теме НИР . Обзор и отзыв оформляются двумя разными документами , название по шаблону : НИР1_НОМЕРГРУППЫ_ФАМИЛИЯ_ИНИЦИАЛЫ_ОТЧЕТ и НИР1_НОМЕРГРУППЫ_ФАМИЛИЯ_ИНИЦИАЛЫ_ОТЗЫВ . Требования к обзору литературы : ( 1 балл ) Формат PDF + оформление согласно шаблону ВУЗа ( https : //etu.ru/assets/files/3004_4_ShABLON-otcheta-po-praktike.doc ) + структура ( == у вас должны быть разделы из списка ниже ) Введение , Укрупненное описание постановки задачи - ответы на ключевые вопросы согласно теме вашей НИР ( Актуальность , Проблема , Обхект и предмет исследования , Цель , Задачи ) в том смысле , в котором они изложены в курсе https : //stepik.org/lesson/104086/step/1 ? unit=78652 Обзор литературы Выводы . Список литературы , не менее пяти источников . ( 2 балла ) Соответствие раздела Обзор литературы - требованиям https : //stepik.org/lesson/104087/step/1 ? unit=78653 ( 1 балл ) в обзоре есть раздел “ План работы на весенний семестр ” . ( 1 балл ) в начале работы даны определения наиболее значимым терминам со ссылками на литературу . Пожалуйтса , помните , что отчет это прежде всего рассказ про ваше исследование ( про достижение поставленной объективной цели ) , а не про то , как вы изучали технологии / разбирались с чем-то и тд - это уже ваша субъективная история ( на 5 курсе про это не нужно писать - считается , что вы способны такое сделать самостоятельно и не тратя на это целый семестр ) . Пишите про объективные планы и результаты : Разработка , Проведение обзора аналогов / конкурентов за решение проблемы Эксперименты В помощь к освоению курса https : //stepik.org/course/10524 - материалы очного курса на его основе Слайды лекций ( work in progress ) Видео лекции 2021 Бонусы и штрафы : +1 балл за прохождение курса https : //stepik.org/course/10524/syllabus на 133 балла ( укажите ссылку на сертификат в форму в поле Комментарий . Если в профиле Степика ( == у получателя сертификата ) Фамилия или имя отличаются от ваших , то баллы аннулируются ) -1 балл за первую сдачу после 23:59 20.12.2023 по Московскому времени В случае , если уровень оригинальности работы ниже 65 % ( по системе антиплагиат ВУЗ ) , оценка аннулируется до исправления ( внезависимости от оценки в отзыве ) . Рекомендация по составлению отзыва руководителя ВАЖНО : опыт показывает , что научные руководители - люди крайне занятые и отвечать оперативно ( особенно в конце зачетной недели ) им очень тяжело . Поэтому кафедра крайне не рекомендует откладывать подготовку отчета и отзыва на последний момент . В случае трудностей в коммуникации с руководителем , подключайте к переписке Марка Марковича Заславского . В качестве образца для отзыва руководителя можно взять следующую структуру : Краткое описание поставленной задачи и темы ( 1-2 предложения ) Описание проделанной за семестр работы : Когда студент связался с руководителем , насколько был проактивен , Полнота и качество ( поиска , если был ) анализа источников в обзоре Правомерность выбора критериев и выводов в обзоре Суммарная оценка работы в семестре по пятибалльной шкале . Оценки за аттестацию Сессия : > = 4 & & < 8 баллов - Удовлетворительно > = 8 баллов - Хорошо ==10 баллов - Отлично Доп.сессия и день качества > = 4 & & < 9 баллов - Удовлетворительно > = 9 баллов - Хорошо ==10 баллов - Отлично Даты Сбор обзоров и отзывов с оценкой до 23:59 по Московскому времени 20.12.2023 через https : //forms.gle/tJXB6zStGBbVnfjo8 в виде ссылок на файл , Исправления высылать только новыми отправками в форму , Финальный дедлайн 10:00 26.12.23 по Московскому времени ( новые работы , исправления и любые другие отправки после этого срока НЕ БУДУТ ПРОВЕРЕНЫ и НЕ ПРИНИМАЮТСЯ ) Выставление оценок в ведомость 10:00 по Московскому времени 27 декабря . Результаты аттестации ( предварительные оценки ) Результаты аттестации https : //docs.google.com/spreadsheets/d/1QHtqAZb23eKck6UfVcU5_51ScGQD0G9-3kSR3Rulp1U/edit ? resourcekey # gid=1537650354 diplomants/start/first_year_attestation.txt · ",
                "Аттестация магистрантов первого семестра обучения - ",
                "",
                "✎ Аттестация магистрантов первого семестра обучения  Дипломникам » Дипломникам » Аттестация магистрантов первого семестра обучения diplomants : start : first_year_attestation This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Аттестация магистрантов первого семестра обучения ====== ===== Название и назначение практики ===== Учебная практика ( НИР ) Обучение в магистратуре подразумевает более высокий уровень требований к содержанию и результату магистерской работы , поэтому , предполагается что над дипломом вы будете работать все два года обучения . Поэтому , смысл данной практики - начать работу над магистерской диссертацией и определится с руководителем в осеннем семестре . Данная практика будет продолжена во втором и третьем семестрах обучения в магистратуре . Предполагается , что в следующие периоды вы разовьете ваши результаты из текущего семестра . Кафедра * * крайне не рекомендует * * делать менять руководителя или тему . Эти действия приведут ( И как правило приводят ) к ухудшению качества вашего диплома и часто - к не выходу на защиту . ===== Баллы ===== Аттестация складывается из двух компонент : - 0.8 х ( 0-5 ) баллов - отзыв руководителя НИР с оценкой и подписью . - 1.2 х ( 0-5 ) баллов - обзор литературы по будущей теме НИР . Обзор и отзыв оформляются двумя разными документами , название по шаблону : * * НИР1_НОМЕРГРУППЫ_ФАМИЛИЯ_ИНИЦИАЛЫ_ОТЧЕТ * * и * * НИР1_НОМЕРГРУППЫ_ФАМИЛИЯ_ИНИЦИАЛЫ_ОТЗЫВ * * . Требования к обзору литературы : - ( * * 1 балл * * ) Формат PDF + оформление согласно шаблону ВУЗа ( https : //etu.ru/assets/files/3004_4_ShABLON-otcheta-po-praktike.doc ) + структура ( == у вас должны быть разделы из списка ниже ) - * * Введение * * , - * * Укрупненное описание постановки задачи * * - ответы на ключевые вопросы согласно теме вашей НИР ( Актуальность , Проблема , Обхект и предмет исследования , Цель , Задачи ) в том смысле , в котором они изложены в курсе https : //stepik.org/lesson/104086/step/1 ? unit=78652 - * * Обзор литературы * * - * * Выводы * * . - * * Список литературы * * , не менее пяти источников . - ( * * 2 балла * * ) Соответствие раздела * * Обзор литературы * * - требованиям https : //stepik.org/lesson/104087/step/1 ? unit=78653 - ( * * 1 балл * * ) в обзоре есть раздел `` * * План работы на весенний семестр * * '' . - ( * * 1 балл * * ) в начале работы даны определения наиболее значимым терминам со ссылками на литературу . Пожалуйтса , помните , что отчет это прежде всего рассказ про ваше исследование ( про достижение поставленной объективной цели ) , а не про то , как вы изучали технологии / разбирались с чем-то и тд - это уже ваша субъективная история ( на 5 курсе про это не нужно писать - считается , что вы способны такое сделать самостоятельно и не тратя на это целый семестр ) . Пишите про объективные планы и результаты : - Разработка , - Проведение обзора аналогов / конкурентов за решение проблемы - Эксперименты В помощь к освоению курса https : //stepik.org/course/10524 - материалы очного курса на его основе * [ [ https : //drive.google.com/drive/folders/1I6ab1NgH9eE-brg-n2g9Z1bUINBXkpTY ? usp=sharing|Слайды лекций ( work in progress ) ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfop-HExHrSzLaO0YXG6ngNAD|Видео лекции 2021 ] ] Бонусы и штрафы : * +1 балл за прохождение курса https : //stepik.org/course/10524/syllabus на 133 балла ( укажите ссылку на сертификат в форму в поле Комментарий . Если в профиле Степика ( == у получателя сертификата ) Фамилия или имя отличаются от ваших , то баллы аннулируются ) * -1 балл за * * первую * * сдачу после 23:59 20.12.2023 по Московскому времени * В случае , если уровень оригинальности работы ниже 65 % ( по системе антиплагиат ВУЗ ) , оценка аннулируется до исправления ( внезависимости от оценки в отзыве ) . ===== Рекомендация по составлению отзыва руководителя ===== __ * * ВАЖНО * * __ : опыт показывает , что научные руководители - люди крайне занятые и отвечать оперативно ( особенно в конце зачетной недели ) им очень тяжело . Поэтому кафедра * * крайне не рекомендует откладывать * * подготовку отчета и отзыва на последний момент . В случае трудностей в коммуникации с руководителем , подключайте к переписке Марка Марковича Заславского . В качестве образца для отзыва руководителя можно взять следующую структуру : * Краткое описание поставленной задачи и темы ( 1-2 предложения ) * Описание проделанной за семестр работы : * * * Когда студент связался с руководителем * * , насколько был проактивен , * Полнота и качество ( поиска , если был ) анализа источников в обзоре * Правомерность выбора критериев и выводов в обзоре * Суммарная оценка работы в семестре по пятибалльной шкале . ===== Оценки за аттестацию ===== Сессия : - > = 4 & & < 8 баллов - Удовлетворительно - > = 8 баллов - Хорошо - ==10 баллов - Отлично Доп.сессия и день качества - > = 4 & & < 9 баллов - Удовлетворительно - > = 9 баллов - Хорошо - ==10 баллов - Отлично ===== Даты ===== - Сбор обзоров и отзывов с оценкой до 23:59 по Московскому времени 20.12.2023 через https : //forms.gle/tJXB6zStGBbVnfjo8 в виде ссылок на файл , - Исправления высылать только новыми отправками в форму , - Финальный дедлайн 10:00 26.12.23 по Московскому времени ( новые работы , исправления и любые другие отправки после этого срока НЕ БУДУТ ПРОВЕРЕНЫ и НЕ ПРИНИМАЮТСЯ ) - Выставление оценок в ведомость 10:00 по Московскому времени 27 декабря . ===== Результаты аттестации ( предварительные оценки ) ===== Результаты аттестации https : //docs.google.com/spreadsheets/d/1QHtqAZb23eKck6UfVcU5_51ScGQD0G9-3kSR3Rulp1U/edit ? resourcekey # gid=1537650354 diplomants/start/first_year_attestation.txt · ",
                "Аттестация магистрантов первого семестра обучения - Old revisions  Дипломникам » Дипломникам » Аттестация магистрантов первого семестра обучения diplomants : start : first_year_attestation Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/12/27 14:53 Аттестация магистрантов первого семестра обучения – [ Даты ] mark +73 B ( current ) 2023/12/26 15:50 Аттестация магистрантов первого семестра обучения mark +769 B 2023/11/22 07:53 Аттестация магистрантов первого семестра обучения mark +1.3 KB 2023/09/01 08:12 Аттестация магистрантов первого семестра обучения mark +17 B 2023/08/31 15:11 Аттестация магистрантов первого семестра обучения – [ Баллы ] mark ±0 B 2023/08/31 15:10 Аттестация магистрантов первого семестра обучения – [ Даты ] mark -7 B 2023/08/31 15:10 Аттестация магистрантов первого семестра обучения – [ Даты ] mark ±0 B 2023/03/06 12:52 Аттестация магистрантов первого семестра обучения – [ Баллы ] mark +286 B 2022/12/20 18:35 Аттестация магистрантов первого семестра обучения – [ Баллы ] mark +12 B 2022/12/20 18:34 Аттестация магистрантов первого семестра обучения – [ Даты ] mark +156 B 2022/12/20 07:48 Аттестация магистрантов первого семестра обучения mark -11 B 2022/12/16 16:57 Аттестация магистрантов первого семестра обучения mark +109 B 2022/12/13 08:11 Аттестация магистрантов первого семестра обучения mark +87 B 2022/12/10 09:08 Аттестация магистрантов первого семестра обучения – external edit 127.0.0.1 ±0 B 2022/12/09 07:09 Аттестация магистрантов первого семестра обучения mark +8 B 2022/12/06 06:48 Аттестация магистрантов первого семестра обучения mark +80 B 2022/12/06 06:47 Аттестация магистрантов первого семестра обучения mark +762 B 2022/11/21 15:17 Аттестация магистрантов первого семестра обучения – [ Результаты аттестации ( предварительные оценки ) ] mark -14 B 2022/11/21 15:09 Аттестация магистрантов первого семестра обучения – [ Даты ] mark ±0 B 2022/09/29 09:41 Аттестация магистрантов первого семестра обучения – [ Баллы ] mark +563 B 2022/09/29 09:37 Аттестация магистрантов первого семестра обучения – [ Оценки за аттестацию ] mark +206 B Show differences between selected revisions less recent > > diplomants/start/first_year_attestation.txt · ",
                "Аттестация магистрантов первого семестра обучения - "
            ]
        },
        {
            "name": "(производственная практика НИР)Аттестация магистрантов второго семестра обучения",
            "url": "/doku.php/diplomants:start:first_year_spring_attestation",
            "date": "\"2024/03/04 09:17\"",
            "data": [
                "Аттестация магистров ( НИР ) - второй семестр  Дипломникам » Дипломникам » Аттестация магистров ( НИР ) - второй семестр diplomants : start : first_year_spring_attestation Table of Contents Аттестация магистров ( НИР ) - второй семестр Общая идея Задания Подготовка отчета Автоматическая проверка вашего доклада Бонусы за срочность Конвертация баллов в оценку Дедлайны сдачи отчетов Таблица с оценками Аттестация магистров ( НИР ) - второй семестр Общая идея В данном семестре ваша аттестация включает в себя автоматизированную проверку вашего отчета и вашего доклада . Эти проверки реализованы в виде задач : https : //e.moevm.info/course/view.php ? id=86 # section-2 ( блок “ Аттестация 2 семестр ( Производственная практика НИР ) “ ) . Отчеты , успешно прошедшие автоматизированные проверки ( и записи ваших докладов ) будут проверены преподвателем . Возможна также выборочная проверка ДО этого момента . Просим магистров заполнить форму ( без нее не будет подгрузки данных в таблицу и не подсчитается оценка ) https : //forms.gle/9E3Rjyb3MursZuT7A Задания Подготовка отчета Вам необходимо подготовить и сдать отчет через автоматизированную систему проверки ( за это вы можете получить 0-4 балла пропорционально степени соответствия критериям ) . Отчет также будет проверен и преподавателем , но только при условии , что по итогам проверок вы набрали максимальный балл ( за это еще 0-2 балла ) . Количество попыток не ограничено ( но имейте в виду , что из желающих проверки образуется очередь и сам по себе процесс не мгновенный - возможны задержки . Шаблон https : //drive.google.com/file/d/1CO2DSPHhH60MG-89gZEwVnFCVZgoIAx_/view ? usp=drive_link Если использовать другой шаблон , игнорировать стили , редактировать в Google Docs , то велик риск , что автоматические проверки отметят ваш отчет как ошибочный . Ссылка для отправки отчета https : //e.moevm.info/mod/lti/view.php ? id=2683 ( вначале необходимо получить доступ к курсу https : //e.moevm.info/course/view.php ? id=86 # section-2 ) . Общие требования к составу отчета ( при авт проверке могут быть дополнительные критерии - система укажет вам , где ошибка ) : Раздел “ Постановка задачи ” - актуальность , проблема , цель , задачи . Раздел “ Результаты работы в весеннем семестре ” подраздел “ План ” - что планировалось сделать на этот семестр подраздел “ Результат ” - что получить сделать подтверждение результата ( должен быть хотя бы один пункт , иначе баллы не засчитываются ) ссылки на репозиторий с исходным кодом ( вы написали что-то с нуля , расширили существующий проект , подготовили примеры для ваших алгоритмов ) , описание разработанных вами алгоритмов / моделей ( не только текстом , но в виде схем , псевдокода , математических выкладок , графиков ) , библиографическая ссылка на статью ( допускаются как журнальные статьи , так и статьи с конференций ) с результатами по итогам семестра ( если статья написана коллективом авторов , нужно указать , что конкретно делал каждый из них ) , описание разработанных результатов - что именно было разработано в течение семестра , примеры работы . Раздел “ План работы на осенний семестр ” Раздел “ Скан отзыва руководителя ” - Скан отзыва руководителя с оценкой ( https : //drive.google.com/drive/folders/1utqbmRTmx2_qGXwa0YZ4fPvD0TRa0qRw ? usp=sharing ) Оформление отчета Формат docx Имя файла НОМЕР_ГРУППЫ-Фамилия_ИНИЦИАЛЫ.pdf Соответствие структуре разделов и шаблону выше Наличие списка литературы и ссылок на его элементы в тексте работы . Отчеты могут быть выборочно проверены вручную . В таком случае на оценку негативно повлияет : плагиат ( минимальная уровень оригинальности - 65 % ) , поразительное сходство с результатами осеннего семестра ( попытка сдать осенний отчет или его версию с небольшими изменениями ) , отсутствие наблюдаемых и осязаемых результатов работы студента . Автоматическая проверка вашего доклада Вам необходимо по результатам работы в семестре : подготовить презентацию не более 5 слайдов ( титульный , план на этот семестр , результаты , план на следующий ) , формат pptx провести 3 тренировки в рамках Тренажера публичных выступлений набрать не менее Н баллов в самой системе . Эти баллы будут пропорционально пересчитаны в 0-4 баллов к рейтингу данной аттестации . Если вы не набрали нужное количество баллов , то тренировки можно повторить . Мы не рекомендуем откладывать на последний момент прохождение тренировок - скорее всего , из-за повышенной нагрузки система может отвечать с большими задержками . Ссылка для прохождения тренировок https : //e.moevm.info/mod/lti/view.php ? id=2682 ( вначале необходимо получить доступ к курсу https : //e.moevm.info/course/view.php ? id=86 # section-2 ) . Бонусы за срочность Все время Московское За первую сдачу в срок до 25.05.2024 23:59 - вы получаете +1 балл по десятибалльной шкале . За первую сдачу в срок после 04.06.2024 23:59 - вы получаете -1 балл по десятибалльной шкале . Конвертация баллов в оценку Необходимое ( но не достаточное ) условие для получения положительной оценки - наличие отчета . Ваш рейтинг складывается из оценки за доклад ( 0-4 балла , формируется автоматической проверкой ) , оценки за отчет ( 0-4 балла , формируется автоматической проверкой ) и результатом проверки отчета преподавателем ( 0-2 балла , для тех , кто выполнил все критерии авт . проверки отчета ) . Итого 0-10 баллов Оценка по десятибальной системе преобразуется : > =3 & & < 6 баллов - “ Удовлетворительно ” > = 6 баллов - “ Хорошо ” > = 9 баллов - “ Отлично ” Дедлайны сдачи отчетов Все время - Московское . Мягкий дедлайн - 29.05.2024 23:59 Жесткий дедлайн - 05.06.2024 10:00 Срок окончательной проверки 06.06.2024 15:00 Как работают дедлайны : Все присланное до мягкого дедлайна будет проверено до наступления жесткого дедлайна Все присланное до жесткого дедлайна будет проверено до срока окончательной проверки Все присланное после жесткого дедлайна будет с высокой вероятностью проигнорировано . Таблица с оценками https : //docs.google.com/spreadsheets/d/1yjT6MKyvSMMoQvlXX5AjvyCPDoqSC0AOSmwBQ1tu5no/edit ? resourcekey # gid=1099273339 diplomants/start/first_year_spring_attestation.txt · ",
                "Аттестация магистров ( НИР ) - второй семестр - ",
                "",
                "✎ Аттестация магистров ( НИР ) - второй семестр  Дипломникам » Дипломникам » Аттестация магистров ( НИР ) - второй семестр diplomants : start : first_year_spring_attestation This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Аттестация магистров ( НИР ) - второй семестр ====== ===== Общая идея ===== В данном семестре ваша аттестация включает в себя автоматизированную проверку вашего отчета и вашего доклада . Эти проверки реализованы в виде задач : https : //e.moevm.info/course/view.php ? id=86 # section-2 ( блок * * '' Аттестация 2 семестр ( Производственная практика НИР ) '' * * ) . Отчеты , успешно прошедшие автоматизированные проверки ( и записи ваших докладов ) будут проверены преподвателем . Возможна также выборочная проверка ДО этого момента . Просим магистров заполнить форму ( без нее не будет подгрузки данных в таблицу и не подсчитается оценка ) https : //forms.gle/9E3Rjyb3MursZuT7A ===== Задания ===== ==== Подготовка отчета ==== Вам необходимо подготовить и сдать отчет через автоматизированную систему проверки ( за это вы можете получить 0-4 балла пропорционально степени соответствия критериям ) . Отчет также будет проверен и преподавателем , но только при условии , что по итогам проверок вы набрали максимальный балл ( за это еще 0-2 балла ) . Количество попыток не ограничено ( но имейте в виду , что из желающих проверки образуется очередь и сам по себе процесс не мгновенный - возможны задержки . Шаблон https : //drive.google.com/file/d/1CO2DSPHhH60MG-89gZEwVnFCVZgoIAx_/view ? usp=drive_link Если использовать другой шаблон , игнорировать стили , редактировать в Google Docs , то велик риск , что автоматические проверки отметят ваш отчет как ошибочный . Ссылка для отправки отчета https : //e.moevm.info/mod/lti/view.php ? id=2683 ( вначале необходимо получить доступ к курсу https : //e.moevm.info/course/view.php ? id=86 # section-2 ) . Общие требования к составу отчета ( при авт проверке могут быть дополнительные критерии - система укажет вам , где ошибка ) : * Раздел `` * * Постановка задачи * * '' - актуальность , проблема , цель , задачи . * Раздел `` * * Результаты работы в весеннем семестре * * '' * подраздел `` * * План * * '' - что планировалось сделать на этот семестр * подраздел `` * * Результат * * '' - что получить сделать * подтверждение результата ( должен быть хотя бы один пункт , иначе баллы не засчитываются ) * ссылки на репозиторий с исходным кодом ( вы написали что-то с нуля , расширили существующий проект , подготовили примеры для ваших алгоритмов ) , * описание разработанных вами алгоритмов / моделей ( не только текстом , но в виде схем , псевдокода , математических выкладок , графиков ) , * библиографическая ссылка на статью ( допускаются как журнальные статьи , так и статьи с конференций ) с результатами по итогам семестра ( если статья написана коллективом авторов , нужно указать , что конкретно делал каждый из них ) , * описание разработанных результатов - что именно было разработано в течение семестра , * примеры работы . * Раздел `` * * План работы на осенний семестр * * '' * Раздел `` * * Скан отзыва руководителя * * '' - Скан отзыва руководителя с оценкой ( https : //drive.google.com/drive/folders/1utqbmRTmx2_qGXwa0YZ4fPvD0TRa0qRw ? usp=sharing ) * Оформление отчета * Формат docx * Имя файла * * НОМЕР_ГРУППЫ-Фамилия_ИНИЦИАЛЫ.pdf * * * Соответствие структуре разделов и шаблону выше * Наличие списка литературы и ссылок на его элементы в тексте работы . Отчеты могут быть выборочно проверены вручную . В таком случае на оценку негативно повлияет : * плагиат ( минимальная уровень оригинальности - 65 % ) , * поразительное сходство с результатами осеннего семестра ( попытка сдать осенний отчет или его версию с небольшими изменениями ) , * отсутствие наблюдаемых и осязаемых результатов работы студента . ==== Автоматическая проверка вашего доклада ==== Вам необходимо по результатам работы в семестре : * подготовить презентацию не более 5 слайдов ( титульный , план на этот семестр , результаты , план на следующий ) , формат pptx * провести 3 тренировки в рамках Тренажера публичных выступлений * набрать не менее Н баллов в самой системе . Эти баллы будут пропорционально пересчитаны в 0-4 баллов к рейтингу данной аттестации . Если вы не набрали нужное количество баллов , то тренировки можно повторить . Мы не рекомендуем откладывать на последний момент прохождение тренировок - скорее всего , из-за повышенной нагрузки система может отвечать с большими задержками . Ссылка для прохождения тренировок https : //e.moevm.info/mod/lti/view.php ? id=2682 ( вначале необходимо получить доступ к курсу https : //e.moevm.info/course/view.php ? id=86 # section-2 ) . ==== Бонусы за срочность ==== Все время Московское * За первую сдачу в срок до 25.05.2024 23:59 - вы получаете +1 балл по десятибалльной шкале . * За первую сдачу в срок после 04.06.2024 23:59 - вы получаете -1 балл по десятибалльной шкале . ==== Конвертация баллов в оценку ==== Необходимое ( но не достаточное ) условие для получения положительной оценки - наличие отчета . Ваш рейтинг складывается из оценки за доклад ( 0-4 балла , формируется автоматической проверкой ) , оценки за отчет ( 0-4 балла , формируется автоматической проверкой ) и результатом проверки отчета преподавателем ( 0-2 балла , для тех , кто выполнил все критерии авт . проверки отчета ) . Итого 0-10 баллов Оценка по десятибальной системе преобразуется : * > =3 & & < 6 баллов - `` Удовлетворительно '' * > = 6 баллов - `` Хорошо '' * > = 9 баллов - `` Отлично '' ===== Дедлайны сдачи отчетов ===== Все время - Московское . * Мягкий дедлайн - 29.05.2024 23:59 * Жесткий дедлайн - 05.06.2024 10:00 * Срок окончательной проверки 06.06.2024 15:00 Как работают дедлайны : * Все присланное до * * мягкого дедлайна * * будет проверено до наступления * * жесткого дедлайна * * * Все присланное до * * жесткого дедлайна * * будет проверено до * * срока окончательной проверки * * * Все присланное после * * жесткого дедлайна * * будет с высокой вероятностью проигнорировано . ===== Таблица с оценками ===== https : //docs.google.com/spreadsheets/d/1yjT6MKyvSMMoQvlXX5AjvyCPDoqSC0AOSmwBQ1tu5no/edit ? resourcekey # gid=1099273339 diplomants/start/first_year_spring_attestation.txt · ",
                "Аттестация магистров ( НИР ) - второй семестр - Old revisions  Дипломникам » Дипломникам » Аттестация магистров ( НИР ) - второй семестр diplomants : start : first_year_spring_attestation Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2024/03/04 09:17 Аттестация магистров ( НИР ) - второй семестр – [ Подготовка отчета ] mark +63 B ( current ) 2024/03/04 09:16 Аттестация магистров ( НИР ) - второй семестр – [ Общая идея ] mark +31 B 2024/03/04 09:15 Аттестация магистров ( НИР ) - второй семестр – [ Общая идея ] mark -53 B 2024/02/28 13:22 Аттестация магистров ( НИР ) - второй семестр – [ Автоматическая проверка вашего доклада ] mark +53 B 2024/02/28 13:22 Аттестация магистров ( НИР ) - второй семестр – [ Подготовка отчета ] mark +178 B 2024/02/28 13:21 Аттестация магистров ( НИР ) - второй семестр – [ Автоматическая проверка вашего доклада ] mark +125 B 2024/02/28 10:28 Аттестация магистров ( НИР ) - второй семестр – [ Подготовка отчета ] mark -164 B 2024/02/28 10:22 Аттестация магистров ( НИР ) - второй семестр mark +1010 B 2024/02/28 10:11 Аттестация магистров ( НИР ) - второй семестр – [ Автоматическая проверка вашего доклада ] mark +94 B 2024/02/28 10:06 Аттестация магистров ( НИР ) - второй семестр mark +315 B 2024/02/26 15:09 Аттестация магистров ( НИР ) - второй семестр – [ Подготовка отчета ] mark +118 B 2024/02/26 15:08 Аттестация магистров ( НИР ) - второй семестр – [ Подготовка отчета ] mark +528 B 2024/02/26 15:07 Аттестация магистров ( НИР ) - второй семестр – [ Автоматическая проверка вашего доклада ] mark ±0 B 2024/02/26 15:07 Аттестация магистров ( НИР ) - второй семестр – [ Выступление с докладом о проделанной работе ] mark -8 B 2024/02/26 15:06 Аттестация магистров ( НИР ) - второй семестр – [ Выступление с докладом о проделанной работе ] mark -346 B 2024/02/26 15:04 Аттестация магистров ( НИР ) - второй семестр – [ Бонусы за срочность ] mark ±0 B 2024/02/26 15:04 Аттестация магистров ( НИР ) - второй семестр – [ Дедлайны сдачи отчетов ] mark ±0 B 2024/02/26 15:03 Аттестация магистров ( НИР ) - второй семестр – [ Отправка результатов ] mark +627 B 2024/02/26 15:01 Аттестация магистров ( НИР ) - второй семестр – [ Таблица с оценками ] mark +2 B 2024/02/26 15:01 Аттестация магистров ( НИР ) - второй семестр – [ Отправка результатов ] mark +477 B 2024/02/26 08:51 Аттестация магистров ( НИР ) - второй семестр – [ Отправка результатов ] mark +71 B Show differences between selected revisions less recent > > diplomants/start/first_year_spring_attestation.txt · ",
                "Аттестация магистров ( НИР ) - второй семестр - "
            ]
        }
    ],
    "6 курс": [
        {
            "name": "Компьютерное Зрение",
            "url": "/doku.php/courses:cvai",
            "date": "\"2023/11/24 20:01\"",
            "data": [
                "Компьютерное Зрение  Курсы » Компьютерное Зрение courses : cvai Table of Contents Компьютерное Зрение Практика Пулл реквесты Оценка за предмет Критерии выставления оценок Компьютерное Зрение Таблица успехов Лекции Описание практических работ ( 3 пр будет позже ) Проекты Практика Общая идея - учимся работать с ResNet , оптимизировать модели при помощи квантизации , onnx . Далее проект , который нацелен на решения одной из задач - измерение глубины изображения , сегментация , детекции и др . Также , если бригаде хочется решить другую задачу ( проект ) , можно согласовать с преподавателем тему и требования к ней . Инструменты : Pytorch ( https : //pytorch.org/ ) Onnx ( https : //onnx.ai/ ) Каждый проект выполняется бригадой из 2-3 человек . Для формирования бригады необходимо написать на почту преподавателю с указанием всех участников ( т.е . указать в копии всех участников ) . Все проектная деятельность выполняется в репо – https : //github.com/moevm/cv-ai-2023 Подробные требования к каждому проекту указаны здесь . В каждом проекте будут критерии , где каждый будет оцениваться в определенное кол-во баллов . Сумма баллов за все критерии 4 . Пулл реквесты Все работы должны выполняться в отдельной ветке Все практические работы должны выполняться в папке tasks/task [ номер практического задания ] / [ номер группы ] _ [ фамилия ] Все проекты выполняются в папке projects/ [ номер группы ] _ [ номер_бригады ] _ [ название_проекта ] ( номер бригады будет в таблице успеваемости после создания бригады ) Оценка за предмет Балльная система 0-10 баллов . Задания оценивается следующим образом : 1 практическое задание - 3 балла 2 практическое задание - 3 балла 3 практическое задание - 2 балла ( Не в 2023 ) Проект – 4 балла Всем , кто выполнит проект до 05.12.2023 , +1 балл к рейтингу . Дедлайн последней отправки - 10:00 по Москве 22.12.2023 . Всем , кто присылает позднее -1 балл к рейтингу Критерии выставления оценок Отлично > = 9 баллов Хорошо > = 7 баллов Удовлетворительно > = 5 баллов courses/cvai.txt · ",
                "Компьютерное Зрение - ",
                "",
                "✎ Компьютерное Зрение  Курсы » Компьютерное Зрение courses : cvai This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Компьютерное Зрение ====== * [ [ https : //docs.google.com/spreadsheets/d/1GJnC9Wa5d7W5VTkFXVWmsnM0r9LA5aixicWhHlk-Tgo/edit ? usp=sharing|Таблица успехов ] ] * [ [ https : //drive.google.com/drive/folders/1_ORzY0yETfvgzt -- ocEW0EzGMfd3WDV9 ? usp=sharing|Лекции ] ] * [ [ https : //drive.google.com/drive/folders/1Ik_4J-zHCVD_7xy7YWQDLUqql2OsGtjn ? usp=sharing|Описание практических работ ( 3 пр будет позже ) ] ] * [ [ https : //drive.google.com/drive/folders/15uBKmQ7jxcKJuW6_llL1vjW-PrDkvfhX ? usp=sharing|Проекты ] ] ===== Практика ===== Общая идея - учимся работать с ResNet , оптимизировать модели при помощи квантизации , onnx . Далее проект , который нацелен на решения одной из задач - измерение глубины изображения , сегментация , детекции и др . Также , если бригаде хочется решить другую задачу ( проект ) , можно согласовать с преподавателем тему и требования к ней . Инструменты : * Pytorch ( https : //pytorch.org/ ) * Onnx ( https : //onnx.ai/ ) Каждый проект выполняется бригадой из 2-3 человек . Для формирования бригады необходимо написать на почту преподавателю с указанием всех участников ( т.е . указать в копии всех участников ) . Все проектная деятельность выполняется в репо – https : //github.com/moevm/cv-ai-2023 Подробные требования к каждому проекту указаны [ [ https : //drive.google.com/drive/folders/15uBKmQ7jxcKJuW6_llL1vjW-PrDkvfhX ? usp=sharing|здесь ] ] . В каждом проекте будут критерии , где каждый будет оцениваться в определенное кол-во баллов . Сумма баллов за все критерии 4 . ==== Пулл реквесты ==== * Все работы должны выполняться в отдельной ветке * Все практические работы должны выполняться в папке * * tasks/task [ номер практического задания ] / [ номер группы ] _ [ фамилия ] * * * Все проекты выполняются в папке * * projects/ [ номер группы ] _ [ номер_бригады ] _ [ название_проекта ] * * ( номер бригады будет в таблице успеваемости после создания бригады ) ===== Оценка за предмет ===== Балльная система 0-10 баллов . Задания оценивается следующим образом : * 1 практическое задание - 3 балла * 2 практическое задание - 3 балла * 3 практическое задание - 2 балла ( * * Не в 2023 * * ) * Проект – 4 балла Всем , кто выполнит проект до * * 05.12.2023 * * , +1 балл к рейтингу . Дедлайн последней отправки - 10:00 по Москве * * 22.12.2023 * * . Всем , кто присылает позднее -1 балл к рейтингу ==== Критерии выставления оценок ==== * Отлично > = 9 баллов * Хорошо > = 7 баллов * Удовлетворительно > = 5 баллов courses/cvai.txt · ",
                "Компьютерное Зрение - Old revisions  Курсы » Компьютерное Зрение courses : cvai Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/11/24 20:01 Компьютерное Зрение sergey_glazunov +19 B ( current ) 2023/10/17 21:13 Компьютерное Зрение – [ Практика ] sergey_glazunov -3 B 2023/10/17 21:09 Компьютерное Зрение sergey_glazunov -59 B 2023/10/17 21:09 Компьютерное Зрение sergey_glazunov -6 B 2023/10/14 18:35 Компьютерное Зрение – [ Оценка за предмет ] sergey_glazunov +8 B 2023/10/14 18:35 Компьютерное Зрение – [ Пулл реквесты ] sergey_glazunov -5 B 2023/10/14 18:33 Компьютерное Зрение sergey_glazunov +924 B 2023/10/14 15:56 Компьютерное Зрение sergey_glazunov +84 B 2023/10/14 15:56 Компьютерное Зрение sergey_glazunov -1 B 2023/10/14 15:55 Компьютерное Зрение sergey_glazunov +85 B 2023/10/14 15:50 Компьютерное Зрение sergey_glazunov +109 B 2023/10/08 10:48 Компьютерное Зрение sergey_glazunov +12 B 2023/10/07 20:14 Компьютерное Зрение sergey_glazunov +24 B 2023/10/07 20:12 Компьютерное Зрение sergey_glazunov +57 B 2023/10/07 19:09 Компьютерное Зрение sergey_glazunov +2.3 KB 2023/10/03 14:18 Компьютерное Зрение sergey_glazunov ±0 B 2023/10/03 08:32 Компьютерное Зрение – created mark +52 B Show differences between selected revisions courses/cvai.txt · ",
                "Компьютерное Зрение - "
            ]
        },
        {
            "name": "Пространственный искусственный интеллект",
            "url": "/doku.php/courses:spatial_ai",
            "date": "\"2023/11/06 20:30\"",
            "data": [
                "Пространственный искусственный интеллект  Курсы » Пространственный искусственный интеллект courses : spatial_ai Table of Contents Пространственный искусственный интеллект Общая информация Практика Оценка Пространственный искусственный интеллект Общая информация Таблица успехов Лекции Записи лекций 2023 Записи лекций 2022 Записи лекций 2021 Практика Общая идея - строим модели / облака точек по датасетам с дронов ( через OpenDroneMap ) и анализируем / обрабатываем результат . Инструменты : https : //github.com/OpenDroneMap/ODM - инструмент для построения облаков / моделей и их привязки по координатам https : //github.com/OpenDroneMap/ODMdata - датасеты https : //github.com/leomariga/pyRANSAC-3D - поиск объектов Общая постановка задачи : Создайте программу , которая для указанного датасета выполняет последовательно несколько операций ( перечислены ниже в списке вариантов ) . Работа программы обернута в Docker . Результат загружаем отдельной веткой и PR в репозиторий . Промежуточные и итоговые модели / облака точек загрузите на https : //sketchfab.com Примеры работы вашего задания , инструкцию по запуску и иллюстрации работы каждого из этапов необходим собрать в отчет ( docx/odt + pdf ) Варианты заданий . Номер Датасет Что делать с датасетом Как обработать результаты 1 boruszyn Построить облако точек и 3d модель , сделать привязку к координатам Идентифицировать и вычислить площадь отверстий в модели Зашить отверстия Используя данные геопривязки , перетекстурировать модель ( цвета полигонов пропорциональны их высоте над уровнем моря , от зеленого до красного ) Загрубить области полигонов , где модель ниже определенной высоты 2 seneca Построить облако точек и 3d модель , сделать привязку к координатам Загрубить все области , которые не являются полями ( использовать данные по текстурам ) Посчитать площадь полей С помощью RANSAC идентифицировать дороги Зашить край модели 3 aukerman Построить облако точек и 3d модель , сделать привязку к координатам Зашить отверстия Идентифицировать лес , посчитать его объем Зашить край модели Построить маршрут облета вокруг леса так , чтобы воображаемый дрон сумел достаточно подробно его сфотографировать 4 caliterra Построить облако точек и 3d модель , сделать привязку к координатам Зашить отверстия Идентифицировать через RANSAC все тюки Идентифицировать деревья Реализовать вычисление площади всех областей , которые лежат ниже определенной высоты 5 sance Построить облако точек и 3d модель , сделать привязку к координатам Зашить отверстия Загрубить модель Идентифицировать ров Вычислить длину и объем рва 6 toledo Построить облако точек и 3d модель , сделать привязку к координатам Идентифицировать деревья Идентифицировать дома Идентифицировать дороги Посчитать объемы домов и деревьев 7 https : //github.com/OpenDroneMap/odm_data_copr/tree/master Построить облако точек и 3d модель , сделать привязку к координатам Зашить отверстия , Загрубить модель , Зашумить модель , Перетекститурировать модель ( цвет пропорционален площади полигона ) Оценка Балльная система 0-10 баллов . Важно ! в 2023 году оценка по Пространственному ИИ будет считаться оценка за проект по предмету “ Нейронные сети в компьютерном зрении ” ( ссылка ) Задание оценивается следующим образом : 2 балла Создан корректный PR , есть dockerfile , отчет 2 балла Приложение запускается через докер , выполняет построение облака точек и 3d-модели 2 балла Выполнена половина заданий из “ Обработки результатов ” 2 балла Выполнена вторая половина заданий из “ Обработки результатов ” 2 балла Решение “ Обработки результатов ” сделано в обобщенной форме ( минимальный хардкод ) Всем , кто выполнить первые два пункта из списка выше до 01.12.2023 , +1 балл к рейтингу Дедлайн последней отправки - 10:00 по Москве 20.12.2023 . Всем , кто присылает позднее -1 балл к рейтингу В 2023 актуальные дедлайны написаны в разделе Компьютерное Зрение Критерии выставления оценок Отлично > = 9 баллов Хорошо > = 7 баллов Удовлетворительно > = 5 баллов courses/spatial_ai.txt · ",
                "Пространственный искусственный интеллект - ",
                "",
                "✎ Пространственный искусственный интеллект  Курсы » Пространственный искусственный интеллект courses : spatial_ai This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Пространственный искусственный интеллект ====== ===== Общая информация ===== * [ [ https : //docs.google.com/spreadsheets/d/1jIyijVOxg-P6qQe0fT-0a-zfNXJtYo-YrHPR4SjiV_E/edit # gid=0|Таблица успехов ] ] * [ [ https : //drive.google.com/drive/folders/1sfFbpPmzOVJlzlfpXZMbThqLkfO7m7aT|Лекции ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfoqBKhjD316ncDHxs-2jnlNT|Записи лекций 2023 ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyforO_GC4wJWgx-_Arkf6SSSU|Записи лекций 2022 ] ] * [ [ https : //www.youtube.com/playlist ? list=PLplYTvoIyfool4oRmF3wRj21SnoFT-oi2|Записи лекций 2021 ] ] ===== Практика ===== Общая идея - строим модели / облака точек по датасетам с дронов ( через OpenDroneMap ) и анализируем / обрабатываем результат . Инструменты : * https : //github.com/OpenDroneMap/ODM - инструмент для построения облаков / моделей и их привязки по координатам * https : //github.com/OpenDroneMap/ODMdata - датасеты * https : //github.com/leomariga/pyRANSAC-3D - поиск объектов Общая постановка задачи : - Создайте программу , которая для указанного датасета выполняет последовательно несколько операций ( перечислены ниже в списке вариантов ) . - Работа программы обернута в Docker . - Результат загружаем отдельной веткой и PR в репозиторий . - Промежуточные и итоговые модели / облака точек загрузите на https : //sketchfab.com - Примеры работы вашего задания , инструкцию по запуску и иллюстрации работы каждого из этапов необходим собрать в отчет ( docx/odt + pdf ) Варианты заданий . ^ Номер ^ Датасет | * * Что делать с датасетом * * | * * Как обработать результаты * * | | 1 | boruszyn | Построить облако точек и 3d модель , сделать привязку к координатам | Идентифицировать и вычислить площадь отверстий в модели\\\\ Зашить отверстия\\\\ Используя данные геопривязки , перетекстурировать модель ( цвета полигонов пропорциональны их высоте над уровнем моря , от зеленого до красного ) \\\\ Загрубить области полигонов , где модель ниже определенной высоты | | 2 | seneca | Построить облако точек и 3d модель , сделать привязку к координатам | Загрубить все области , которые не являются полями ( использовать данные по текстурам ) \\\\ Посчитать площадь полей\\\\ С помощью RANSAC идентифицировать дороги\\\\ Зашить край модели | | 3 | aukerman | Построить облако точек и 3d модель , сделать привязку к координатам | Зашить отверстия\\\\ Идентифицировать лес , посчитать его объем\\\\ Зашить край модели\\\\ Построить маршрут облета вокруг леса так , чтобы воображаемый дрон сумел достаточно подробно его сфотографировать | | 4 | caliterra | Построить облако точек и 3d модель , сделать привязку к координатам | Зашить отверстия\\\\ Идентифицировать через RANSAC все тюки\\\\ Идентифицировать деревья\\\\ Реализовать вычисление площади всех областей , которые лежат ниже определенной высоты | | 5 | sance | Построить облако точек и 3d модель , сделать привязку к координатам | Зашить отверстия\\\\ Загрубить модель\\\\ Идентифицировать ров\\\\ Вычислить длину и объем рва | | 6 | toledo | Построить облако точек и 3d модель , сделать привязку к координатам | Идентифицировать деревья\\\\ Идентифицировать дома\\\\ Идентифицировать дороги\\\\ Посчитать объемы домов и деревьев | | 7 | https : //github.com/OpenDroneMap/odm_data_copr/tree/master | Построить облако точек и 3d модель , сделать привязку к координатам | Зашить отверстия , Загрубить модель , Зашумить модель , Перетекститурировать модель ( цвет пропорционален площади полигона ) | ===== Оценка ===== Балльная система 0-10 баллов . < note important > Важно ! в 2023 году оценка по Пространственному ИИ будет считаться оценка за проект по предмету `` Нейронные сети в компьютерном зрении '' ( [ [ https : //se.moevm.info/doku.php/courses : cvai|ссылка ] ] ) < /note > Задание оценивается следующим образом : * 2 балла Создан корректный PR , есть dockerfile , отчет * 2 балла Приложение запускается через докер , выполняет построение облака точек и 3d-модели * 2 балла Выполнена половина заданий из `` Обработки результатов '' * 2 балла Выполнена вторая половина заданий из `` Обработки результатов '' * 2 балла Решение `` Обработки результатов '' сделано в обобщенной форме ( минимальный хардкод ) Всем , кто выполнить первые два пункта из списка выше до 01.12.2023 , +1 балл к рейтингу Дедлайн последней отправки - 10:00 по Москве 20.12.2023 . Всем , кто присылает позднее -1 балл к рейтингу < note warning > В 2023 актуальные дедлайны написаны в разделе [ [ https : //se.moevm.info/doku.php/courses : cvai|Компьютерное Зрение ] ] < /note > Критерии выставления оценок * Отлично > = 9 баллов * Хорошо > = 7 баллов * Удовлетворительно > = 5 баллов courses/spatial_ai.txt · ",
                "Пространственный искусственный интеллект - Old revisions  Курсы » Пространственный искусственный интеллект courses : spatial_ai Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/11/06 20:30 Пространственный искусственный интеллект – [ Оценка ] sergey_glazunov +514 B ( current ) 2023/09/05 08:35 Пространственный искусственный интеллект – [ Table ] mark -2.1 KB 2023/09/05 08:34 Пространственный искусственный интеллект mark +112 B 2022/12/10 09:08 Пространственный искусственный интеллект – external edit 127.0.0.1 ±0 B 2022/12/01 10:54 Пространственный искусственный интеллект – [ Table ] mark +1.1 KB 2022/10/21 09:27 Пространственный искусственный интеллект mark +133 B 2022/09/09 13:27 Пространственный искусственный интеллект – [ Table ] mark +482 B 2022/09/07 12:54 Пространственный искусственный интеллект mark +6 B 2022/09/07 10:07 Пространственный искусственный интеллект – [ Оценка ] mark +321 B 2022/09/07 10:00 Пространственный искусственный интеллект – [ Table ] mark +165 B 2022/09/07 09:57 Пространственный искусственный интеллект – [ Table ] mark ±0 B 2022/09/07 09:56 Пространственный искусственный интеллект – [ Table ] mark +379 B 2022/09/07 09:44 Пространственный искусственный интеллект – [ Table ] mark +21 B 2022/09/07 09:42 Пространственный искусственный интеллект – [ Оценка ] mark ±0 B 2022/09/07 09:42 Пространственный искусственный интеллект – [ Оценка ] mark +975 B 2022/09/07 09:34 Пространственный искусственный интеллект – [ Table ] mark +3 KB 2022/09/07 09:23 Пространственный искусственный интеллект – [ Table ] mark +952 B 2022/09/07 09:17 Пространственный искусственный интеллект – [ Практика ] mark +467 B 2022/09/07 09:11 Пространственный искусственный интеллект – [ Практика ] mark +1.5 KB 2022/09/07 08:56 Пространственный искусственный интеллект – [ Оценка ] mark -179 B 2022/09/07 08:55 Пространственный искусственный интеллект – [ Дополнительное задание для желающих ] mark -1.3 KB Show differences between selected revisions less recent > > courses/spatial_ai.txt · ",
                "Пространственный искусственный интеллект - "
            ]
        },
        {
            "name": "Smart Data",
            "url": "/doku.php/courses:smart_data",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Smart Data  Курсы » Smart Data courses : smart_data Table of Contents Smart Data Расписание лекций Лекции Введение Большие данные и хранилища больших данных Графы знаний Лабораторные работы Графы знаний Учебные пособия Аттестационная ведомость Smart Data Расписание лекций Лекции по средам , четные недели . Начало - 15:30 Zoom ссылка : Подключиться к конференции Zoom https : //us04web.zoom.us/j/6213641232 ? pwd=bjVFLytsSGl6UFU4VUNpSVBOUmpWdz09 Идентификатор конференции : 621 364 1232 Код доступа : 5cueLf Лекции Введение Презентация лекции : лекция-1_введение_rus_.pdf Учебные материалы ( текст лекции ) : лекция-1-введение_rus_.pdf Большие данные и хранилища больших данных Презентация лекции : лекция-5_bigdata_and_storages_rus_.pdf Учебные материалы ( текст лекции ) : лекция-5-big_data_and_data_storages_docx_.pdf Графы знаний Презентация лекции ( часть 1 ) : лекция-3_knowledge_graphs_part-1_pptx_.pdf Презентация лекции ( часть 2 ) : лекция-3_knowledge_graphs_part-2_pptx_.pdf Презентация лекции ( часть 3 ) : лекция-3_knowledge_graphs_part-3_pptx_.pdf Учебные материалы ( текст лекции , часть 1 ) : tr-лекция-3-knowledge_graphs_rus_-part_1.pdf Учебные материалы ( текст лекции , часть 2 ) : tr-лекция-3-knowledge_graphs_rus_-part_2.pdf Учебные материалы ( текст лекции , часть 3 ) : tr-лекция-3-knowledge_graphs_rus_-part_3.pdf Лабораторные работы Графы знаний Лабораторная работа №1 : лр_1_гз_онтология_v1.1.pdf Лабораторная работа №2 : лр_2_гз_sparql_v1.0.pdf Учебные пособия From Big Data to Smart Data from_big_data_to_smart_data_by_fernando_iafrate_z-lib.org_.pdf Smart Data Enterprise Performance Optimization Strategy smart_data_enterprise_performance_optimization_strategy_wiley_series_in_systems_engineering_and_management_by_james_a._george_james_a._rodger_z-lib.org_.pdf The Data Revolution the_data_revolution_big_data_open_data_data_infrastructures_and_their_consequences_by_rob_kitchin_z-lib.org_.pdf Knowledge Graphs ( учебник ) knowledgegraph_book.pdf Аттестационная ведомость Ведомость : https : //docs.google.com/spreadsheets/d/1IcUwu9soLVKQn0_lkH58bdrI2sjtwuIWyO7a79koS4c/ courses/smart_data.txt · ",
                "Smart Data - ",
                "",
                "✎ Smart Data  Курсы » Smart Data courses : smart_data This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Smart Data ====== ===== Расписание лекций ===== Лекции по средам , четные недели . Начало - 15:30 Zoom ссылка : Подключиться к конференции Zoom https : //us04web.zoom.us/j/6213641232 ? pwd=bjVFLytsSGl6UFU4VUNpSVBOUmpWdz09 Идентификатор конференции : 621 364 1232 Код доступа : 5cueLf ====== Лекции ====== ===== Введение ===== Презентация лекции : { { : courses : smart_data : лекция-1_введение_rus_.pdf | } } Учебные материалы ( текст лекции ) : { { : courses : smart_data : лекция-1-введение_rus_.pdf | } } ===== Большие данные и хранилища больших данных ===== Презентация лекции : { { : courses : smart_data : лекция-5_bigdata_and_storages_rus_.pdf | } } Учебные материалы ( текст лекции ) : { { : courses : smart_data : лекция-5-big_data_and_data_storages_docx_.pdf | } } ===== Графы знаний ===== Презентация лекции ( часть 1 ) : { { : courses : smart_data : лекция-3_knowledge_graphs_part-1_pptx_.pdf | } } Презентация лекции ( часть 2 ) : { { : courses : smart_data : лекция-3_knowledge_graphs_part-2_pptx_.pdf | } } Презентация лекции ( часть 3 ) : { { : courses : smart_data : лекция-3_knowledge_graphs_part-3_pptx_.pdf | } } Учебные материалы ( текст лекции , часть 1 ) : { { : courses : smart_data : tr-лекция-3-knowledge_graphs_rus_-part_1.pdf | } } Учебные материалы ( текст лекции , часть 2 ) : { { : courses : smart_data : tr-лекция-3-knowledge_graphs_rus_-part_2.pdf | } } Учебные материалы ( текст лекции , часть 3 ) : { { : courses : smart_data : tr-лекция-3-knowledge_graphs_rus_-part_3.pdf | } } ====== Лабораторные работы ====== ===== Графы знаний ===== Лабораторная работа №1 : { { : courses : smart_data : лр_1_гз_онтология_v1.1.pdf | } } Лабораторная работа №2 : { { : courses : smart_data : лр_2_гз_sparql_v1.0.pdf | } } ====== Учебные пособия ====== From Big Data to Smart Data { { : courses : smart_data : from_big_data_to_smart_data_by_fernando_iafrate_z-lib.org_.pdf | } } Smart Data Enterprise Performance Optimization Strategy { { : courses : smart_data : smart_data_enterprise_performance_optimization_strategy_wiley_series_in_systems_engineering_and_management_by_james_a._george_james_a._rodger_z-lib.org_.pdf | } } The Data Revolution { { : courses : smart_data : the_data_revolution_big_data_open_data_data_infrastructures_and_their_consequences_by_rob_kitchin_z-lib.org_.pdf | } } Knowledge Graphs ( учебник ) { { : courses : smart_data : knowledgegraph_book.pdf | } } ====== Аттестационная ведомость ====== Ведомость : https : //docs.google.com/spreadsheets/d/1IcUwu9soLVKQn0_lkH58bdrI2sjtwuIWyO7a79koS4c/ courses/smart_data.txt · ",
                "Smart Data - Old revisions  Курсы » Smart Data courses : smart_data Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Smart Data ( external edit ) ( current ) 2022/09/07 12:27 Smart Data – [ Аттестационная ведомость ] i.a.kulikov ±0 B 2022/09/07 12:22 Smart Data – [ Расписание лекций ] i.a.kulikov -30 B 2021/12/21 21:31 Smart Data – [ Аттестационная ведомость ] i.a.kulikov -6 B 2021/12/21 21:30 Smart Data – [ Учебные пособия ] i.a.kulikov +175 B 2021/12/01 13:42 Smart Data – [ Расписание лекций ] i.a.kulikov -16 B 2021/10/06 12:54 Smart Data i.a.kulikov -4 B 2021/10/06 12:48 Smart Data i.a.kulikov +427 B 2021/10/06 12:36 Smart Data i.a.kulikov +50 B 2021/10/06 12:35 Smart Data i.a.kulikov +38 B 2021/10/06 12:34 Smart Data i.a.kulikov +400 B 2021/10/06 12:31 Smart Data i.a.kulikov +118 B 2021/09/30 21:34 Smart Data i.a.kulikov +45 B 2021/09/30 21:32 Smart Data i.a.kulikov -1.2 KB 2021/09/15 22:42 Smart Data – [ Большие данные и хранилища больших данных ] i.a.kulikov -1 B 2021/09/15 22:36 Smart Data – [ Введение ] i.a.kulikov +12 B 2021/05/20 17:13 Smart Data i.a.kulikov +574 B 2021/05/20 17:09 Smart Data i.a.kulikov +939 B 2021/05/20 14:13 Smart Data i.a.kulikov +891 B 2021/05/20 14:05 Smart Data – [ Большие данные и хранилища больших данных ] i.a.kulikov +151 B 2021/05/20 14:02 Smart Data – [ Большие данные и хранилища больших данных ] i.a.kulikov +101 B Show differences between selected revisions less recent > > courses/smart_data.txt · ",
                "Smart Data - "
            ]
        },
        {
            "name": "Knowledge Graphs",
            "url": "/doku.php/courses:knowledge_graphs",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Knowledge Graphs  Курсы » Knowledge Graphs courses : knowledge_graphs Knowledge Graphs courses/knowledge_graphs.txt · ",
                "Knowledge Graphs - ",
                "",
                "✎ Knowledge Graphs  Курсы » Knowledge Graphs courses : knowledge_graphs This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Knowledge Graphs ====== courses/knowledge_graphs.txt · ",
                "Knowledge Graphs - Old revisions  Курсы » Knowledge Graphs courses : knowledge_graphs Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Knowledge Graphs ( external edit ) ( current ) Show differences between selected revisions courses/knowledge_graphs.txt · ",
                "Knowledge Graphs - "
            ]
        },
        {
            "name": "Представление знаний и системы искусственного интеллекта",
            "url": "/doku.php/courses:knowledge_representation_and_artificial_intelligence_systems:start",
            "date": "\"2022/12/10 09:08\"",
            "data": []
        },
        {
            "name": "Robot OS",
            "url": "/doku.php/courses:ros:start",
            "date": "\"2022/12/10 09:08\"",
            "data": [
                "Robot OS  Курсы » Robot OS courses : ros : start Table of Contents Robot OS Общие сведения Ссылки на источники информации Занятия Лабораторные работы Robot OS Общие сведения Ведомость Ссылка на github Правила оценивания работ Условия курсовых работ Ссылки на источники информации Как работать в Linux Как установить ROS Общая Wiki по ROS Gentle introduction to ROS ( Учебник на английском ) workstation-setup-xenial Занятия Занятие № 1 : Введение в среду Занятие № 2 : Детальное представление о среде Занятие № 3 : Базовые пакеты ROS : Rviz и tf Занятие № 4 : SLAM Занятие № 5 : Navigation stack Занятие № 6 : EKF SLAM & gMapping Занятие № 7 : Gazebo Лабораторные работы Лабораторная работа № 1 : Реализация программы-писателя на ROS Лабораторная работа № 2 : Взаимодействие посредством собственного типа сообщений в ROS Лабораторная работа № 3 : Использование базовых пакетов ROS : RVIZ , TF Лабораторная работа № 4 : Использование пакетов навигационного стека Лабораторная работа № 5 : Использование пакета Gazebo courses/ros/start.txt · ",
                "Robot OS - ",
                "",
                "Правила оценки лабораторных работ  Курсы » Robot OS » Правила оценки лабораторных работ courses : ros : estimation_rules Правила оценки лабораторных работ Оценка строится по следующим критериям : Написанная программа делает именно то , что от неё требуется . Если программа не выполняет требуемых функций , работа не принимается . Программа написана в срок . ( Срок определяется пул реквестом . ) Дополнение к предыдущему пункту . Программа должна быть сначала залита на github . Не зарегистрированные версии программ лично не проверяются . В программе отсутствует лишний код . Этот пункт принципиален . В случае , если в сданной программе будут обнаружены лишние функции или длинные закомментированные участки кода , будет считаться , что нарушен пункт 1 . Код программы читаем . Чем быстрее я прочитаю вашу работу и разберусь в ней , тем выше она может быть оценена . В программе присутствует творчество . Творчество поощряется . В зависимости от сложности дополнительных особенностей программы , можно “ добрать ” баллы в случае , например , нарушения срока сдачи . В случае определения двух одинаковых работ - вторая работа будет принята , но попадёт в “ чёрный список ” . Авторы работ из чёрного списка будут расстреляны в конце семестра . courses/ros/estimation_rules.txt · ",
                "Темы проектов :  Курсы » Robot OS » Темы проектов : courses : ros : topsecret Темы проектов : 1 . Робот-пылесос Исходная постановка задачи : Построить траекторию ( и пройти по ней ) , которая покрывает всю территорию карты ( пропылесосит весь пол ) . Исходные данные : Робот начинает движение около “ базы ” в неизвестном мире . Строит карту мира и определяет своё местоположение ( знает всегда координаты базы относительно себя ) . Робот знает габариты своего чистящего устройства , исходя из этого должен построить траекторию очистки всей территории . Ограничения на исходные данные : Окружающий мир - такая замкнутая область , из каждой точки которого видно базу ( выпуклая область ) . У робота есть лазерный дальномер ( нет одометрии ) . Усложнения : Нет базы ( но появляется одометрия ) , мир может быть произвольным . 2 . Искатель сокровищ Исходная постановка задачи : Разведать подземелье , найти золото . Исходные данные : Робот ищет золото в подземелье . Робот не знает карту подземелья , должен также определять , в какой части подземелья он находится . Необходимо обойти всё подземелье ( также предоставить траекторию перемещения ) и найти спрятанные сокровища . Ограничения на исходные данные : Окружающий мир состоит из прямых линий ( комнаты , коридоры ) . Участки карты , на которых находятся сокровища отличаются от окружающего мира ( например , имеют хаотичную , стостящую не из прямых линий , область ) . У робота есть лазерный дальномер и данные одометрии . Усложнения : В подземельях могут присутствовать ловушки , которые также необходимо распознать и объехать . 3 . Футбол Исходная постановка задачи : Симулировать игру двух команд роботов с целью закатить мяч в чужие ворота Исходные данные : Две команды , один мяч . Можно давать пас , можно вести мяч . Наезжать друг на друга нельзя . Можно отобрать мяч ( как во время паса , так и у едущего с ним робота ) . Игра до победного гола ( нескольких голов ) Ограничения на исходные данные : В команде три-пять роботов , один из которых вратарь . Разрешено использование коллективного разума для принятия решения или наличие одного централизованного мозга . У роботов есть координаты других относительно друг друга , а также координаты мяча . Усложнения : Роботы имеют разные характеристики игры ( точность паса , скорость движения ) . Отдавать пас надо не только лучше позиционированному роботу , но и выбирать будет ли этот пас оптимальным . 4 . Битва роботов Исходная постановка задачи : Две армии роботов бьются друг с другом . Исходные данные : Есть несколько типов роботов , ( быстрый , сильный , далеко стреляющий ) которые должны расположится на карте и одолеть команду противника . Они подчиняются командиру , который раздаёт приказы , решает , когда робота нужно перебросить на другой фланг и прочее . Необходимо уничтожить вражеского командира . Ограничения на исходные данные : У роботов есть полоска здоровья . Роботам известна карта . Командир знает координаты каждого из своих роботов . Роботы могут видеть вражеских юнитов , но изначально не знают их координат . Усложнения : Командиров может быть несколько , и каждый из них отвечает за свой фланг . Карта неизвестна ( ни изначальное место противника , ни примерные габариты , ни примерную точку десанта на карте ) 5 . Робот-матка Исходная постановка задачи : Обеспечить жизнеобеспечение матке колонии роботов . Исходные данные : Есть единственная матка-робот . Для её жизнеобеспечения необходимо пропитание . В колонии присутствуют роботы-рабочие , которые могут быть отправлены в разведку или для добычи пищи из уже известного источника пропитания . Ограничения на исходные данные : Роботов рабочих большое , но ограниченное число . Им пища не нужна . Матка - единый мозг , отдающий приказы . Карта неизвестна , её отображение , которое построили роботы-разведчики хранится у матки , но не у других роботов . Матка даёт исчерпывающие команды , например : “ принести пищу из этой точки , куда следует добраться так-то. ” Или : “ Отправится в эту точку и снять развед-данные ” . Усложнения : Роботы могут пропадать ( их может кто-то съедать ) , причём матка не может узнать , что кого-то съели , она лишь может узнать о невыполненном задании по истечении времени . Роботы не могут наезжать друг на друга . 6.Автопилот Исходная постановка задачи : Спланировать маршрут с учётом прочих участников движения . Исходные данные : Есть множество участников движения , о траекториях движения которых всё известно . Есть пропускная способность дороги : количество рядов , длина . На дорогах есть перекрёстки со светофорами . Необходимо проложить маршрут от заданной точки до заданной , принимая во внимания все траектории прочих участников движения , не вызывая заторов и коллизий . Ограничения на исходные данные : Проложенный маршрут уже не корректируется . Под него подстраиваются новые участники Новые участники могут стартовать в любой момент времени , не обязательно все сразу . Карта известна , все маршруты известны , время старта новых участников движения неизвестно . На светофорах все стартуют одновременно и мгновенно набирают наибольшую скорость . Торможение происходит аналогично . Можно использовать единый мозг-диспетчер , однако также можно строить маршрут на собственном узле . Усложнения : Светофоры имеют разное ( заданное ) время . На дороге может появиться машина с приоритетом ( скорая , пожарная , полиция… ) О её появлении мгновенно узнают все участники движения . Её маршрут известен , все перестраиваются так , чтобы машина с приоритетом проехала с наиболее высокой скоростью . 7.Коррекция прицела Исходная постановка задачи : Установить прицел на цели , вести цель , поразить цель . Исходные данные : Оперативник с снайперской винтовкой уничтожает цели на поле боя . Цели появляются хаотически . Задача поразить как можно больше целей за время работы программы . Ограничения на исходные данные : Цели передвигаются в трёхмерном мире из стороны в сторону ( слева направо , справа налево , снизу вверх , по диагонали и прочее ) . До каждой из целей есть своё расстояние . Пуля летит с какой-то скоростью и ей потребуется время , на преодоление этого расстояния . Стрелять необходимо с упреждением . Цели движутся равномерно прямолинейно . Открывать огонь можно только при получении соответствующей команды от человека-оператора . Если команды нет какое-то время , переключиться на другую цель . На стрельбище присутствуют препятствия , попадание в которых не приводит к поражению цели . Усложнения : На стрельбище присутствует ветер ( направленный в плоскости движения целей ) , ветер в произвольное время меняет своё направление . Оперативник знает , куда дует ветер сейчас , но не знает , куда он будет дуть следующий момент времени . Как следствие , он может промазать . У пули есть погрешность . Она летит не в ту точку , куда был произведён выстрел . Во-первых , пуля летит по угасающей траектории . Во-вторых , её направление может на малую ошибку отличаться от изначально заданного направления . Цели могут двигаться неравномерно ( может менять ускорение , скорость пересчитывается ) , но стрелок в каждый момент времени знает , точное значение ускорения тела и может построить оценку положения цели . 8.Корпус Нова Исходная постановка задачи : Предотвратить таранный удар флагманом Ронана планеты Ксандара . Исходные данные : Корабли корпуса Нова - маленькие патрульные летательные аппараты , не имеющие оружия . Однако выстроившись в матрицу они способны создать непреодолимый щит . Задача выстроить щит , пока флагман Ронана не уничтожил Ксандар . Ограничения на исходные данные : Флагман Ронана с какой-то заданной скоростью сбивает произвольные корабли корпуса Нова , которые не включились в матрицу . Матрица - прямоугольная сетка кораблей корпуса Нова . Корабли корпуса Нова подлетают к формирующейся матрице , но подключаются к ней только тогда , когда полностью сформирован ряд или столбец . Корабли , встроившиеся в матрицу , неуничтожимы флагманом Ронана . Кораблей корпуса Нова неограниченное число , но у них одна единственная точка вылета . Цель считается достигнутой , если матрица нужно размера построена и расположена на безопасном ( заданном ) расстоянии от планеты до того , как это расстояние достигнет флагман Ронана . Усложнения : Матрицу можно формировать на расстоянии от флагмана , но если матрица будет находится в непосредственной близости , это снизит скорость движения флагмана пропорционально количеству кораблей в матрице . Флагман Ронана в приоритете сбивает корабли корпуса Нова , которые подлетели к матрице , но ещё пока не включились в неё . Матрица может формироваться из нескольких эпицентров . 9.Очистить поле битвы Исходная постановка задачи : Очистить местность с неизвестной картой от следов боя . Исходные данные : Турнир многих рас , проводимый Xaero , завершён . В турнире приняли участие как представители людей , так и роботов , а также инопланетян . Нужно убрать следы крови и тела , имея в распоряжении роботов-чистильщиков . Ограничения на исходные данные : Кровь разных существ очищается разными чистильщиками . Причём мёртвые тела должны быть перенесены в специальное место специальными роботами . Карта неизвестна , чистильщикам даётся команда перемещения человеком-оператором . Карта может состоять из разных уровней , переход между уровнями может осуществляться с помощью лифтов , телепортов , лестниц . Усложнения : На карте может остаться недобитый участник турнира . У оператора есть несколько охранных роботов . Следы этого побоища также должны быть ликвидированы . Необходимо успеть до начала следующего турнира . 10 . Добыча волков Исходная постановка задачи : Найти и загнать цель стаей волков . Исходные данные : Стая волков охотится в лесу на неизвестной карте . Задача найти добычу , устроить на неё охоту , окружить . Ограничения на исходные данные : Местность лесистая , следовательно окружение состоит из окружностей . Волки не умеют ходить сквозь деревья Жертва стремиться избежать стаи , однако начинает бежать только когда заметит стаю ( есть радиус видимости , меньший , чем у волков ) . Задача волков окружить цель , для этого они могут использовать разные тактики : оставить группу волков в засаде , остальными загонять ; бежать полукругом и прочее . Жертва бежит с той же скоростью , что и волки . Однако , если волк укусит жертву , её скорость уменьшится . Усложнения : Жертва убегает зигзагами . Причём , если она набегает головой на волка , то не получает повреждений , но отбрасывает волка . Жертв может быть в лесу несколько , возможно переключение с жертвы на жертву . Жертвы бегают с разной скоростью . У волков накапливается усталость - они не могут долго бежать . 11 . Спаси этих котят . Исходная постановка задачи : Во время наводнения перенести всех котят с опасного места на безопасное . Исходные данные : Идёт большая вода . Маме-кошке необходимо перенести своих котят с затопляемой территории . Мама-кошка знает местность и знает , где будет вода через некоторое время . Однако она не знает когда вода будет в каком месте . Ограничения на исходные данные : Вода занимает участки мгновенно . Через воду кошка переправляться не может . Изначально котята на месте , которую затопит вода ( в последнюю очередь ) . Кошке задано место , куда надо отнести котят . Если кошка двигается по маршруту , но оказывается , что этот маршрут уже преграждает вода , кошка должна спланировать и изменить свой текущий маршрут , а также последующие маршруты перемещения . Усложнения : Котята медленно разбредаются из точек эвакуации ( но не заходят в воду ) . Их надо отлавливать и возвращать . Кошке неизвестна местность . Она узнаёт её по ходу движения . 12 . Рой неистребим . Исходная постановка задачи : Зерги должны удержать аванпосты под атакой протоссов . Исходные данные : Зерги подверглись массированной атаке тамплиеров протоссов . Задача удержать аванпосты до тех пор , пока королева Керриган не уничтожит тамплиеров . Ограничения на исходные данные : Зерги имеют только маленьких беспомощных зерлингов , которые не могут оказать сопротивление организованной атаке тамплиеров . Они лишь могут создавать живой щит . Зерлинги рождаются на одном из аванпостов Тамплиеры десантируются в любую точку заранее определённой прямоугольной области , не содержащей аванпосты Тамплиеры протоссов уничтожают зерлингов как только подходят к ним . Тамплиеров уничтожает королева Керриган как только подходит к ним . Зерлингов неограниченное число , но подкрепление может не успеть дойти к аванпосту , когда он окажется захвачен протоссами . Тамплиеров протоссов ограниченное число . Двое существ одной расы не могут располагаться в одной точке ( они должы стоять рядом ) Зерги побеждают , кгда все протоссы уничтожены ; протоссы побеждают , когда захвачен хотя бы один аванпост Усложнения : Тамплиеры могут появляться в любой точке карты ( в тылу ) . Тамплиеры наносят урон Керриган , которая медленно регенерирует . Сара Керриган должна выжить . 13 . Ненавижу некромантов . Исходная постановка задачи : Убежать от зомби . Исходные данные : На неизвестной карте присутствуют некроманты . Сами по себе они не опасны . Но раз в какое-то время они воскрешают рядом с собой зомби . Задача найти выход из помещения и не быть съеденным зомби . Ограничения на исходные данные : Чем дольше вы блуждаете по помещению , тем больше зомби восстанут за вами охотится . Вы двигаетесь быстрее , чем зомби , но понятия не имеете , где эти зомби располагаются . На карте вы можете найти артефакты различных свойств ( замедляют призыв зомби у некромантов , убивают всех зомби на карте , дают временную неуязвимость к укусам и прочее ) . Зомби не знают где выход и просто бесцельно блуждают по карте , пока не обнаружат вас . Усложнения : Людей , пытающихся выбраться несколько , и вы , если вам не удалось сбежать и вы были укушены , становитесь охотником на выживших . Задача становится поймать их всех . Выходов открывается несколько , как только вы превращаетесь в зомби . 14 . Пронести кольцо . Исходная постановка задачи : Избегая Всевидящего Ока Саурона , необходимо пронести кольцо всевластия и выбросить его в Ородруин . Исходные данные : На неизвестной карте с кучей препятствий , которую периодически осматривает Всевидящее Око , необходимо пересечь Мордор и дойти до Ородруина . Ограничения на исходные данные : Око имеет радиус обзора . В нём нельзя оставаться дольше какого-то фиксированного времени . У вас есть запас сил . Он не бесконечен . Карта Мордора плоская , но имеет непреодолимые препятствия , которые необходимо обойти . Из-за препятствий всевидящее Око имеет слепые зоны . Усложнения : На карте присутствует Голлум , мечтающий отнять у вас свою прелесть . Вы успешно от него отбиваетесь ( телепортируя его в произвольную точку карты ) но это отнимает у вас выносливость . Око Саурона осматривает карту произвольно ( в произвольный момент времени может смениться ускорение осмотра , скорость поворота сектора обзора соответственно пересчитывается ) . 15 . Гензель и Гретель . Исходная постановка задачи : Найти выход на неизвестной карте . Карту запоминать нельзя . Исходные данные : На неизвестной карте необходимо найти выход . Строить и запоминать карту нельзя . За собой остаётся след из хлебных крошек . Ограничения на исходные данные : У вас есть скан местности , по которому можно определить , в какую сторону можно двигаться . Один раз в некоторый интервал времени за вами остаётся хлебная крошка , символизирующая , что в этом участке карты вы уже были . Карту запоминать нельзя . Выход определяется сразу , как только он оказывается в радиусе видимости скана . Усложнения : Крошки исчезают с течением времени . 16.Разобрать статью . Статья посвящённая amcl ( adaptive Monte-Carlo localization ) . Разобрать принцип работы скан-матчера . Реализовать . Протестировать на тестовом окружении . 17 . Разобрать статью Статья посвящённая base_local_planner . www.cs.washington.edu/ai/Mobile_Robotics/postscripts/colli-ieee.ps.gz http : //cs.stanford.edu/group/manips/publications/pdfs/Brock_1999_ICRA.pdf Разобрать принцип планировщика . Реализовать . Протестировать на тестовом окружении . 18 . Разобрать статью Статья посвящённая Fast SLAM Разобрать суть статьи . Выявить правило определения фич . Протестировать для разных сканов . courses/ros/topsecret.txt · ",
                "Занятие № 1 . Введение в среду  Курсы » Robot OS » Занятие № 1 . Введение в среду courses : ros : class1 Занятие № 1 . Введение в среду По завершении занятия студент должен : установить среду уметь писать простые программы , взаимодействующие с ROS Содержание Демонстрация примера с использованием rviz Описание структуры общения node-topic Описание простой программы Hello world Как написать программу В первую очередь необходимо создать workspace $ mkdir -p ~/ < put_your_path_here > /workspace/src $ cd ~/ < put_your_path_here > /workspace/src $ catkin_init_workspace После выполнения этой команды создастся только ссылка на CMakeLists.txt , однако , для утилиты catkin это будет означать , что рабочая область определена в дивектории workspace/ После сборки в директории workspace/ появятся папки devel/ и build/ Во-вторых , находясь в директории workspace/src/ необходимо создать пакет $ catkin_create_pkg lab1 Дерево файловой системы должно выглядеть следующим образом : workspace/ ┣━━━━src/ ┃ ┣━━━━CMakeLists.txt ┃ ┗━━━━lab1/ ┃ ┣━━━━package.xml ┃ ┣━━━━CMakeLists.txt ┃ ┣━━━━ ... ┃ ┗━━━━src/ ┃ ┗━━━━ ... ┣━━━━devel/ ┃ ┗━━━━ ... ┗━━━━build/ ┗━━━━ ... В папке src/ необходимо расположить файлы исходного кода . Задание Скачать с github исправления сгенерированных файлов . ( Обратите внимание , что заменить необходимо два файла , находящиеся в папке lab1/ . CMakeLists , лежащий в workspace/src/ трогать не надо ! ) Написать программу , передающую черепашке команду на движение в случайном направлении . Файл с кодом необходимо назвать lab1.cpp и расположить в папке src/ Краткое пояснение к заданию У объекта класса NodeHandle ros : :NodeHandle < node_handle_name > ; есть метод , реализующий механизм отправки сообщений в топик с именем < topic_name > . Это делается при помощи команды ros : :Publisher < publisher_name > = < node_handle_name > .advertise < msg_type > ( `` < topic_name > '' , < size > ) ; где < topic_name > это имя топика , через который будут общаться publisher и subscriber ; а < size > - размер буфера сообщений ( а треугольные скобочки после advertize - это конкретизация шаблонной функции ) . В данном случае имя топика можно получить , узнав , на какой топик подписан turtlesim_node . Тип сообщения можно узнать , выведя информацию о топике . Информацию о том , из каких полей состоит сообщение можно узнать командой rosmsg show < msg_type > В тексте программы необходимо создать объект класса < msg_type > и наполнить его содержимым . Информативными являются поля msg.linear.x и msg.angular.z . Остальные поля сообщения не учитываются при обработке . После того , как сообщение сформировано , его можно отправить в топик командой < publisher_name > .publish ( msg ) courses/ros/class1.txt · ",
                "Занятие № 2 : Детальное представление о среде  Курсы » Robot OS » Занятие № 2 : Детальное представление о среде courses : ros : class2 Занятие № 2 : Детальное представление о среде По завершении занятия студент должен : уметь строить иерархию взаимодействия нод и топиков у готовой программы уметь писать ноды , обменивающиеся собственными типами сообщений Содержание демонстрация работы rqt_graph подробное описание CMakeLists.txt и package.xml Представление связи node-topic в виде графа Во всех учебниках по ROS знакомство с понятиями Node , Topic , Message начинают с примера , который называется “ turtle_sim ” . Работа с этим пакетом очень наглядна и помогает разобраться в том , как происходит взаимодействие между нодами . В первую очередь необходимо помнить , что ROS - это Robotics Operation System , её основное предназначение в упрощении работы с роботами . Робот - это совокупность узлов , каждый из которых принимает какие-то данные , обрабатывает их и передаёт другому узлу . В ROS нода - это абстракция , которую можно сравнить с таким узлом робота . Физически нода - это поток , выполняющийся в системе и обменивающийся сообщениями с другими нодами . Запуск нод в ROS осуществляется при помощи команды rosrun . Синтаксис употребления этой команды выглядит так : rosrun < пакет > < нода > [ < имя параметра > : = < значение > ] Причём в графе < нода > указывается не произвольное имя новой ноды , а класс-тип нод , экземпляр которого нужно запустить . Непосредственно имя ноды устанавливается через параметры . Прежде , чем запускать эту команду , необходимо запустить ядро ROS . Поскольку ноды не существуют сами по себе , а взаимодействуют друг с другом , им необходимо окружение . В случае с настоящим роботом роль этого окружения играет операционная система этого робота . В нашем же случае в первую очередь необходимо вызвать команду roscore Эта команда будет выполняться в терминале , из которого она была вызвана . Поэтому для дальнейшей работы необходимо открыть ещё одно окно терминала . Как только запущено окружение , можно посмотреть какие ноды запустились по умолчанию . Это можно сделать , выполнив команду rosnode list И на данном этапе в консоли появится следующий вывод : /rosout Это означает , что по умолчанию вместе с roscore запускается одна нода с именем rosout . Причём знак слеш “ / ” означает , что эта нода находится в глобальном поле имён и используется без префикса-имени пакета . Нода /rosout отвечает за вывод сообщений на экран . Безусловно в компьютерной симуляции роль /rosout может выполнить std : :cout , но в реальных условиях у робота не будет iostream.h или stdio.h , поэтому в ROS для вывода сообщений создана настраиваемая нода /rosout . По любой ноде можно узнать , какие сообщения она посылает и на какие подписана . Для того , чтобы узнать информацию о ноде наберите rosnode info < имя ноды > То есть в данном случае rosnode info /rosout В ответ будет получено Node [ /rosout ] Publications : * /rosout_agg [ rosgraph_msgs/Log ] Subscriptions : * /rosout [ unknown type ] Services : * /rosout/set_logger_level * /rosout/get_loggers Разберёмся по порядку , что представляет из себя информация , которая была получена в ответе . Итак , первая строка представляет имя ноды , информацию о которой запрашивалась . Далее идёт список топиков , в которых эта нода публикует сообщения . Топик - абстракция однонаправленной коммуникации . /rosout посылает сообщения в топик /rosout_agg типа rosgraph_msgs/Log . Сперва это может показаться странным , что rosout - нода , предназначенная только для вывода сообщений на экран , ещё публикует какую-то информацию ещё куда-то . Но если прикинуть ситуацию , в которой появляется необходимость сохранять всё , что пишется на экран ещё и в файл , становится понятно , зачем это было сделано . Ведь , допустим , если есть несколько нод , которые что-то пишут на экран , то для осуществления логирования этой всей информации на экран , необходимо вручную для каждой ноды указывать дополнительный топик , куда они будут клонировать информацию . Для того , чтобы избежать ручной работы , было принято решение создать дополнительный топик , куда будут передаваться все сообщения , полученный нодой /rosout . Далее в списке информации о ноде следует список нод , на которых она подписана . В данном случае /rosout подписан на /rosout . Пусть вас не смущают одинаковые имена , ведь в одном случае речь идёт о ноде , а во втором - о топике . Тут сразу возникает следующий вопрос : если /rosout подписан на /rosout и получает всю информацию через этот топик , то зачем нужен топик /rosout_agg , который был рассмотрен выше ? Ответ прост : в топик /rosout_agg информация поступает уже отформатированная с указанием , кто , когда и откуда присылал сообщение для вывода на экран . Следующий вопрос : почему тип сообщения , на которые подписан /rosout помечен как “ unknown type ” ? Дело в том , что топик фактически создаётся тогда , когда создаётся нода-publisher в этот топик . Нода-subscriber не создаёт топик , а лишь упоминает о нём , но не представляет какого типа сообщения в этот топик будут поступать . Этот тип будет конкретизирован как только будет создана хотя бы одна нода оправляющая сообщения в этот топик . Графически описанные топики и ноды представлены на рисунке ниже . Рис . 3.1 . Связь ноды /rosout и её топиков . При отображении топиков и нод принято соглашение , что эллипсами отображаются ноды , а прямоугольниками - топики . Стрелочками показывается поток сообщений из топика к ноде или наоборот . Таким образом , на рисунке 3.1 показано , что нода /rosout подписана на сообщения из топика /rosout и публикует свои сообщения в топик /rosout_agg . И последнее о чём следует сказать про информацию о ноде - это список сервисов , которые эта нода представляет . Сервис - это аналог топика , только в отличие от последнего , сообщение сервиса двунаправлено и ожидает ответа на запрос . Сервис можно рассматривать как команду с некоторым откликом , которую одна нода просит выполнить у другой ноды . Подробнее о сервисах и их использовании будет рассказано позднее . Теперь вернёмся к turtle_sim и в новом окне запустим команду rosrun turtlesim turtlesim_node Что означает , что будет запущена нода типа turtlesim_node из пакета turtlesim . Имя ноды в данном случае не указывалось и оно присвоится автоматически . Теперь , если в новом терминале ввести команду rosnode list в ответ будет получено следующее : /rosout /turtlesim Таким образом создалась ещё одна нода с именем turtlesim и определённая в глобальном поле имён , о чём говорит предшествующий символ слеш “ / ” . Если в новом терминале вновь будет выполнена команда rosrun turtlesim turtlesim_node То создастся новая нода с тем же именем /turtlesim . Это вызовет аварийную остановку уже созданной ноды : [ WARN ] [ 1471851936.261860979 ] : Shutdown request received . [ WARN ] [ 1471851936.261924457 ] : Reason given for shutdown : [ new node registered with same name ] Для того , чтобы указать имя ноды , при её создании необходимо присвоить значение переменной __name ( с двумя символами нижнего подчёркивания ) . Таким образом , чтобы создать ноду с именем “ turtle_node ” необходимо выполнить команду rosrun turtlesim turtlesim_node __name : =turtle_node При запуске ноды turtlesim_node появится окно синего цвета с черепашкой в центре . Причём от запуска к запуску внешний вид черепашки может меняться . Её вид выбирается произвольно . Теперь , если запросить информацию о новой ноде rosnode info /turtle_node то будет получен следующий ответ : Node [ /turtle_node ] Publications : * /turtle1/color_sensor [ turtlesim/Color ] * /rosout [ rosgraph_msgs/Log ] * /turtle1/pose [ turtlesim/Pose ] Subscriptions : * /turtle1/cmd_vel [ unknown type ] Services : * /turtle1/teleport_absolute * /turtle_node/set_logger_level * /turtle_node/get_loggers * /reset * /spawn * /clear * /turtle1/set_pen * /turtle1/teleport_relative * /kill Здесь видно , что turtlesim_node представляет большое количество сервисов . Но нам сейчас более интересными являются топики , на которые эта нода подписывается и в какие публикуется . Подписывается она на топик /turtle1/cmd_vel . По сути это - топик команд перемещения в него будут посылаться команды перемещения черепашки . Поместить сообщение в топик можно с клавиатуры командой : rostopic pub < имя топика > < тип сообщения > < сообщение > В /turtle1/cmd_vel посылаются сообщения типа geometry_msgs/Twist . В этом можно убедиться , прочитав документацию по turtlesim-у . rostopic pub /turtle1/cmd_vel geometry_msgs/Twist “ [ 2 , 0 , 0 ] ” “ [ 0 , 0 , 1 ] ” Это передвинет черепашку на двойку в местных координатах вперёд и повернёт на один радиан против часовой стрелки . Остальные числа в квадратных скобках могут быть произвольными . Нода /turtle_node игнорирует их и использует только первое число , как величина пути вперёд и последнее , как величина поворота в радианах . Чтобы не запоминать формат сообщения , можно после типа сообщения дважды нажать клавишу tab . Это выпишет имена полей и рядом начальные значения , которыми они инициализируются . Далее их можно изменить : rostopic pub /turtle1/cmd_vel geometry_msgs/Twist `` linear : x : 0.0 y : 0.0 z : 0.0 angular : x : 0.0 y : 0.0 z : 0.0 '' Данный формат говорит о том , что сообещние типа geometry_msgs/Twist представляет собой две структуры названные “ linear ” и “ angular ” , каждая из которых состоит из трёх вещественных переменных . Как уже было указано ранее , /turtle_node использует только координаты linear.x и angular.z . Для прерывания исполнения команды используйте ctrl+c . Теперь , если мы посмотрим на граф нод и топиков , он будет выглядеть , как на рисунке ниже . Рис . 3.2 . Две ноды /turtle_node и /rosout и топики между ними . Теперь создадим ноду-publisher-а в топик /turtle1/cmd_vel . Например ноду из пакета turtle_sim называемую turtle_teleop_key . Запустим её в новом терминале так как , как вы успели заметить , каждая нода - это отдельный процесс : $ rosrun turtlesim turtle_teleop_key Теперь , если оставить активным терминал , в котором была запущена эта нода , и нажимать клавиши ←↑↓→ это приведёт к движению черепашки в окне turtle_node . Теперь , связь нод и топиков будет выглядеть так , как показано на рисунке ниже . Рис . 3.3 . Ноды /teleop_turtle , /turtle_node и /rosout и топики между ними . Наконец , чтобы отобразить связи существующих нод и топиков можно запустить ещё графовую ноду rqt_graph из пакета rqt_graph командой $ rosrun rqt_graph rqt_graph Эта нода собирает всю информацию о запущенных нодах и созданных топиках и визуализирует их связи . При первичном запуске появиться окно вида , представленного на рисунке ниже . Рис . 3.4 . Иллюстрация работы ноды типа rqt_graph . Если убрать галочки Namespaces ( которая отображает пространство имён нод и тпоиков ) , Dead skins , Leaf topics и Debug , то можно увидеть все существующие ноды и топики . В этом случае также будет показана нода созданного графового построителя . Рис . 3.5 . Иллюстрация работы ноды типа rqt_graph с полным представлением . На рисунке 3.4 можно видеть набор запущенных важных нод и топиков между ними . В этом случае не указывается ни нода /rosout , ни нода графа /rqt_gui_py_node , ни их топики , а также не указываются “ висячие ” топики - в которых никто не пишет и из которых никто не читает . На рисунке 3.5 показаны все запущенные ноды и топики . Этот граф иллюстрирует всё состояние робота , но является нагруженным для выделения основных компонентов . Лабораторная работа № 2 : Обмен сообщениями своего типа courses/ros/class2.txt · ",
                "Занятие № 3 : Базовые пакеты ROS : rviz и tf  Курсы » Robot OS » Занятие № 3 : Базовые пакеты ROS : rviz и tf courses : ros : class3 Занятие № 3 : Базовые пакеты ROS : rviz и tf rviz Очень часто , особенно при работе с большим количеством информации , отображения данных в текстовом виде бывает малоинформативным . Так , например , если граф представляется в виде матрицы смежности и имеет размеры 100 на 100 , то по текстовому виду этой матрицы довольно сложно представить себе вид этого графа . В таких случаях гораздо удобнее использовать графическое представление данных . Конечно , как любой проект С++ , проекты ROS могут использовать графические библиотеки , например , openGL . И , конечно , можно вручную описывать способы представления информации на экране . Но для этих нужд в ROS предусмотрен пакет rviZ , который представляет ноду графического представления ( наприсанную с использованием openGL ) . Запуск rviz происходит по команде rosrun rviz rviz Окно разделено на три участка . Слева отображаются компоненты , которые могут быть нарисованы . Их довольно много . Rviz позволяет отображать точки , линии , сетки , объёмные фигуры , направления изменений и многое другое . По центру располагается поле для рисования . Именно здесь появляются изображаемые объекты . Справа располагается настройка Current View . Подразумевается , что rviz будет использоваться для изображения того , что видит робот . А робот имеет свою точку наблюдения . Таким образом можно передавать , например , координаты объектов , помеченные так , как их видит робот , и это координаты будут пересчитаны в абсолютные - те , какими они являются в общем мире на общей карте . Rviz - обычная нода , и , как и следовало ожидать , она подписывается на топики . Однако , если , ничего не изменяя , выполнить команду rosrun rqt_graph rqt_graph то будет видно , что rviz подписан только на топики /tf и /tf_static . Для того , чтоб rviz читал данные из других топиков , куда будет передаваться информация , в левой части окна rviz необходимо добавить отслеживаемые объекты . Ниже будет продемонстрировано , как отобразить точку . Итак , отображение точки - это сообщение типа visualization_msgs : :Marker . Для того , чтоб rviz был подписан на топик с сообщениями этого типа необходимо в левой части окна представленного на рисунке 6.1 , нажав на кнопку Add , выбрать поле Marker . Теперь rqt_graph покажет , что rviz подписан ещё на два топика : /visualisation_marker и /visualisation_marker_array ( имя может быть изменено ) . Теперь в этот топик можно отправлять сообщения . Чем использовать для этих целей команду rostopic pub … Но намного более информативно с точки зрения необходимых заполняемых полей будет создать собственного publisher-a , который будет выводить точку на экран . Ниже представлен листинг программы , которая отображает на экране одну красную точку . 1 . # include < ros/ros.h > 2 . # include < visualization_msgs/Marker.h > 3 . 4. int main ( int argc , char * * argv ) { 5. ros : :init ( argc , argv , '' point_publisher '' ) ; 6. ros : :NodeHandle nh ; 7. ros : :Publisher pub = 8. nh.advertise < visualization_msgs : :Marker > ( `` pt_topic '' ,10 , true ) ; 9. visualization_msgs : :Marker point ; 10. point.header.frame_id = `` /point_on_map '' ; 11. point.header.stamp = ros : :Time : :now ( ) ; 12. point.ns = `` there_is_point '' ; 13. point.action = visualization_msgs : :Marker : :ADD ; 14. point.pose.orientation.w = 1 ; 15. point.id = 0 ; 16. point.type = visualization_msgs : :Marker : :POINTS ; 17. point.scale.x = 0.5 ; 18. point.scale.y = 0.5 ; 19. point.color.r = 1.0 ; 20. point.color.g = 0.0 ; 21. point.color.b = 0.0 ; 22. point.color.a = 1.0 ; 23. geometry_msgs : :Point p ; 24. p.x = 10 ; 25. p.y = 10 ; 26. p.z = 5 ; 27. point.points.push_back ( p ) ; 28. pub.publish ( point ) ; 29. sleep ( 1 ) ; 30. return 0 ; 31 . } Разберёмся по порядку , что значат каждые строки в этом коде . В строке 1 подключается общий интерфейс ros . В строке 2 подключается интерфейс использования сообщений типа visualization_msgs : :Marker . Как выше было указано , для изображения точки на экран , её необходимо передать для rviz-а именно в формате такого сообщения . Далее в строках 5-8 создаётся топик с именем /pt_topic . Это имя может быть произвольным и его нужно будет указать в rviz . затем на строках 9-27 заполняется сообщение visualization_msgs : :Marker . В общем виде visualization_msgs : :Marker - это множество точек , которое по-разному интерпретируется с помощью поля класса type . В строке 16 это поле устанавливается в visualization_msgs : :Marker : :POINTS . Что означает воспринимать все точки , сохранённые в сообщении visualization_msgs : :Marker , как просто разрозненный набор точек . Сами точки ( которая в примере всего одна ) задаётся в строках 23-26 и помещается в сообщение на строке 27 . В это сообщение могут быть добавлены ещё точки , и не обязательно создавать новое сообщение , чтобы вывести их на экран . На строке 10 задаётся frame_id - имя кадра . Это такое имя кадра , которое воспроизводится на ноде rviz . Как было сказано ранее , rviz предоставляет два различных вида : вид общей карты и вид робота . Вот frame_id - это имя , присваемое одному из видов . При запуске rvis необходимо будет связать вид карты с этим именем . На 11 строке создаётся метка сообщения , обычно эта метка выполняется в виде времени создания этого сообщения . В 12 строке определяется namespace . Namespace и id ( определяемое в 15 строке ) однозначно определяют сообщение . Если из двух сообщений поступает информация об объекте с одним и тем же id одного и того же namespace-а , то применяется состояние объекта из последнего сообщения ( причём не важно , получено первое сообщение 10 минут или секунду назад , и была ли уже отображена информация на экране или нет ) . В 13 строке определяется , что будет сделано с фигурой с указанным namespace-ом и id . Выбран параметр ADD , однако , в случае , если такой объект уже будет существовать , параметр будет выполнять функцию UPDATE . На 14 строке устанавливается ориентация общего набора точек , передаваемого генерируемым сообщением . Но , так как , всего здесь создаётся только одна точка - изменение этого параметра никак не отобразиться . По параметру point.pose.position с помощью полей х , y , z можно установить координаты ( 0 ; 0 ; 0 ) для общего набора , а также с помощью point.pose.orientation повернуть в пространстве . На строках 17-18 устанавливается толщина точки в местных координатах . На строках 19-22 устанавливается цвет точек , где а - альфа - параметр прозрачности ( 1,0 - совсем не прозрачный ) На строке 27 массив точек заполняется единственной точкой . На строке 28 сгенерированное сообщение посылается в топик . На строке 29 происходит небольшое ожидание для того , чтоб сообщение не разрушилось деструктором до его помещения в очередь . В 16 строке можно указать также типы visualization_msgs : :Marker : :LINE_LIST или visualization_msgs : :Marker : :LINE_STRIP . LINE_LIST попарно соединяет точки , образуя массив отрезков , в то время как LINE_STRIP просто соединяет точки друг с другом последовательно . Теперь , как было указано выше , требуется , запустив ноду rviz , указать ему , какой топик слушать и какой frame изменять . Имя frame можно указать в левой части в поле fixed_frame . Название топика же следует указывать в графе Marker . Если такой графы нет , следует добавить с помощью кнопки Add . Имя топика указывается в графе Marker в поле “ Marker Topic ” . В описанном случае в поле Marker Topic следует указать pt_topic ( из строки 8 ) , а в поле “ Fixed Frame ” указать point_on_map ( из строки 10 ) . Конечно , за одно сообщение можно посылать сразу несколько точек , и не обязательно делать много сообщений такого вида . Однако в этом случае , например , нельзя будет установить цвет каждой точки по отдельности . Для того , чтоб добавить точки для вывода нужно создать больше точек в строках 23-27 и поместить их в вектор .points . А также можно создавать и передавать множество сообщений , а не только одно . Для этого строки 9-27 следует поместить в цикл . Например , учачток кода , который выводит на экран совершающую колебания синусоиду , представлен на листинге ниже . ros : :Rate r ( 30 ) ; double offset = 0 ; while ( ros : :ok ( ) ) { visualization_msgs : :Marker msg ; msg.header.frame_id = `` /point_on_map '' ; msg.header.stamp = ros : :Time : :now ( ) ; msg.ns = `` there_is_point '' ; msg.action = visualization_msgs : :Marker : :ADD ; msg.pose.position.x = 5 ; msg.pose.position.z = -100 ; msg.pose.orientation.x = 100 ; msg.pose.orientation.z = 100 ; msg.id = 0 ; msg.type = visualization_msgs : :Marker : :POINTS ; msg.scale.x = 0.5 ; msg.scale.y = 0.5 ; msg.color.r = 1.0 ; msg.color.g = 0.0 ; msg.color.b = 0.0 ; msg.color.a = 1.0 ; for ( int x = -20 ; x < = 20 ; x++ ) { geometry_msgs : :Point p ; p.x = x ; p.y = 2 * sin ( x+offset ) ; p.z = 2 * cos ( x+offset ) ; msg.points.push_back ( p ) ; } pub.publish ( msg ) ; offset+=0.4 ; r.sleep ( ) ; } tf Пакет tf служит для упрощения определения в пространстве координат различных объектов . Например известно , что относительно объекта 1 объект 2 имеет координаты ( x , y ) . А объект 3 относительно объекта 2 - ( m , n ) . Для того , чтобы выяснить взаимное расположение объектов 1 и 3 можно применить формулы высшей математики , однако в этом нет необходимости , поскольку именно для этого предназначен пакет tf . Разберёмся в механизме работы сразу на примере . Вот , например , исходный код ноды , которая считывает положение черепашки из пакета turtlesim и записывает в топик tf . Это действие полезно , поскольку в этом топике информация находится в том виде , в котором её можно будет легко использовать средствами функций , поставляемых в пакете tf . # include < ros/ros.h > # include < tf/transform_broadcaster.h > # include < turtlesim/Pose.h > std : :string turtle_name ; void poseCallback ( const turtlesim : :PoseConstPtr & msg ) { static tf : :TransformBroadcaster br ; tf : :Transform transform ; transform.setOrigin ( tf : :Vector3 ( msg- > x , msg- > y , 0.0 ) ) ; tf : :Quaternion q ; q.setRPY ( 0 , 0 , msg- > theta ) ; transform.setRotation ( q ) ; br.sendTransform ( tf : :StampedTransform ( transform , ros : :Time : :now ( ) , `` world '' , turtle_name ) ) ; } int main ( int argc , char * * argv ) { ros : :init ( argc , argv , `` my_tf_broadcaster '' ) ; if ( argc ! = 2 ) { ROS_ERROR ( `` need turtle name as argument '' ) ; return -1 ; } ; turtle_name = argv [ 1 ] ; ros : :NodeHandle node ; ros : :Subscriber sub = node.subscribe ( turtle_name+ '' /pose '' , 10 , & poseCallback ) ; ros : :spin ( ) ; return 0 ; } Как понятно из кода , в проргамме создаётся нода , которая подписывается на turtle1/pose ( имя взято по-умолчанию ) . В этот топик нода черепашки пишет координаты черепашки в мире . Как только в этот топик поступает какая-то информация ( а поступает она туда постоянно , даже если черепашка стоит на месте ) , запускается функция , считывающая информацию с этого топика и записывающая её в tf . Обратите внимание на механизм создания transform : координаты задаются , как члены данные , а поворот при помощи tf : Quaternion . В функции sendTransform указаны две строковые переменные : “ world ” и turtle_name . Они будут записаны в сообщение , которое будет отправлено в топик tf . Когда сообщение будет извлекаться , можно будет получить доступ к этим переменным . Их смысловая нагрузка показать , что и в каких координатах считается . В данном случае показано , что в tf отправлены координаты объекта turtle_name относительно world . Становится понятно , что с помощью такого механизма организации сообщений всегда можно будет восстановить координаты любого объекта , даже если известны лишь его координаты относительно другого объекта , но про тот нам всё известно . Заметим , что в tf то , относительно чего считаются координаты называется base_frame_id , а то , чьи координты , называется base_frame_id . Теперь разберёмся , как считывать и обрабатывать сообщения из tf . Рассмотрим , например , такой код : # include < ros/ros.h > # include < tf/transform_listener.h > # include < geometry_msgs/Twist.h > # include < turtlesim/Spawn.h > int main ( int argc , char * * argv ) { ros : :init ( argc , argv , `` my_tf_listener '' ) ; ros : :NodeHandle node ; ros : :service : :waitForService ( `` spawn '' ) ; ros : :ServiceClient add_turtle = node.serviceClient < turtlesim : :Spawn > ( `` spawn '' ) ; turtlesim : :Spawn srv ; add_turtle.call ( srv ) ; ros : :Publisher turtle_vel = node.advertise < geometry_msgs : :Twist > ( `` turtle2/cmd_vel '' , 10 ) ; tf : :TransformListener listener ; ros : :Rate rate ( 10.0 ) ; while ( node.ok ( ) ) { tf : :StampedTransform transform ; try { listener.lookupTransform ( `` /turtle2 '' , `` /turtle1 '' , ros : :Time ( 0 ) , transform ) ; } catch ( tf : :TransformException & ex ) { ROS_ERROR ( `` % s '' , ex.what ( ) ) ; ros : :Duration ( 1.0 ) .sleep ( ) ; continue ; } geometry_msgs : :Twist vel_msg ; vel_msg.angular.z = 4.0 * atan2 ( transform.getOrigin ( ) .y ( ) , transform.getOrigin ( ) .x ( ) ) ; vel_msg.linear.x = 0.5 * sqrt ( pow ( transform.getOrigin ( ) .x ( ) , 2 ) + pow ( transform.getOrigin ( ) .y ( ) , 2 ) ) ; turtle_vel.publish ( vel_msg ) ; rate.sleep ( ) ; } return 0 ; } В программе вызывается сервис “ spawn ” . Таким образом , теперь в turtle_sim_node будет находится две черепашки . Для корректной работы необходимо запустить двух бродкастеров : для turtle1 и для turtle2 . Разберёмся подробно , что делает такой код . Выходным параметром является направление движения для turtle2 , записанное в turtle2/cmd_vel . Самую важную роль здесь играет функция listener.lookupTransform , которая в переменную transform записывает координаты turtle1 относительно turtle2 . Обратите внимание , что в этой функции переменные base_frame_id и child_frame_id стоят в том же порядке , что в sendTransform : сначала base - относительно чего , а потом child - тот , кого . Теперь , когда координаты первой черепашки посчитаны ( нам не пришлось прилагать усилий для подсчёта этих координат ) , можно сформировать сообщение и послать в топик , который прослушивает turtle2 . Резюмируя , можно сказать , что tf это очень сильный механизм определения относительных координат объектов . В реальных роботах необходимо ослеживать перемещения десятков движущихся механизмов и конечностей робота . Для того , чтобы легко рассчитывать их взаимное расположение и используется tf . courses/ros/class3.txt · ",
                "Занятие № 4 . SLAM  Курсы » Robot OS » Занятие № 4 . SLAM courses : ros : class4 Занятие № 4 . SLAM Одной из наиболее востребованных проблем в робототехнике является локация робота . У этой задачи есть множество различных вариантов : локация на известной карте или на неизвестной ; с использованием GPS или без него ; с оснащением робота датчиками , считывающими информацию об окружающей среде , или разрешив ему пользоваться только данными , поступающими от его колёс , и так далее . Разберёмся в одной из задач , связанных с локализацией : Одновременная Локализаци и Построение Карты ( Simultanious Localization And Mapping - SLAM ) . То есть задача формулируется таким образом , что строить карту местности и определять собственное положение на ней необходимо одновременно . Будем рассматривать роботов , которые оснащены датчиками , считывающими информацию об окружающей среде ( условимся , что это будет лазерный дальномер ) . Такая задача может вставать в различных областях , где применяются роботы : начиная от роботов-пылесосов и заканчивая автономными марсоходами или роботами-исследователями морского дна . Итак , опишем подробно и чётко задачу . Робот с некоторой периодичностью считывает данные с датчиков лазерных дальномеров . Условимся , что у робота есть определённый “ угол обзора ” ( который может равняться 360 градусам ) , внутри которого он сканирует окружения , посылая несколько сотен лучей , отстоящих друг от друга на равные углы так , чтобы покрывать весь угол обзора . Таким образом , в каждый период робот получает набор значений , на каком расстоянии от него находятся некоторые препятствия внутри угла обзора По приходящим “ сканам ” необходимо строить карту и определять своё положение на ней . Классическим считается алгоритм , использующий расширенный фильтр Калмана . Чтобы не вдаваться в глубокое математическое описание алгоритма , опишем кратко , как он работает : - Робот только начинает движение . Никаких знаний о карте у него нет . - Робот замечает и определяет первое “ препятствие ” . В контексте задачи EKF SLAM мы оперируем не со всем сканом , а выделяем из него особые точки ( препятствия или фичи ) . Погрешность определения препятствия А связана с погрешностью измерительного датчика . - Робот движется относительно этого препятствия . Во время движения у робота накапливается погрешность одометрии ( одометрия - это оценка траектории робота , основанная на вращении колёс робота ) . Такая оценка не может быть точной , поскольку , например , заранее не известна прочность сцепления робота с поверхностью , по которой он перемещается . Но на данном шаге у робота есть только данные одометрии и положение ( вероятнее всего не точное ) препятствия А . - Робот замечает препятствия B и С. Их положение очень неточно в силу накопившейся погрешности . На этом этапе строится матрица ковариации между всеми найденными препятствиями . - Робот возвращается и вновь определяет препятствие А. Погрешность собственного расположения заметно уменьшается . Немного уменьшается погрешность расположения препятствий B и С ( поскольку в матрице ковариаций указана оценка ковариаций всех препятствий ) - Робот проводит измерение препятствия В. Теперь погрешность расположения этого препятствия очень мала . Одновременно с этим уменьшается погрешность препятствия С. Теперь карта расположений препятствий А , В и С достаточно точная ( если продолжать проделывать этот алгоритм точность будет возрастать ) . На точной карте можно точно определять собственное положение . Самый главный недостаток этого подхода - алгоритмическая сложность . Необходимо строить матрицу ковариации между всеми препятствиями . Логично , что если на местности будет N препятствий , то размер матрицы будет N x N. На практике такой алгоритм не применим , поскольку для его использования необходимо обладать очень высокими вычислительными мощностями ( что очень сложно реализовать для небольших роботов ) . Поэтому существует множество вариантов реализации SLAM . Мы познакомимся ближе с реализацией , которая относится к области SLAM , использующего фильтр частиц и носит название tiny SLAM . Особенность этого алгоритма в том , что когда приходит новый скан , начинает свою работу скан-матчер , который , использует новый скан и уже построенную карту . Скан-матчер пытается наложить новый скан на уже сформированную карту так , чтобы в результате наложения получилось как можно больше совпадений . Допустим , на каком-то шаге было предположено , что карта имеет такой вид , и мы находимся в таком положении , как показано на рисунке На следующем шаге , допустим , мы получаем такой скан : Далее два положения накладываются друг на друга таким образом , чтобы эти два изображения были наиболее “ похожими ” И далее модифицируется представление о карте Полное представление о существующей реализации алгоритма tiny SLAM в ROS можно увидеть по ссылке http : //wiki.ros.org/tiny_slam . Там же есть ссылка на github-репозиторий , где можно ознакомиться с исходным кодом . Настоятельно рекомендуется познакомиться с этим проектом , поскольку в некоторых главах мы будем ссылаться на решения , реализованные в этом проекте . Links Cyrill Stachniss course courses/ros/class4.txt · ",
                "Занятие № 5 . Navigation_stack  Курсы » Robot OS » Занятие № 5 . Navigation_stack courses : ros : class5 Занятие № 5 . Navigation_stack В среде ROS существует набор пакетов , описывающих поведение роботов , выполняющих задачу SLAM . На самом деле робот решает некоторые дополнительные задачи , как то : считывает информацию с датчиков ; передаёт информацию двигателям ; обрабатывает входные сигналы управляющего воздействия ; и так далее Набор пакетов navigation_stack выполняет все эти действия . На самом деле цель этого пакета в том , чтобы упростить перенос ПО , связанного со SLAM , на реальных роботов . navigation_stack использует строгую иерархию топиков и сообщений . Таким образом , каждый компонент может быть заменён на аналогичный , если только он поддерживает такую же структуру топиков , на которые он подписан и в которые он пишет . Полная структура пакетов , входящих в navigation_stack представлена на вики http : //wiki.ros.org/navigation Для того , чтобы воспользоваться рабочей версией , необходимо воспользоваться инструкцией , представленной на гитхабе . Скачав все требуемые пакеты и выполнив catkin_make в созданной директории catkin_ws/ , можно запустить симулятор командой roslaunch map_merger test_one.launch откроется несколько окон , среди которых будут : rviz sage консли Если сделать активным окно teleop_twist_keyboard.py , то клавишами , указанными в консоли , можно управлять роботом . При этом в rviz будет нарисована карта , какой себе её представляет робот после проделывания алгоритма SLAM ( в данном случае используется алгоритм , который называется gmapping ) . В sage нарисована карта и реальное перемещение робота по ней . Карта располагается в файле /catkin_ws/src/aau_multi_robot/map_merger/world/small_world.pgm Пакеты , используемые в данном симуляторе можно увидеть , посмотрев на rqt_graph : На схеме видно , что ключевую роль в этом симуляторе играет slam_gmapping . Как было сказано выше , на этом месте может быть любой SLAM . Перемещая робота с использованием клавиатуры можно наблюдать , что gmapping ощутимо корректирует данные одометрии , выстраивая карту , похожую на введённую . Построенная карта всё же имеет погрешности . Эти погрешности возникают из-за несовершенства реализации предложенного алгоритма SLAM . Названия топиков достаточно красноречиво говорят об их предназначении , однако всегда можно узнать содержимое этих топиков с помощью команды rostopic echo . Но необходимо помнить , что почти в каждый топик сообщения посылаются с очень высокой частотой . courses/ros/class5.txt · ",
                "Занятие №6 . EKF SLAM и GMAPPING  Курсы » Robot OS » Занятие №6 . EKF SLAM и GMAPPING courses : ros : class6 Занятие №6 . EKF SLAM и GMAPPING EKF SLAM Суть EKF SLAM можно найти в статье gMapping Общий алгоритм представлен на рисунке : Во-первых , зафиксируемся некоторым “ набором выборки ” , в котором будут лежать все состояния системы за всё время . Каждое состояние - это вектор из трёх элементов : x - положение робота w - вес вектора m - карта на текущий момент времени Итак , в полученном наборе St будет столько же элементов , сколько в S_ ( t-1 ) , поскольку алгоритм предполагает прохождение по всем элементам набора S_ ( t-1 ) , и на каждом шаге в этот набор добавляется по одному элементу . Набор St можно считать различными гипотезами о текущем положении робота . Совершенно необязательно иметь только одну гипотезу . Наоборот , выгоднее просчитывать несколько вариантов , потмоу что окружающий мир может быть фрактальным и в этом случае наличие нескольких гипотез может помочь определить реальное положение . Теперь подробнее о том , как строится каждый элемент . Сначала к значению , полученному на предыдущем шаге прибавляется значение одометрии и получается x ' - априорная оценка . Затем ищется argmax плотности распределения величины x в зависимости от текущего знания о карте m , текущего наблюдения z и априорной оценки x ' . Если апостериорная оценка сильно отличается от априорной , то апостериорная оценка отбрасывается , в качестве предположения о новом положении робота выбирается случайная величина , распределённая как p ( x| x_ ( t-1 ) , u_ ( t-1 ) ) , то есть исключительно на основе предыдущего положения и данных одометрии . Вес наблюдения считается также тривиально . В случае если априорная и апостериорная оценки оказались близки , в качесте предположения о положении робота выбирается случайная величина , распределённая по нормальному закону с математическим ожиданием и дисперсией , посчитанными на основании выборки положений , построенных в окрестности апостериорной оценки . Вне зависимости от того , как считается x , на основании этого значения обновляется карта и новый посчитанный вектор добавляется в набор выборки . По завершении работы цикла высчитывается количество элементов , которые должно содержать St , чтобы дисперсия весов была равна единице ( чтобы они были распределены по стандартному нормальному закону ) . Если это количество оказалось меньше , чем реальное значение T , то всю операцию необходимо проделать заново , чтобы увеличить веса построенных предположений x. courses/ros/class6.txt · ",
                "Занятие № 7 . Gazebo  Курсы » Robot OS » Занятие № 7 . Gazebo courses : ros : class7 Занятие № 7 . Gazebo Описание Rviz не является единственным способом визуализировать информацию в ROS . Ещё одним способом отобразить визуально состояение системы является пакет Gazebo . Конечно , нет необходимости разрабатывать и пользоваться двумя пакетами , которые выполняют одинаковые функции , и говорить о том , что это два равноценных способа визуализации неверно . На самом деле Gazebo - это немного большее , чем просто визуализатор ; это целый симулятор мира с описанной физикой . Кроме того , в gazebo основными объектами являются не точки и линии , а трёхмерные объекты , обычно более или менее чётко нарисованные ( вместо условных точек и сфер в Rviz ) . Например , один из самых простых объектов в Gazebo - это робот “ пионер ” Pioneer 2 DX . Так он выглядит в симуляторе Gaztbo . Основная цель симулятора - демострировать результат работы программы в виде , удобном для восприятия . Для описания внешнего вида объектов используется язык разметки xml . Некоторые объекты уже описаны и могут быть скачаны с официального сайта gazebo . Однако , объекты можно создавать самостоятельно из простых фигур , типа кубов , сфер и прочих . Установка и использование Gazebo является отдельным пакетом , который может быть использован независимо от ROS . В этом случае необходимо писать “ скрипты ” , управляющие поведением объектов в симуляторе . Однако , возможно использовать Gazebo и совместно с ROS . Для того , чтобы начать работу , необходимо установить последнюю версию Gazebo . curl -ssL http : //get.gazebosim.org | sh Такая команда установит самую полную версию Gazebo . Если необходима ручная настройка компонентов , можно воспользоваться step-by-step инструкцией на сайте официального разработчика http : //gazebosim.org/tutorials ? tut=install_ubuntu & cat=install . Важно отметить , что модели роботов не будут скачаны из общего хранилища . Их необходимо скачивать отдельно . Интерфейс Gazebo позволяет это делать “ на лету ” , то есть при первом обращении к объекту , если он не будет найден в системе , будет предпринята попытка скачать объект с таким именем из базы данных . После скачивания , текстуры и xml объекта будут располагаться в ~/.gazebo/models . Для запуска Gazebo независимо от ROS достаточно в терминале вызвать gazebo При этом появится пустой мир , в который можно добавлять объекты , двигать их , задавать освещение и прочее . Для того , чтобы связать Gazebo и ROS , необходимо скачать дополнительные пакеты : sudo apt-get install ros-kinetic-gazebo-ros-pkgs ros-kinetic-gazebo-ros-control Теперь можно вызвать roscore & & rosrun gazebo_ros gazebo или roslaunch gazebo_ros empty_world.launch Теперь можно увидеть , что gazebo запущена как самостоятельная нода Объект в Gazebo можно создать “ вручную ” , но это не удобно с точки зрения практического использования , поэтому существует сервис , позволяющий создать объект . Разберём код на С++ , помещающий в симулятор робота и передвигающий его в точку ( 2 , 0 , 0 ) . # include `` ros/ros.h '' # include `` gazebo_msgs/SpawnModel.h '' # include `` gazebo_msgs/ModelState.h '' # include < fstream > # include `` string.h '' using namespace std ; int main ( int argc , char * * argv ) { ros : :init ( argc , argv , `` gaztest '' ) ; ros : :NodeHandle node ; ros : :service : :waitForService ( `` gazebo/spawn_sdf_model '' ) ; ros : :ServiceClient add_robot = node.serviceClient < gazebo_msgs : :SpawnModel > ( `` gazebo/spawn_sdf_model '' ) ; gazebo_msgs : :SpawnModel srv ; ifstream fin ( `` /home/usr/.gazebo/models/pioneer2dx/model.sdf '' ) ; string model ; string buf ; while ( ! fin.eof ( ) ) { getline ( fin , buf ) ; model += buf + `` \\n '' ; } srv.request.model_xml = model ; srv.request.model_name = `` robot '' ; geometry_msgs : :Pose pose ; srv.request.initial_pose = pose ; add_robot.call ( srv ) ; //Spawning finished ros : :Publisher pub = node.advertise < gazebo_msgs : :ModelState > ( `` gazebo/set_model_state '' , 10 ) ; sleep ( 1.0 ) ; gazebo_msgs : :ModelState msg ; msg.model_name = `` robot '' ; msg.pose.position.x = 2.0 ; pub.publish ( msg ) ; sleep ( 1.0 ) ; ros : :spinOnce ( ) ; return 0 ; } Первая половина программы посвящена вызову сервиса , создающего объект . Особое внимание следует уделить файлу , где описана структура робота . Для корректной работы в сервис необходимо передать не путь к файлу , описывающему робота , а само содержимое файла . На данный момент существует два стандарта описания роботов : .sdf и .urdf ; первый является более новым и более удобным для использования , поэтому большинство объектов на данный момент существует именно в формате .sdf . Следует обратить внимание , что файл model.sdf должен быть скачан до начала работы программы . Для этого можно просто открыть gazebo и попытаться поместить робота pioneer_2dx на плоскость . При этом некоторое время будет происходить скачивание дискриптивных файлов робота , после чего все требуемые файлы появлятся в стандартном каталоге . После размещения робота в мире его нельзя подписать на какой-то топик , как это было сделано в rviz . Для взаимодействия со всеми объектами gazebo использует один топик gazebo/set_model_state . При этом в передаваемом сообщении указывается имя объекта , которому оно адресовано . Из этого следует , что одновременно в мире не может существовать двух объектов с одинаковым именем . Отличие gazebo от rviz в этом моменте заключается в том , что rviz в случае прихода сообщения с просьбой создания объекта с существующим идентификатором создаст новый объект и удалит старый , а gazebo проигнорирует просьбу о создании . Управление положением объекта происходит через топик gazebo/set_model_state или через одноимённый сервис . Различие в управлении через топик или через сервис в типе передаваемого сообщения и в наличии или отстутствии подтверждения о приёме сообщения . Интерес представляет сообщение , которое передаётся в топик gazebo/set_model_state . оно имеет три поля : model_name – имя объекта pose – абсолютное положение робота twist – относительное изменение положения Следует отметить , что , приняв сообщение с непустыми значениями pose и twist , робот будет использовать только положение pose ; twist используется только как справочная информация , например , для лога . Для того , чтобы представленный выше код заработал , необходимо в CMakeLists.txt добавить зависимость от gazebo : find_package ( catkin REQUIRED COMPONENTS gazebo_ros ) catkin_package ( DEPENDS gazebo_ros ) include_directories ( $ { catkin_INCLUDE_DIRS } $ { GAZEBO_INCLUDE_DIRS } $ { SDFormat_INCLUDE_DIRS } ) В package.xml также необходимо указать build depend и run depend от gazebo_ros . courses/ros/class7.txt · ",
                "Задание  Курсы » Robot OS » Задание courses : ros : lab1 Задание Написать программу , передающую черепашке команду на движение по заданной траектории . Файл с кодом необходимо назвать lab1.cpp и расположить в папке src/ Краткое пояснение к заданию У объекта класса NodeHandle ros : :NodeHandle < node_handle_name > ; есть метод , реализующий механизм отправки сообщений в топик с именем < topic_name > . Это делается при помощи команды ros : :Publisher < publisher_name > = < node_handle_name > .advertise < msg_type > ( `` < topic_name > '' , < size > ) ; где < topic_name > это имя топика , через который будут общаться publisher и subscriber ; а < size > - размер буфера сообщений ( а треугольные скобочки после advertize - это конкретизация шаблонной функции ) . В данном случае имя топика можно получить , узнав , на какой топик подписан turtlesim_node . Тип сообщения можно узнать , выведя информацию о топике . Команды для этого : rosnode list rosnode info < node_name > rostopic info < topic_name > Информацию о том , из каких полей состоит сообщение можно узнать командой rosmsg show < msg_type > В тексте программы необходимо создать объект класса < msg_type > и наполнить его содержимым . Информативными являются поля msg.linear.x и msg.angular.z . Остальные поля сообщения не учитываются при обработке . После того , как сообщение сформировано , его можно отправить в топик командой < publisher_name > .publish ( msg ) courses/ros/lab1.txt · ",
                "courses : ros : lab2  Курсы » Robot OS » lab2 courses : ros : lab2 Задания Один спутник посылает другому секретную информацию - координаты секретных объектов . Посылать два числа в открытую слишком рискованно - противник может их перехватить и понять , что ведётся слежка за секретными объектами . Поэтому перед отправкой сообщения необходимо закодировать в строку и передать сообщение только с одной строкой . Второй спутник должен раскодировать сообщение . Разведчик должен передать некоторую информацию своему сообщнику . Договорились встретиться в толпе и передавать информацию в открытом виде , чтобы их разговор слышали все и он не вызвал подозоений . Однако для того , чтобы простой прохожий не понял их речь , они договорились помимо значащих сообщений передавать незначащие . К каждому предложению добавляется число . Если оно чётное - предложение необходимо принять к сведению , если нечётное - отбросить . Бухгалтер раздаёт зарплату сотрудникам довольно специфическим образом : собирает всех сотрудников в одной комнате и выкрикивает фамилию и соответствующую сумму . Одному сотруднику необходимо услышать среди всех выкрикнутых фамилий свою и обрадоваться , если его зарплата оказалась больше , чем у остальных . Ультратоталитарное общество . На работе можно общаться только по поводу работы . В одном офисе работают двое влюблённых , которые хотят договориться о встрече . Общаться они могут только через устную речь . Чтобы фсб не узнало , что они общаются на отвлечённые темы , они договорилиьс , что место и время встречи назначает тот , работа которого связана с постоянным произнесением речей . Информативными для товарища являются сообщения под номерами 5 , 10 , 15 и так далее . В небесное пространство устремляется боевая ракета , которая летит в определённые координаты . Защищающийся не знает , куда прилетит ракета . Он может в три любые точки на карте поставить противоракеты . Если защищающийся угадал , то с вероятностью 80 % нападающая ракета сбивается . Если не угадал , то ракета сбивается с вероятностью 5 % . Формальные требования Необходимо создать три отдельных пакета : для сообщения , для писателя и для читателя В каждом пакете должна быть ровно одна нода Методические указания Message . Сообщение создаётся в иерархии < project_name_folder > ┗━━━━src ┗━━━━ < package_folder > ┗━━━━ msg ┣━━━━ < message_file_name # 1 > .msg ┣━━━━ < message_file_name # 2 > .msg ┗━━━━ ... В файле < message_file_name > .msg содержатся поля сообщения разделённые символом переноса строки . Может содержать типы int8 , int16 , int32 , int64 ( плюс uint * ) float32 , float64 ээ string ( конвертируется в std : :string ) time , duration другие файлы .msg Массивы_переменной_длинны [ ] и массивы_фиксированной_длины [ C ] ( конвертируются в std : :vector ) Для успешной генерации файла класса-сообщения по файлу прототипа .msg требуется в package.xml добавить < build_depend > message_generation < /build_depend > < run_depend > message_generation < /run_depend > < run_depend > message_runtime < /run_depend > Обратите внимание , что для build-depend-а достаточно только message_generation , а для run-depend-a добавляется ещё и message_runtime . Кроме того в CMakeFile необходимо добавить в find_package ( catkin REQUIRED COMPONENTS … ) такие компоненты как std_msgs и message_generation . Также написать add_message_files ( FILES < message_file_name # 1 > .msg < message_file_name # 2 > .msg ... ) generate_messages ( DEPENDENCIES std_msgs ) При описании publisher-а и subscriber-а необходимо вначале подключить созданный файл сообщения # include “ < package_name > / < message_file_name # 1 > .h ” # include “ < package_name > / < message_file_name # 2 > .h ” … Причём message_file_name должно совпадать с именем файла .msg , который был создан ранее ( класс , представляющий это сообщение будет называться также ) . Publisher . В функции main ( ) у publisher-а необходимо создать ros : :NodeHandle < node_handle_name > ; и сообщить ему о нашем желании передавать сообщения типа < package_name > : : < message > ( < message > совпадает с < message_file_name > ) . Пусть в данном примере это будет my_mess из пакета my_package . Это делается командой ros : :Publisher < publisher_name > = < node_handle_name > .advertise < my_package : :my_mess > ( `` < topic_name > '' , < size > ) ; где < topic_name > это имя топика , через который будут общаться publisher и subscriber ; а < size > - размер буфера сообщений ( а треугольные скобочки после advertize - это конкретизация шаблонной функции ) . Затем создаётся сообщение my_package : :my_mess < message_name > ; И отправляется в топик : < publisher_name > .publish ( < message_name > ) ; Subscriber . Для subscriber-а необходимо описать функцию-handler , которая будет обрабатывать принятые сообщения : void < function_name > ( const my_package : :my_mess & < message_name > ) { // body } А в теле main ( ) необходимо создать подписчика : ros : :NodeHandle < node_handle_name > ; ros : :Subscriber < subscriber_name > = < node_handle_name > .subscribe ( `` < topic_name > '' , < size > , & < function_name > ) ; Обратите внимание , что в функцию subscribe ( ) передаётся указатель на функцию-обработчик . В package.xml файле требуется указать depend-ы ( build и run ) на roscpp и на пакеты , в которых были описаны сообщения , если они создавались в других пакетах . CMakeLists.txt в обоих случаях должны выглядеть следующим образом : cmake_minimum_required ( VERSION 2.8.3 ) project ( < project_name > ) find_package ( catkin REQUIRED COMPONENTS roscpp < package_msg > ) catkin_package ( ) include_directories ( include $ { catkin_INCLUDE_DIRS } ) add_executable ( < exe name > < source_file # 1 > .cpp < source_file # 2 > .cpp ... ) target_link_libraries ( < exe name > $ { catkin_LIBRARIES } ) courses/ros/lab2.txt · ",
                "Задание  Курсы » Robot OS » Задание courses : ros : lab3 Задание Робот потерялся и не может найти точку выхода . В эфир он посылает сообщения о собственныых координатах . Ему на помощь из точки выхода выдвинулся второй робот . Второй робот должен добраться до первого . Как только их координаты совпадут - второй робот начинает следовать к выходу - точке , откуда он начал своё движение . Первый робот начинает движение за вторым . Процесс заканчивается , когда оба робота достигают точки выхода . ( Усложнение ) Потерявшийся робот мечется в пространстве , пока до него добирается второй робот . Указание В rviz можно писать различные типы сообщений , которые уже описаны за нас ( не надо каждый раз строить велосипед из маркеров-точек ) . Полный список и описание поддерживаемых сообщений можно найти на вики . Так , например , сферу можно создать так : visualization_msgs : :Marker marker ; marker.type = visualization_msgs : :Marker : :SPHERE ; Если в тот же топик послать маркер с тем же id , но с другими координатами , то rviz сотрёт старый маркер и нарисует новый в новых координатах . В целом структуру программы можно описать так : в tf попадают и координаты потерявшегося робота и робота-помощника . По координатам потерявшегося робота помощник определяет направление движения и движется вдоль этого направления . Как только помощник достигает своей цели , происходит два события : помощник начинает движение к выходу , а потерявшийся робот едет вслед за помощником . ( Понятно , что помощник всё ещё должен посылать в эфир собственные координаты , чтобы потерявшийся робот знал , куда ехать ) courses/ros/lab3.txt · ",
                "Задание  Курсы » Robot OS » Задание courses : ros : lab4 Задание Запустить Navigation Stack , используя TurtleSim Navigation . Объяснить , какие ноды запускаются и что они делают Примечание Краткую инструкцию можно найти здесь http : //www.sauravag.com/2016/10/how-to-setup-turtlebot-simulator-in-ros-with-gazebo/ Описание всех пакетов , входящих в navigation stack , можно найти здесь http : //wiki.ros.org/navigation courses/ros/lab4.txt · ",
                "Лабораторная работа № 5 . Использование Gazebo  Курсы » Robot OS » Лабораторная работа № 5 . Использование Gazebo courses : ros : lab5 Лабораторная работа № 5 . Использование Gazebo В данной лабораторной работе предлагается реализовать ту же ситуацию , что и в лабораторной работе № 3 . Дополнительные ограничения : вместо Rviz необходимо использовать Gazebo извлекая информацию о преследуемом роботе из tf , нельзя указывать world в качестве базового фрейма роботы должны быть визуализированы правдоподобно ( нельзя обозначать роботов статичными квадратами ) Дополнительные сведения При запуске rosrun gazebo_ros gazebo физика симулятора может “ стоять на паузе ” . Отключить этот режим можно , например , используя сервис /gazebo/unpause_physics . Информацию о типе сообщения , принимаемого сервисом можно узнать командой rosservice info courses/ros/lab5.txt · ",
                "✎ Robot OS  Курсы » Robot OS courses : ros : start This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Robot OS ====== ==== Общие сведения ==== * [ [ https : //docs.google.com/spreadsheets/d/1bjmduR_H7cnEVUGmxIz6fFBP0t551lwUI0b6qpTIBkA/edit # gid=793990595|Ведомость ] ] * [ [ https : //github.com/anyfilatov/ROS-course|Ссылка на github ] ] * [ [ estimation_rules| Правила оценивания работ ] ] * [ [ topsecret| Условия курсовых работ ] ] ==== Ссылки на источники информации ==== * [ [ https : //stepic.org/course/ % D0 % 9E % D1 % 81 % D0 % BD % D0 % BE % D0 % B2 % D1 % 8B- % D0 % BF % D1 % 80 % D0 % BE % D0 % B3 % D1 % 80 % D0 % B0 % D0 % BC % D0 % BC % D0 % B8 % D1 % 80 % D0 % BE % D0 % B2 % D0 % B0 % D0 % BD % D0 % B8 % D1 % 8F- % D0 % B4 % D0 % BB % D1 % 8F-Linux-548|Как работать в Linux ] ] * [ [ http : //wiki.ros.org/kinetic/Installation/Ubuntu|Как установить ROS ] ] * [ [ http : //wiki.ros.org|Общая Wiki по ROS ] ] * [ [ https : //cse.sc.edu/~jokane/agitr/agitr-letter.pdf|Gentle introduction to ROS ( Учебник на английском ) ] ] * [ [ http : //fsuarez6.github.io/blog/workstation-setup-xenial/ |workstation-setup-xenial ] ] ==== Занятия ==== * [ [ class1| Занятие № 1 : Введение в среду ] ] * [ [ class2| Занятие № 2 : Детальное представление о среде ] ] * [ [ class3| Занятие № 3 : Базовые пакеты ROS : Rviz и tf ] ] * [ [ class4| Занятие № 4 : SLAM ] ] * [ [ class5| Занятие № 5 : Navigation stack ] ] * [ [ class6| Занятие № 6 : EKF SLAM & gMapping ] ] * [ [ class7| Занятие № 7 : Gazebo ] ] ==== Лабораторные работы ==== * [ [ lab1| Лабораторная работа № 1 : Реализация программы-писателя на ROS ] ] * [ [ lab2| Лабораторная работа № 2 : Взаимодействие посредством собственного типа сообщений в ROS ] ] * [ [ lab3| Лабораторная работа № 3 : Использование базовых пакетов ROS : RVIZ , TF ] ] * [ [ lab4| Лабораторная работа № 4 : Использование пакетов навигационного стека ] ] * [ [ lab5| Лабораторная работа № 5 : Использование пакета Gazebo ] ] courses/ros/start.txt · ",
                "Robot OS - Old revisions  Курсы » Robot OS courses : ros : start Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2022/12/10 09:08 Robot OS ( external edit ) ( current ) 2018/11/25 21:18 Robot OS – ↷ Page moved from start : ros : start to courses : ros : start kalishenko +2.1 KB 2018/11/25 21:18 Robot OS – ↷ Links adapted because of a move operation kalishenko -98 B 2018/11/25 21:18 Robot OS – ↷ Page moved and renamed from start : ros to start : ros : start kalishenko +2.2 KB 2018/11/25 21:08 Robot OS kalishenko +23 B 2018/11/15 09:15 Robot OS anton.filatov -6 B 2018/11/15 09:15 Robot OS anton.filatov +75 B 2018/10/05 05:07 Robot OS anton.filatov +2 B 2018/10/05 05:03 Robot OS anton.filatov -208 B 2018/04/16 07:27 Robot OS – external edit 127.0.0.1 ±0 B 2016/11/14 07:18 Robot OS – [ Общие сведения ] anton.filatov +139 B 2016/11/08 06:18 Robot OS – [ Общие сведения ] anton.filatov +69 B 2016/10/24 13:00 Robot OS – [ Лабораторные работы ] anton.filatov ±0 B 2016/10/24 13:00 Robot OS – [ Лабораторные работы ] anton.filatov +101 B 2016/10/24 13:00 Robot OS – [ Занятия ] anton.filatov +53 B 2016/10/18 05:54 Robot OS – [ Занятия ] anton.filatov ±0 B 2016/10/17 12:33 Robot OS – [ Занятия ] anton.filatov +66 B 2016/10/14 11:47 Robot OS – [ Ссылки на источники информации ] kkv +91 B 2016/10/10 13:00 Robot OS anton.filatov +111 B 2016/10/10 12:48 Robot OS – [ Занятия ] anton.filatov +63 B 2016/10/03 11:33 Robot OS – [ Занятия ] anton.filatov +51 B Show differences between selected revisions less recent > > courses/ros/start.txt · ",
                "Robot OS - "
            ]
        },
        {
            "name": "(производственная практика НИР)Аттестация магистрантов третьего семестра обучения",
            "url": "/doku.php/diplomants:start:calendar",
            "date": "\"2023/12/22 08:09\"",
            "data": [
                "Календарь работы магистров  Дипломникам » Дипломникам » Календарь работы магистров diplomants : start : calendar Table of Contents Календарь работы магистров Третий семестр магистратуры Отправка результатов Таблица с оценками Требования к выполнению заданий Отчет о НИР Доклад о проделанной работе Срок отправки материалов Выставление оценки Четвертый семестр магистратуры ( преддипломная практика ) Календарь работы магистров Данная таблица описывает основные этапы выполнения магистерской работы на шестом курсе . Этап Примерный срок В рамках Выбор направления и руководителя НИР Формирование списка литературы для Review НИР Появление репозитория и первых вики-страниц в нем НИР Отчет о НИР 20 декабря НИР Подготовлен обзор предметной области/статья для локальной конференции . 25 декабря ВКР Постановка задачи и описание предметной области ( тема , ОИ , ПИ , цель , проблема ) 25 февраля ВКР План проспект ПЗ 10 февраля ВКР Работоспособный прототип программы . 1 марта ВКР Написан черновик статьи по теме диплома , готовый к рецензированию . 15 марта ВКР Программная реализация ВКР Черновик основных разделов 20 апреля ВКР Готовность спецраздела ВКР Готовая пояснительная записка 1 мая ВКР Черновик слайдов и речи 15 мая ВКР 1 прогон слайдов ВКР Финальная записка ВКР Предзащита . ВКР Финальная речь и слайды ВКР Отзыв руководителя ВКР Рецензия ( для магистров ) 20 мая ВКР Защита Первая неделя июня ( ориентировочно ) ВКР Третий семестр магистратуры Отправка результатов Форма отправки результатов . https : //forms.gle/zto7SGVc1UV9r4oF7 Таблица с оценками https : //docs.google.com/spreadsheets/d/1kSPtR_QiBPGEEVWYeyMr5H-N9iUSiy41ypig-baVgtg/edit ? resourcekey # gid=1307613021 Требования к выполнению заданий Отчет о НИР Состав отчета и баллы ( 0-5 баллов ) : ( 0.5 балла ) Раздел “ Постановка задачи ” - актуальность , цель , задачи . ( 2 балла ) Раздел “ Результаты работы в осеннем семестре ” План ( копия плана из прошлого отчета ) Результаты за осенний семестр ( должен быть хотя бы один пункт , иначе баллы не засчитываются ) ссылки на репозиторий с исходным кодом ( вы написали что-то с нуля , расширили существующий проект , подготовили примеры для ваших алгоритмов ) и описание разработок , описание разработанных вами алгоритмов / моделей , библиографическая ссылка на статью с результатами по итогам семестра ( если статья написана коллективом авторов , нужно указать , что конкретно делал каждый из них ) , ( 1 балл ) Раздел “ Описание предполагаемого метода решения ” . Опишите в данном разделе все , что вы уже успели понять о том , каким будет ваше будущее решение в рамках диплома - архитектура , известные технические детали , используемые алгоритмы , сценарии использования , макеты интерфейса . Данный раздел оценивается 0 баллов при отсутствии содержательных деталей . ( 0.5 балла ) Раздел “ План на весенний семестр ” . Стоп-слова - доработать , доработка , переписать , рефакторинг , исправление « багов » / ошибок . Они показывают читателю , что в текущем семестре работа была сделана плохо , но весь следующий вы ее будете исправлять . Подобные задачии - техническая рутина , которая к вашему диплому отношение не имееет . Если вы имеете в виду под этим пунктом , что вам нужно добавить поддержку технологии … , повысить свойство … до уровня или обеспечить совместимость с … , то так и напишите . Включать в данный раздел формальные и очевидные пункты ( например , защитить диплом , написать пояснительную записку… ) нет необходимости . ( 1 балл ) Оформление Используйте шаблон ВУЗа для оформления . Формат отчета - PDF Рисунки ( И особенно графики зависимостей , схемы , диаграммы ) имеют подрисуночную подпись , читаемы , детали различимы , обозначена легенда и подписи осей . Название файла НИР3_НОМЕРГРУППЫ_ФАМИЛИЯ_ИНИЦИАЛЫ_ОТЧЕТ Доклад о проделанной работе Вам необходимо по результатам работы в семестре : подготовить презентацию в формате PDF не более 5 слайдов , Тиульный лист Что удалось сделать из плана Публикации / доклады за прошедший семестр выступить с докладом ( 4 минуты ) , ответить на вопросы ( 4 минуты ) . Ваш выступление будет оцениваться по 5 балльной шкале с точки зрения : понятности изложения , качества ответа на вопросы . Информация о дате докладов будет разослана не позже 24 ноября . Ориентировочный срок - вторая половина декабря . Методические материалы для подготовки к докладу https : //www.youtube.com/watch ? v=L5MMZbOA9ww Срок отправки материалов Материалы необходимо прислать до 23:59 по Московскому времени 20.12.2023 . Если материалы будут высланы позже дедлайна , то оценка будет снижена ( на один балл из 10 ) . Финальный дедлайн 10:00 26.12.23 по Московскому времени ( новые работы и исправления после этого срока НЕ БУДУТ ПРОВЕРЕНЫ ) Оценки по текущей сумме баллов выставляются в ведомость и передаются в деканат в 12:00 по Московскому времени 27.12.2022 . Выставление оценки Необходимое ( но не достаточное ) условие для получения положительной оценки - наличие отчета . Суммарные баллы за отчет и за доклад ( 0-10 ) . > =3 & & < 7 баллов - “ Удовлетворительно ” > =7 баллов - “ Хорошо ” ==10 баллов - “ Отлично ” Дробные баллы округляются . Итоговая оценка снижается при плагиате отчета с прошлого семестра . Четвертый семестр магистратуры ( преддипломная практика ) http : //se.moevm.info/doku.php/diplomants : start : diploma_attestation diplomants/start/calendar.txt · ",
                "Календарь работы магистров - ",
                "",
                "✎ Календарь работы магистров  Дипломникам » Дипломникам » Календарь работы магистров diplomants : start : calendar This page is read only . You can view the source , but not change it . Ask your administrator if you think this is wrong . ====== Календарь работы магистров ====== Данная таблица описывает основные этапы выполнения магистерской работы * * на шестом курсе * * . ^ Этап ^ Примерный срок ^ В рамках ^ | Выбор направления и руководителя | | НИР | | Формирование списка литературы для Review | | НИР | | Появление репозитория и первых вики-страниц в нем | | НИР | | [ [ http : //se.moevm.info/doku.php/diplomants : start : calendar # отчет_о_нир|Отчет о НИР ] ] | * * 20 декабря * * | НИР | | Подготовлен обзор предметной области/статья для локальной конференции . | 25 декабря | ВКР | | Постановка задачи и описание предметной области ( тема , ОИ , ПИ , цель , проблема ) | 25 февраля | ВКР | | План проспект ПЗ | 10 февраля | ВКР | | Работоспособный прототип программы . | 1 марта | ВКР | | Написан черновик статьи по теме диплома , готовый к рецензированию . | 15 марта | ВКР | | Программная реализация | | ВКР | | Черновик основных разделов | 20 апреля | ВКР | | Готовность спецраздела | | ВКР | | Готовая пояснительная записка | 1 мая | ВКР | | Черновик слайдов и речи | 15 мая | ВКР | | 1 прогон слайдов | | ВКР | | Финальная записка | | ВКР | | Предзащита . | | ВКР | | Финальная речь и слайды | | ВКР | | Отзыв руководителя | | ВКР | | Рецензия ( для магистров ) | 20 мая | ВКР | | Защита | Первая неделя июня ( ориентировочно ) | ВКР | ====== Третий семестр магистратуры ====== ===== Отправка результатов ===== Форма отправки результатов . https : //forms.gle/zto7SGVc1UV9r4oF7 ===== Таблица с оценками ===== https : //docs.google.com/spreadsheets/d/1kSPtR_QiBPGEEVWYeyMr5H-N9iUSiy41ypig-baVgtg/edit ? resourcekey # gid=1307613021 ===== Требования к выполнению заданий ===== ==== Отчет о НИР ==== Состав отчета и баллы ( 0-5 баллов ) : * ( 0.5 балла ) Раздел “ * * Постановка задачи * * ” - актуальность , цель , задачи . * ( 2 балла ) Раздел `` * * Результаты работы в осеннем семестре * * '' * План ( копия плана из прошлого отчета ) * Результаты * * за осенний семестр * * ( должен быть хотя бы один пункт , иначе баллы не засчитываются ) * ссылки на репозиторий с исходным кодом ( вы написали что-то с нуля , расширили существующий проект , подготовили примеры для ваших алгоритмов ) и описание разработок , * описание разработанных вами алгоритмов / моделей , * библиографическая ссылка на статью с результатами по итогам семестра ( если статья написана коллективом авторов , нужно указать , что конкретно делал каждый из них ) , * ( 1 балл ) Раздел `` * * Описание предполагаемого метода решения * * '' . Опишите в данном разделе все , что вы уже успели понять о том , каким будет ваше будущее решение в рамках диплома - архитектура , известные технические детали , используемые алгоритмы , сценарии использования , макеты интерфейса . Данный раздел оценивается 0 баллов при отсутствии содержательных деталей . * ( 0.5 балла ) Раздел `` * * План на весенний семестр '' * * . * Стоп-слова - * * доработать , доработка , переписать , рефакторинг , исправление « багов » / ошибок * * . Они показывают читателю , что в текущем семестре работа была сделана плохо , но весь следующий вы ее будете исправлять . Подобные задачии - техническая рутина , которая к вашему диплому отношение не имееет . Если вы имеете в виду под этим пунктом , что вам нужно добавить поддержку технологии ... , повысить свойство ... до уровня или обеспечить совместимость с ... , то так и напишите . * Включать в данный раздел формальные и очевидные пункты ( например , защитить диплом , написать пояснительную записку ... ) нет необходимости . * ( 1 балл ) Оформление * Используйте [ [ https : //etu.ru/assets/files/3004_4_ShABLON-otcheta-po-praktike.doc|шаблон ] ] ВУЗа для оформления . Формат отчета - * * PDF * * * Рисунки ( И особенно графики зависимостей , схемы , диаграммы ) имеют подрисуночную подпись , читаемы , детали различимы , обозначена легенда и подписи осей . * Название файла * * НИР3_НОМЕРГРУППЫ_ФАМИЛИЯ_ИНИЦИАЛЫ_ОТЧЕТ * * ==== Доклад о проделанной работе ==== Вам необходимо по результатам работы в семестре : * подготовить презентацию в формате PDF не более 5 слайдов , * Тиульный лист * Что удалось сделать из плана * Публикации / доклады за прошедший семестр * выступить с докладом ( 4 минуты ) , * ответить на вопросы ( 4 минуты ) . Ваш выступление будет оцениваться по 5 балльной шкале с точки зрения : * понятности изложения , * качества ответа на вопросы . Информация о дате докладов будет разослана не позже 24 ноября . Ориентировочный срок - вторая половина декабря . Методические материалы для подготовки к докладу https : //www.youtube.com/watch ? v=L5MMZbOA9ww ==== Срок отправки материалов ==== * Материалы необходимо прислать до 23:59 по Московскому времени 20.12.2023 . Если материалы будут высланы позже дедлайна , то оценка будет снижена ( на один балл из 10 ) . * Финальный дедлайн 10:00 26.12.23 по Московскому времени ( новые работы и исправления после этого срока НЕ БУДУТ ПРОВЕРЕНЫ ) * Оценки по текущей сумме баллов выставляются в ведомость и передаются в деканат в 12:00 по Московскому времени 27.12.2022 . ==== Выставление оценки ==== Необходимое ( но не достаточное ) условие для получения положительной оценки - наличие отчета . Суммарные баллы за отчет и за доклад ( 0-10 ) . * > =3 & & < 7 баллов - `` Удовлетворительно '' * > =7 баллов - `` Хорошо '' * ==10 баллов - `` Отлично '' Дробные баллы округляются . Итоговая оценка снижается при плагиате отчета с прошлого семестра . ===== Четвертый семестр магистратуры ( преддипломная практика ) ===== http : //se.moevm.info/doku.php/diplomants : start : diploma_attestation diplomants/start/calendar.txt · ",
                "Календарь работы магистров - Old revisions  Дипломникам » Дипломникам » Календарь работы магистров diplomants : start : calendar Old Revisions These are the older revisons of the current document . To revert to an old revision , select it from below , click Edit this page and save it . 2023/12/22 08:09 Календарь работы магистров – [ Отчет о НИР ] mark +1 B ( current ) 2023/12/22 08:09 Календарь работы магистров – [ Отчет о НИР ] mark +53 B 2023/12/22 07:20 Календарь работы магистров – [ Отчет о НИР ] mark +1.1 KB 2023/12/22 06:38 Календарь работы магистров – [ Отчет о НИР ] mark +26 B 2023/11/27 09:19 Календарь работы магистров – [ Таблица с оценками ] mark -12 B 2023/11/27 09:18 Календарь работы магистров – [ Отправка результатов ] mark +1 B 2023/11/27 09:17 Календарь работы магистров – [ Отчет о НИР ] mark +139 B 2023/08/31 15:13 Календарь работы магистров – [ Срок отправки материалов ] mark +222 B 2023/08/31 15:12 Календарь работы магистров – [ Срок отправки материалов ] mark ±0 B 2023/06/06 14:52 Календарь работы магистров – [ Выставление оценки ] mark +1 B 2023/06/06 14:51 Календарь работы магистров – [ Отчет о НИР ] mark -74 B 2023/03/20 09:33 Календарь работы магистров – [ Выставление оценки ] mark +173 B 2022/12/10 09:08 Календарь работы магистров – external edit 127.0.0.1 ±0 B 2022/12/09 13:33 Календарь работы магистров – [ Отчет о НИР ] mark +8 B 2022/11/22 14:39 Календарь работы магистров – [ Срок отправки материалов ] mark +33 B 2022/11/21 15:50 Календарь работы магистров mark +10 B 2022/10/11 13:33 Календарь работы магистров – [ Доклад о проделанной работе ] mark +1 B 2022/10/11 13:22 Календарь работы магистров – [ Отчет о НИР ] mark -10 B 2022/10/11 13:21 Календарь работы магистров – [ Выставление оценки ] mark +75 B 2022/10/11 13:21 Календарь работы магистров – [ Отчет о НИР ( для всех групп ) ] mark -29 B 2022/10/11 13:21 Календарь работы магистров – [ Доклад о проделанной работе ( RnD магистратура ) ] mark -85 B Show differences between selected revisions less recent > > diplomants/start/calendar.txt · ",
                "Календарь работы магистров - "
            ]
        },
        {
            "name": "Аттестация за преддипломную практику (весенний семестр 4 и 6 курса)",
            "url": "/doku.php/diplomants:start:diploma_attestation",
            "date": "\"2024/02/21 15:53\"",
            "data": []
        },
        {
            "name": "Допуск до защиты ВКР (проверка демонстрационных материалов)",
            "url": "/doku.php/diplomants:start:slides_checklist_etu",
            "date": "\"2023/05/30 08:47\"",
            "data": []
        }
    ],
    "date": "\"2022/12/10 09:08\""
}